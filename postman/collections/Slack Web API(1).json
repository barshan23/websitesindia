{
	"info": {
		"_postman_id": "4ab9ff49-a5c6-4da3-90fc-b4f17445ae33",
		"name": "Slack Web API",
		"description": "One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.\n\nContact Support:\n Name: Slack developer relations",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "512601-4ab9ff49-a5c6-4da3-90fc-b4f17445ae33"
	},
	"item": [
		{
			"name": "admin apps approve",
			"id": "619edca0-488f-4143-8b94-ecfd884501ca",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.apps:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "app_id",
							"value": "minim dolore Duis quis Ut",
							"description": "The id of the app to approve."
						},
						{
							"key": "request_id",
							"value": "officia",
							"description": "The id of the request to approve."
						},
						{
							"key": "team_id",
							"value": "eiusmod qui dolor in labore"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.apps.approve",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.apps.approve"
					]
				},
				"description": "Approve an app for installation on a workspace."
			},
			"response": [
				{
					"id": "4110b696-56e6-45cc-b2c5-5e25bc0b65ed",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.apps:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "The id of the app to approve.",
									"key": "app_id",
									"value": "minim dolore Duis quis Ut"
								},
								{
									"description": "The id of the request to approve.",
									"key": "request_id",
									"value": "officia"
								},
								{
									"key": "team_id",
									"value": "eiusmod qui dolor in labore"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.apps.approve",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.apps.approve"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "926ff574-ddc8-44b3-a6ba-4805cfa7ca99",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.apps:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "The id of the app to approve.",
									"key": "app_id",
									"value": "minim dolore Duis quis Ut"
								},
								{
									"description": "The id of the request to approve.",
									"key": "request_id",
									"value": "officia"
								},
								{
									"key": "team_id",
									"value": "eiusmod qui dolor in labore"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.apps.approve",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.apps.approve"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin apps approved list",
			"id": "76b88c9a-e489-440d-8cbb-98b346871291",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/admin.apps.approved.list?token=quis amet commodo&limit=74567849&cursor=quis amet commodo&team_id=quis amet commodo&enterprise_id=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.apps.approved.list"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "(Required) Authentication token. Requires scope: `admin.apps:read`"
						},
						{
							"key": "limit",
							"value": "74567849",
							"description": "The maximum number of items to return. Must be between 1 - 1000 both inclusive."
						},
						{
							"key": "cursor",
							"value": "quis amet commodo",
							"description": "Set `cursor` to `next_cursor` returned by the previous call to list items in the next page"
						},
						{
							"key": "team_id",
							"value": "quis amet commodo"
						},
						{
							"key": "enterprise_id",
							"value": "quis amet commodo"
						}
					]
				},
				"description": "List approved apps for an org or workspace."
			},
			"response": [
				{
					"id": "fc8d0192-c3ca-48ed-9110-8c9f3ec4fb17",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.apps.approved.list?token=quis amet commodo&limit=74567849&cursor=quis amet commodo&team_id=quis amet commodo&enterprise_id=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.apps.approved.list"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								},
								{
									"key": "team_id",
									"value": "quis amet commodo"
								},
								{
									"key": "enterprise_id",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"approved_apps\": [\n    {\n      \"app\": {\n        \"additional_info\": \"\",\n        \"app_directory_url\": \"https://myteam.enterprise.slack.com/apps/A0W7UKG8E-my-test-app\",\n        \"app_homepage_url\": \"https://www.slack.com\",\n        \"description\": \"test app\",\n        \"help_url\": \"https://www.slack.com\",\n        \"icons\": {\n          \"image_1024\": \"https://3026743124446w96_2bd4ea1ad1f89a23c242_1024.png\",\n          \"image_128\": \"https://30267341249446w6_2bd4ea1ad1f89a23c242_128.png\",\n          \"image_192\": \"https://30267431249446w6_2bd4ea1ad1f89a23c242_192.png\",\n          \"image_32\": \"https://302674312496446w_2bd4ea1ad1f89a23c242_32.png\",\n          \"image_36\": \"https://302674312496446w_2bd4ea1ad1f89a23c242_36.png\",\n          \"image_48\": \"https://302674312496446w_2bd4ea1ad1f89a23c242_48.png\",\n          \"image_512\": \"https://30267431249446w6_2bd4ea1ad1f89a23c242_512.png\",\n          \"image_64\": \"https://302674312496446w_2bd4ea1ad1f89a23c242_64.png\",\n          \"image_72\": \"https://302674312496446w_2bd4ea1ad1f89a23c242_72.png\",\n          \"image_96\": \"https://302674312496446w_2bd4ea1ad1f89a23c242_96.png\",\n          \"image_original\": \"https://302674446w12496_2bd4ea1ad1f89a23c242_original.png\"\n        },\n        \"id\": \"A0W7UKG8E\",\n        \"is_app_directory_approved\": false,\n        \"is_internal\": false,\n        \"name\": \"My Test App\",\n        \"privacy_policy_url\": \"https://www.slack.com\"\n      },\n      \"date_updated\": 1574296707,\n      \"last_resolved_by\": {\n        \"actor_id\": \"W0G82F4FD\",\n        \"actor_type\": \"user\"\n      },\n      \"scopes\": [\n        {\n          \"description\": \"Add the ability for people to direct message or mention @my_test_app\",\n          \"is_sensitive\": true,\n          \"name\": \"bot\",\n          \"token_type\": \"bot\"\n        }\n      ]\n    }\n  ],\n  \"ok\": true,\n  \"response_metadata\": {\n    \"next_cursor\": \"\"\n  }\n}"
				},
				{
					"id": "3ac7b2fa-78c6-4756-8d6c-02a0a764cd48",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.apps.approved.list?token=quis amet commodo&limit=74567849&cursor=quis amet commodo&team_id=quis amet commodo&enterprise_id=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.apps.approved.list"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								},
								{
									"key": "team_id",
									"value": "quis amet commodo"
								},
								{
									"key": "enterprise_id",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin apps requests list",
			"id": "2c0812c7-cccd-4dbc-918e-00894cbbfe34",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/admin.apps.requests.list?token=quis amet commodo&limit=74567849&cursor=quis amet commodo&team_id=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.apps.requests.list"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "(Required) Authentication token. Requires scope: `admin.apps:read`"
						},
						{
							"key": "limit",
							"value": "74567849",
							"description": "The maximum number of items to return. Must be between 1 - 1000 both inclusive."
						},
						{
							"key": "cursor",
							"value": "quis amet commodo",
							"description": "Set `cursor` to `next_cursor` returned by the previous call to list items in the next page"
						},
						{
							"key": "team_id",
							"value": "quis amet commodo"
						}
					]
				},
				"description": "List app requests for a team/workspace."
			},
			"response": [
				{
					"id": "e66b41f2-c144-44e4-92a6-5585e4f3e26c",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.apps.requests.list?token=quis amet commodo&limit=74567849&cursor=quis amet commodo&team_id=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.apps.requests.list"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								},
								{
									"key": "team_id",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"app_requests\": [\n    {\n      \"app\": {\n        \"additional_info\": \"\",\n        \"app_directory_url\": \"https://acmecorp.slack.com/apps/A061BL8RQ0-test-app\",\n        \"app_homepage_url\": \"\",\n        \"description\": \"\",\n        \"help_url\": \"\",\n        \"icons\": {\n          \"image_1024\": \"/cdn/15258203/img/testapp/service_1024.png\",\n          \"image_128\": \"/cdn/157258203/img/testapp/service_128.png\",\n          \"image_192\": \"/cdn/157258203/img/testapp/service_192.png\",\n          \"image_32\": \"/cdn/157658203/img/testapp/service_32.png\",\n          \"image_36\": \"/cdn/157658203/img/testapp/service_36.png\",\n          \"image_48\": \"/cdn/157658203/img/testapp/service_48.png\",\n          \"image_512\": \"/cdn/15758203/img/testapp/service_512.png\",\n          \"image_64\": \"/cdn/157658203/img/testapp/service_64.png\",\n          \"image_72\": \"/cdn/157658203/img/testapp/service_72.png\",\n          \"image_96\": \"/cdn/157658203/img/testapp/service_96.png\"\n        },\n        \"id\": \"A061BL8RQ0\",\n        \"is_app_directory_approved\": true,\n        \"is_internal\": false,\n        \"name\": \"Test App\",\n        \"privacy_policy_url\": \"https://testapp.com/privacy\"\n      },\n      \"date_created\": 1578956327,\n      \"id\": \"Ar0XJGFLMLS\",\n      \"message\": \"test test again\",\n      \"previous_resolution\": null,\n      \"scopes\": [\n        {\n          \"description\": \"Post messages to specific channels in Slack\",\n          \"is_sensitive\": false,\n          \"name\": \"incoming-webhook\",\n          \"token_type\": \"user\"\n        }\n      ],\n      \"team\": {\n        \"domain\": \"acmecorp\",\n        \"id\": \"T0M94LNUCR\",\n        \"name\": \"Acme Corp\"\n      },\n      \"user\": {\n        \"email\": \"janedoe@example.com\",\n        \"id\": \"W08RA9G5HR\",\n        \"name\": \"Jane Doe\"\n      }\n    }\n  ],\n  \"ok\": true,\n  \"response_metadata\": {\n    \"next_cursor\": \"\"\n  }\n}"
				},
				{
					"id": "fa1d80e0-a8ac-4cd4-9ff3-b3db6c9c6cd5",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.apps.requests.list?token=quis amet commodo&limit=74567849&cursor=quis amet commodo&team_id=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.apps.requests.list"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								},
								{
									"key": "team_id",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"missing_scope\",\n  \"needed\": \"admin.apps:read\",\n  \"ok\": false,\n  \"provided\": \"read,client,admin,identify,post,apps\"\n}"
				}
			]
		},
		{
			"name": "admin apps restrict",
			"id": "0453a08c-5d4f-4cbc-b60e-af0bb15b7700",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.apps:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "app_id",
							"value": "amet",
							"description": "The id of the app to restrict."
						},
						{
							"key": "request_id",
							"value": "do commodo",
							"description": "The id of the request to restrict."
						},
						{
							"key": "team_id",
							"value": "consectetur non"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.apps.restrict",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.apps.restrict"
					]
				},
				"description": "Restrict an app for installation on a workspace."
			},
			"response": [
				{
					"id": "18a798e0-5539-4ed0-87e6-12097b2e7d93",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.apps:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "The id of the app to restrict.",
									"key": "app_id",
									"value": "amet"
								},
								{
									"description": "The id of the request to restrict.",
									"key": "request_id",
									"value": "do commodo"
								},
								{
									"key": "team_id",
									"value": "consectetur non"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.apps.restrict",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.apps.restrict"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "f413342a-cb06-47bf-aba6-e34af4af8f1c",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.apps:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "The id of the app to restrict.",
									"key": "app_id",
									"value": "amet"
								},
								{
									"description": "The id of the request to restrict.",
									"key": "request_id",
									"value": "do commodo"
								},
								{
									"key": "team_id",
									"value": "consectetur non"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.apps.restrict",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.apps.restrict"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin apps restricted list",
			"id": "2693f8b9-59bb-47b6-9843-a188880618f8",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/admin.apps.restricted.list?token=quis amet commodo&limit=74567849&cursor=quis amet commodo&team_id=quis amet commodo&enterprise_id=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.apps.restricted.list"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "(Required) Authentication token. Requires scope: `admin.apps:read`"
						},
						{
							"key": "limit",
							"value": "74567849",
							"description": "The maximum number of items to return. Must be between 1 - 1000 both inclusive."
						},
						{
							"key": "cursor",
							"value": "quis amet commodo",
							"description": "Set `cursor` to `next_cursor` returned by the previous call to list items in the next page"
						},
						{
							"key": "team_id",
							"value": "quis amet commodo"
						},
						{
							"key": "enterprise_id",
							"value": "quis amet commodo"
						}
					]
				},
				"description": "List restricted apps for an org or workspace."
			},
			"response": [
				{
					"id": "9c97ef50-ea91-4bc0-98c5-31d8fac897e7",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.apps.restricted.list?token=quis amet commodo&limit=74567849&cursor=quis amet commodo&team_id=quis amet commodo&enterprise_id=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.apps.restricted.list"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								},
								{
									"key": "team_id",
									"value": "quis amet commodo"
								},
								{
									"key": "enterprise_id",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"response_metadata\": {\n    \"next_cursor\": \"\"\n  },\n  \"restricted_apps\": [\n    {\n      \"app\": {\n        \"additional_info\": \"\",\n        \"app_directory_url\": \"https://myteam.enterprise.slack.com/apps/A0FDLP8M2L-my-test-app\",\n        \"app_homepage_url\": \"https://example.com\",\n        \"description\": \"A fun test app for Slack\",\n        \"help_url\": \"https://example.com\",\n        \"icons\": {\n          \"image_1024\": \"https://1433265338rl878408_eb57dbc818daa4ba15d6_1024.png\",\n          \"image_128\": \"https://4332653438rl87808_eb57dbc818daa4ba15d6_128.png\",\n          \"image_192\": \"https://4332653438rl87808_eb57dbc818daa4ba15d6_192.png\",\n          \"image_32\": \"https://143326534038rl8788_eb57dbc818daa4ba15d6_32.png\",\n          \"image_36\": \"https://143326534038rl8788_eb57dbc818daa4ba15d6_36.png\",\n          \"image_48\": \"https://143326534038rl8788_eb57dbc818daa4ba15d6_48.png\",\n          \"image_512\": \"https://4332653438rl87808_eb57dbc818daa4ba15d6_512.png\",\n          \"image_64\": \"https://143326534038rl8788_eb57dbc818daa4ba15d6_64.png\",\n          \"image_72\": \"https://143326534038rl8788_eb57dbc818daa4ba15d6_72.png\",\n          \"image_96\": \"https://143326534038rl8788_eb57dbc818daa4ba15d6_96.png\",\n          \"image_original\": \"https://143338rl8782653408_eb57dbc818daa4ba15d6_original.png\"\n        },\n        \"id\": \"A0FDLP8M2L\",\n        \"is_app_directory_approved\": true,\n        \"is_internal\": false,\n        \"name\": \"My Test App\",\n        \"privacy_policy_url\": \"https://example.com\"\n      },\n      \"date_updated\": 1574296721,\n      \"last_resolved_by\": {\n        \"actor_id\": \"W0G82LMFD\",\n        \"actor_type\": \"user\"\n      },\n      \"scopes\": [\n        {\n          \"description\": \"Upload, edit, and delete files on the user‟s behalf\",\n          \"is_sensitive\": true,\n          \"name\": \"files:write:user\",\n          \"token_type\": \"user\"\n        }\n      ]\n    }\n  ]\n}"
				},
				{
					"id": "f732bd48-6e79-465a-8fff-6fd592556ebd",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.apps.restricted.list?token=quis amet commodo&limit=74567849&cursor=quis amet commodo&team_id=quis amet commodo&enterprise_id=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.apps.restricted.list"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								},
								{
									"key": "team_id",
									"value": "quis amet commodo"
								},
								{
									"key": "enterprise_id",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin conversations archive",
			"id": "c55e5238-83d6-4269-8fd9-6260f0773676",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel_id",
							"value": "in exercitation voluptate",
							"description": "(Required) The channel to archive."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.conversations.archive",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.conversations.archive"
					]
				},
				"description": "Archive a public or private channel."
			},
			"response": [
				{
					"id": "5d9d5d43-d721-4ad1-85c3-6d4cac49a585",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The channel to archive.",
									"key": "channel_id",
									"value": "in exercitation voluptate"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.archive",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.archive"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "0a355b69-d693-4f1f-990b-6af9f37a455d",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The channel to archive.",
									"key": "channel_id",
									"value": "in exercitation voluptate"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.archive",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.archive"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin conversations convert To Private",
			"id": "0cd96fd5-5765-45c3-a7c8-efa58b9f30d0",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel_id",
							"value": "consequat Ut aute",
							"description": "(Required) The channel to convert to private."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.conversations.convertToPrivate",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.conversations.convertToPrivate"
					]
				},
				"description": "Convert a public channel to a private channel."
			},
			"response": [
				{
					"id": "5710cb71-7116-4793-8bdf-61b9d5d1b690",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The channel to convert to private.",
									"key": "channel_id",
									"value": "consequat Ut aute"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.convertToPrivate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.convertToPrivate"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "cfc13814-bf66-4260-a442-0bc77411554e",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The channel to convert to private.",
									"key": "channel_id",
									"value": "consequat Ut aute"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.convertToPrivate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.convertToPrivate"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin conversations create",
			"id": "87db3c38-a511-4f2f-a84f-195a6cffc363",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "name",
							"value": "aliquip cillum do",
							"description": "(Required) Name of the public or private channel to create."
						},
						{
							"key": "is_private",
							"value": "true",
							"description": "(Required) When `true`, creates a private channel instead of a public channel"
						},
						{
							"key": "description",
							"value": "in amet",
							"description": "Description of the public or private channel to create."
						},
						{
							"key": "org_wide",
							"value": "true",
							"description": "When `true`, the channel will be available org-wide. Note: if the channel is not `org_wide=true`, you must specify a `team_id` for this channel"
						},
						{
							"key": "team_id",
							"value": "adipisicing magna reprehenderit labore consectetur",
							"description": "The workspace to create the channel in. Note: this argument is required unless you set `org_wide=true`."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.conversations.create",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.conversations.create"
					]
				},
				"description": "Create a public or private channel-based conversation."
			},
			"response": [
				{
					"id": "6a81660d-7d9e-4370-8878-a61f3ba92110",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Name of the public or private channel to create.",
									"key": "name",
									"value": "aliquip cillum do"
								},
								{
									"description": "(Required) When `true`, creates a private channel instead of a public channel",
									"key": "is_private",
									"value": "true"
								},
								{
									"description": "Description of the public or private channel to create.",
									"key": "description",
									"value": "in amet"
								},
								{
									"description": "When `true`, the channel will be available org-wide. Note: if the channel is not `org_wide=true`, you must specify a `team_id` for this channel",
									"key": "org_wide",
									"value": "true"
								},
								{
									"description": "The workspace to create the channel in. Note: this argument is required unless you set `org_wide=true`.",
									"key": "team_id",
									"value": "adipisicing magna reprehenderit labore consectetur"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.create"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"channel_id\": \"C12345\",\n  \"ok\": true\n}"
				},
				{
					"id": "c0d24156-ae14-4c00-b4d1-4cdaf8fe12a9",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Name of the public or private channel to create.",
									"key": "name",
									"value": "aliquip cillum do"
								},
								{
									"description": "(Required) When `true`, creates a private channel instead of a public channel",
									"key": "is_private",
									"value": "true"
								},
								{
									"description": "Description of the public or private channel to create.",
									"key": "description",
									"value": "in amet"
								},
								{
									"description": "When `true`, the channel will be available org-wide. Note: if the channel is not `org_wide=true`, you must specify a `team_id` for this channel",
									"key": "org_wide",
									"value": "true"
								},
								{
									"description": "The workspace to create the channel in. Note: this argument is required unless you set `org_wide=true`.",
									"key": "team_id",
									"value": "adipisicing magna reprehenderit labore consectetur"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.create"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin conversations delete",
			"id": "e0cbde6a-5268-439b-9a76-83e7c33d9eef",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel_id",
							"value": "consectetur eu",
							"description": "(Required) The channel to delete."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.conversations.delete",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.conversations.delete"
					]
				},
				"description": "Delete a public or private channel."
			},
			"response": [
				{
					"id": "8cb2fe8e-927e-460c-b7f8-b7d13e8d7aa9",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The channel to delete.",
									"key": "channel_id",
									"value": "consectetur eu"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.delete"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "c0fb171c-ca0a-41aa-8ae4-bb7f8183f017",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The channel to delete.",
									"key": "channel_id",
									"value": "consectetur eu"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.delete"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin conversations disconnect Shared",
			"id": "153bae78-9da7-4d02-a590-e92e210d2a2c",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel_id",
							"value": "occaecat nulla pariatur",
							"description": "(Required) The channel to be disconnected from some workspaces."
						},
						{
							"key": "leaving_team_ids",
							"value": "reprehenderit Ut ullamco fugiat deserunt",
							"description": "The team to be removed from the channel. Currently only a single team id can be specified."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.conversations.disconnectShared",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.conversations.disconnectShared"
					]
				},
				"description": "Disconnect a connected channel from one or more workspaces."
			},
			"response": [
				{
					"id": "0600f7d6-3d4f-4fc2-97d0-0f5469f9885e",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The channel to be disconnected from some workspaces.",
									"key": "channel_id",
									"value": "occaecat nulla pariatur"
								},
								{
									"description": "The team to be removed from the channel. Currently only a single team id can be specified.",
									"key": "leaving_team_ids",
									"value": "reprehenderit Ut ullamco fugiat deserunt"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.disconnectShared",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.disconnectShared"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "11a581ad-d6ca-4b19-8542-14b7af5f1585",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The channel to be disconnected from some workspaces.",
									"key": "channel_id",
									"value": "occaecat nulla pariatur"
								},
								{
									"description": "The team to be removed from the channel. Currently only a single team id can be specified.",
									"key": "leaving_team_ids",
									"value": "reprehenderit Ut ullamco fugiat deserunt"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.disconnectShared",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.disconnectShared"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin conversations ekm list Original Connected Channel Info",
			"id": "09559633-0ba5-4bb8-892f-7e591c2fb365",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/admin.conversations.ekm.listOriginalConnectedChannelInfo?token=quis amet commodo&channel_ids=quis amet commodo&team_ids=quis amet commodo&limit=74567849&cursor=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.conversations.ekm.listOriginalConnectedChannelInfo"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "(Required) Authentication token. Requires scope: `admin.conversations:read`"
						},
						{
							"key": "channel_ids",
							"value": "quis amet commodo",
							"description": "A comma-separated list of channels to filter to."
						},
						{
							"key": "team_ids",
							"value": "quis amet commodo",
							"description": "A comma-separated list of the workspaces to which the channels you would like returned belong."
						},
						{
							"key": "limit",
							"value": "74567849",
							"description": "The maximum number of items to return. Must be between 1 - 1000 both inclusive."
						},
						{
							"key": "cursor",
							"value": "quis amet commodo",
							"description": "Set `cursor` to `next_cursor` returned by the previous call to list items in the next page."
						}
					]
				},
				"description": "List all disconnected channels—i.e., channels that were once connected to other workspaces and then disconnected—and the corresponding original channel IDs for key revocation with EKM."
			},
			"response": [
				{
					"id": "f54c643c-9316-4d47-aa3d-39c33acbf0e1",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.ekm.listOriginalConnectedChannelInfo?token=quis amet commodo&channel_ids=quis amet commodo&team_ids=quis amet commodo&limit=74567849&cursor=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.ekm.listOriginalConnectedChannelInfo"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "channel_ids",
									"value": "quis amet commodo"
								},
								{
									"key": "team_ids",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"channels\": [\n    {\n      \"id\": \"string\",\n      \"internal_team_ids\": \"array\",\n      \"original_connected_channel_id\": \"string\",\n      \"original_connected_host_id\": \"string\"\n    }\n  ],\n  \"ok\": true\n}"
				},
				{
					"id": "e1eabc01-bb97-449b-a58f-33b8683c17b8",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.ekm.listOriginalConnectedChannelInfo?token=quis amet commodo&channel_ids=quis amet commodo&team_ids=quis amet commodo&limit=74567849&cursor=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.ekm.listOriginalConnectedChannelInfo"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "channel_ids",
									"value": "quis amet commodo"
								},
								{
									"key": "team_ids",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin conversations get Conversation Prefs",
			"id": "4d7a1dfc-93bc-41b2-ad76-96e79481c796",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.conversations:read`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/admin.conversations.getConversationPrefs?channel_id=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.conversations.getConversationPrefs"
					],
					"query": [
						{
							"key": "channel_id",
							"value": "quis amet commodo",
							"description": "(Required) The channel to get preferences for."
						}
					]
				},
				"description": "Get conversation preferences for a public or private channel."
			},
			"response": [
				{
					"id": "afa21f65-5ace-4ceb-a4e6-c9817a15fb41",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:read`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.getConversationPrefs?channel_id=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.getConversationPrefs"
							],
							"query": [
								{
									"key": "channel_id",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "61def4b6-3d70-4df1-a104-6ac7a9696c9d",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:read`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.getConversationPrefs?channel_id=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.getConversationPrefs"
							],
							"query": [
								{
									"key": "channel_id",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin conversations get Teams",
			"id": "9aa7ea54-48c8-4ab0-9ffa-736ba681e848",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.conversations:read`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/admin.conversations.getTeams?channel_id=quis amet commodo&cursor=quis amet commodo&limit=74567849",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.conversations.getTeams"
					],
					"query": [
						{
							"key": "channel_id",
							"value": "quis amet commodo",
							"description": "(Required) The channel to determine connected workspaces within the organization for."
						},
						{
							"key": "cursor",
							"value": "quis amet commodo",
							"description": "Set `cursor` to `next_cursor` returned by the previous call to list items in the next page"
						},
						{
							"key": "limit",
							"value": "74567849",
							"description": "The maximum number of items to return. Must be between 1 - 1000 both inclusive."
						}
					]
				},
				"description": "Get all the workspaces a given public or private channel is connected to within this Enterprise org."
			},
			"response": [
				{
					"id": "2051aac1-3881-4072-9f84-cc20dc2f8955",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:read`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.getTeams?channel_id=quis amet commodo&cursor=quis amet commodo&limit=74567849",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.getTeams"
							],
							"query": [
								{
									"key": "channel_id",
									"value": "quis amet commodo"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"teams\": [\n    \"T1234\",\n    \"T5678\"\n  ]\n}"
				},
				{
					"id": "6f8e760a-fdac-4611-9b52-c90964304c97",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:read`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.getTeams?channel_id=quis amet commodo&cursor=quis amet commodo&limit=74567849",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.getTeams"
							],
							"query": [
								{
									"key": "channel_id",
									"value": "quis amet commodo"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin conversations invite",
			"id": "1530c9db-214c-4ac6-be15-69a0bc7f62af",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "user_ids",
							"value": "deserunt Excepteur",
							"description": "(Required) The users to invite."
						},
						{
							"key": "channel_id",
							"value": "quis et",
							"description": "(Required) The channel that the users will be invited to."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.conversations.invite",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.conversations.invite"
					]
				},
				"description": "Invite a user to a public or private channel."
			},
			"response": [
				{
					"id": "b33e10dc-e823-4719-a580-119a8efc0e17",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The users to invite.",
									"key": "user_ids",
									"value": "deserunt Excepteur"
								},
								{
									"description": "(Required) The channel that the users will be invited to.",
									"key": "channel_id",
									"value": "quis et"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.invite",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.invite"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "b44bfc93-49a2-4a04-b926-464b786265c6",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The users to invite.",
									"key": "user_ids",
									"value": "deserunt Excepteur"
								},
								{
									"description": "(Required) The channel that the users will be invited to.",
									"key": "channel_id",
									"value": "quis et"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.invite",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.invite"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin conversations rename",
			"id": "a95dd50a-5c25-4ef0-8fab-52dfc875b5e2",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel_id",
							"value": "quis repre",
							"description": "(Required) The channel to rename."
						},
						{
							"key": "name",
							"value": "aliqua elit dolore",
							"description": "(Required) "
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.conversations.rename",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.conversations.rename"
					]
				},
				"description": "Rename a public or private channel."
			},
			"response": [
				{
					"id": "e27d28d8-3dba-40fb-922a-6784251d02e4",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The channel to rename.",
									"key": "channel_id",
									"value": "quis repre"
								},
								{
									"description": "(Required) ",
									"key": "name",
									"value": "aliqua elit dolore"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.rename",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.rename"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "a88172e8-8ba2-4b37-9406-e187dcd90f18",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The channel to rename.",
									"key": "channel_id",
									"value": "quis repre"
								},
								{
									"description": "(Required) ",
									"key": "name",
									"value": "aliqua elit dolore"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.rename",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.rename"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin conversations restrict Access add Group",
			"id": "46531794-c70a-48e2-ab72-889a235d1a57",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "token",
							"value": "sed aliquip occaecat do mollit",
							"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`"
						},
						{
							"key": "group_id",
							"value": "occaecat",
							"description": "(Required) The [IDP Group](https://slack.com/help/articles/115001435788-Connect-identity-provider-groups-to-your-Enterprise-Grid-org) ID to be an allowlist for the private channel."
						},
						{
							"key": "channel_id",
							"value": "amet nulla laborum",
							"description": "(Required) The channel to link this group to."
						},
						{
							"key": "team_id",
							"value": "adipisicing dolor dolor amet",
							"description": "The workspace where the channel exists. This argument is required for channels only tied to one workspace, and optional for channels that are shared across an organization."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.conversations.restrictAccess.addGroup",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.conversations.restrictAccess.addGroup"
					]
				},
				"description": "Add an allowlist of IDP groups for accessing a channel"
			},
			"response": [
				{
					"id": "cf26af20-5dab-40f7-9743-a62077f24e58",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
									"key": "token",
									"value": "sed aliquip occaecat do mollit"
								},
								{
									"description": "(Required) The [IDP Group](https://slack.com/help/articles/115001435788-Connect-identity-provider-groups-to-your-Enterprise-Grid-org) ID to be an allowlist for the private channel.",
									"key": "group_id",
									"value": "occaecat"
								},
								{
									"description": "(Required) The channel to link this group to.",
									"key": "channel_id",
									"value": "amet nulla laborum"
								},
								{
									"description": "The workspace where the channel exists. This argument is required for channels only tied to one workspace, and optional for channels that are shared across an organization.",
									"key": "team_id",
									"value": "adipisicing dolor dolor amet"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.restrictAccess.addGroup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.restrictAccess.addGroup"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "a2c12787-e7f0-4f62-95c1-15d430a9bd22",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
									"key": "token",
									"value": "sed aliquip occaecat do mollit"
								},
								{
									"description": "(Required) The [IDP Group](https://slack.com/help/articles/115001435788-Connect-identity-provider-groups-to-your-Enterprise-Grid-org) ID to be an allowlist for the private channel.",
									"key": "group_id",
									"value": "occaecat"
								},
								{
									"description": "(Required) The channel to link this group to.",
									"key": "channel_id",
									"value": "amet nulla laborum"
								},
								{
									"description": "The workspace where the channel exists. This argument is required for channels only tied to one workspace, and optional for channels that are shared across an organization.",
									"key": "team_id",
									"value": "adipisicing dolor dolor amet"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.restrictAccess.addGroup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.restrictAccess.addGroup"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin conversations restrict Access list Groups",
			"id": "0df3e696-99f8-458f-97cd-9d443a09639d",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/admin.conversations.restrictAccess.listGroups?token=quis amet commodo&channel_id=quis amet commodo&team_id=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.conversations.restrictAccess.listGroups"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "(Required) Authentication token. Requires scope: `admin.conversations:read`"
						},
						{
							"key": "channel_id",
							"value": "quis amet commodo",
							"description": "(Required) "
						},
						{
							"key": "team_id",
							"value": "quis amet commodo",
							"description": "The workspace where the channel exists. This argument is required for channels only tied to one workspace, and optional for channels that are shared across an organization."
						}
					]
				},
				"description": "List all IDP Groups linked to a channel"
			},
			"response": [
				{
					"id": "b8fa23ea-908b-4eb4-9de9-8bf819e64cee",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.restrictAccess.listGroups?token=quis amet commodo&channel_id=quis amet commodo&team_id=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.restrictAccess.listGroups"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "channel_id",
									"value": "quis amet commodo"
								},
								{
									"key": "team_id",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"group_ids\": [\n    \"YOUR_GROUP_ID\"\n  ],\n  \"ok\": true\n}"
				},
				{
					"id": "a0f685e1-c0d9-495d-a199-68596968b965",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.restrictAccess.listGroups?token=quis amet commodo&channel_id=quis amet commodo&team_id=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.restrictAccess.listGroups"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "channel_id",
									"value": "quis amet commodo"
								},
								{
									"key": "team_id",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin conversations restrict Access remove Group",
			"id": "3b09ac82-785b-4265-a341-b3c989005dd7",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "token",
							"value": "adipisicing deserunt",
							"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`"
						},
						{
							"key": "team_id",
							"value": "ex labore",
							"description": "(Required) The workspace where the channel exists. This argument is required for channels only tied to one workspace, and optional for channels that are shared across an organization."
						},
						{
							"key": "group_id",
							"value": "occaecat dolor",
							"description": "(Required) The [IDP Group](https://slack.com/help/articles/115001435788-Connect-identity-provider-groups-to-your-Enterprise-Grid-org) ID to remove from the private channel."
						},
						{
							"key": "channel_id",
							"value": "Lorem null",
							"description": "(Required) The channel to remove the linked group from."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.conversations.restrictAccess.removeGroup",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.conversations.restrictAccess.removeGroup"
					]
				},
				"description": "Remove a linked IDP group linked from a private channel"
			},
			"response": [
				{
					"id": "f93ef911-418b-4332-9b24-7269e0baf5fa",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
									"key": "token",
									"value": "adipisicing deserunt"
								},
								{
									"description": "(Required) The workspace where the channel exists. This argument is required for channels only tied to one workspace, and optional for channels that are shared across an organization.",
									"key": "team_id",
									"value": "ex labore"
								},
								{
									"description": "(Required) The [IDP Group](https://slack.com/help/articles/115001435788-Connect-identity-provider-groups-to-your-Enterprise-Grid-org) ID to remove from the private channel.",
									"key": "group_id",
									"value": "occaecat dolor"
								},
								{
									"description": "(Required) The channel to remove the linked group from.",
									"key": "channel_id",
									"value": "Lorem null"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.restrictAccess.removeGroup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.restrictAccess.removeGroup"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "283ebd39-f439-4089-8585-5e39f4a2322d",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
									"key": "token",
									"value": "adipisicing deserunt"
								},
								{
									"description": "(Required) The workspace where the channel exists. This argument is required for channels only tied to one workspace, and optional for channels that are shared across an organization.",
									"key": "team_id",
									"value": "ex labore"
								},
								{
									"description": "(Required) The [IDP Group](https://slack.com/help/articles/115001435788-Connect-identity-provider-groups-to-your-Enterprise-Grid-org) ID to remove from the private channel.",
									"key": "group_id",
									"value": "occaecat dolor"
								},
								{
									"description": "(Required) The channel to remove the linked group from.",
									"key": "channel_id",
									"value": "Lorem null"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.restrictAccess.removeGroup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.restrictAccess.removeGroup"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin conversations search",
			"id": "89925468-d093-406c-86ab-cb9f30409625",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.conversations:read`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/admin.conversations.search?team_ids=quis amet commodo&query=quis amet commodo&limit=74567849&cursor=quis amet commodo&search_channel_types=quis amet commodo&sort=quis amet commodo&sort_dir=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.conversations.search"
					],
					"query": [
						{
							"key": "team_ids",
							"value": "quis amet commodo",
							"description": "Comma separated string of team IDs, signifying the workspaces to search through."
						},
						{
							"key": "query",
							"value": "quis amet commodo",
							"description": "Name of the the channel to query by."
						},
						{
							"key": "limit",
							"value": "74567849",
							"description": "Maximum number of items to be returned. Must be between 1 - 20 both inclusive. Default is 10."
						},
						{
							"key": "cursor",
							"value": "quis amet commodo",
							"description": "Set `cursor` to `next_cursor` returned by the previous call to list items in the next page."
						},
						{
							"key": "search_channel_types",
							"value": "quis amet commodo",
							"description": "The type of channel to include or exclude in the search. For example `private` will search private channels, while `private_exclude` will exclude them. For a full list of types, check the [Types section](#types)."
						},
						{
							"key": "sort",
							"value": "quis amet commodo",
							"description": "Possible values are `relevant` (search ranking based on what we think is closest), `name` (alphabetical), `member_count` (number of users in the channel), and `created` (date channel was created). You can optionally pair this with the `sort_dir` arg to change how it is sorted "
						},
						{
							"key": "sort_dir",
							"value": "quis amet commodo",
							"description": "Sort direction. Possible values are `asc` for ascending order like (1, 2, 3) or (a, b, c), and `desc` for descending order like (3, 2, 1) or (c, b, a)"
						}
					]
				},
				"description": "Search for public or private channels in an Enterprise organization."
			},
			"response": [
				{
					"id": "ebf017e7-7c24-4a88-9af8-e7530bae9b7b",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:read`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.search?team_ids=quis amet commodo&query=quis amet commodo&limit=74567849&cursor=quis amet commodo&search_channel_types=quis amet commodo&sort=quis amet commodo&sort_dir=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.search"
							],
							"query": [
								{
									"key": "team_ids",
									"value": "quis amet commodo"
								},
								{
									"key": "query",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								},
								{
									"key": "search_channel_types",
									"value": "quis amet commodo"
								},
								{
									"key": "sort",
									"value": "quis amet commodo"
								},
								{
									"key": "sort_dir",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"channels\": [\n    {\n      \"created\": 1449252889,\n      \"creator\": \"U012A3CDE\",\n      \"id\": \"C012AB3CD\",\n      \"is_archived\": false,\n      \"is_channel\": true,\n      \"is_ext_shared\": false,\n      \"is_general\": true,\n      \"is_group\": false,\n      \"is_im\": false,\n      \"is_member\": true,\n      \"is_mpim\": false,\n      \"is_org_shared\": false,\n      \"is_pending_ext_shared\": false,\n      \"is_private\": false,\n      \"is_shared\": false,\n      \"name\": \"general\",\n      \"name_normalized\": \"general\",\n      \"num_members\": 4,\n      \"pending_shared\": [],\n      \"previous_names\": [],\n      \"purpose\": {\n        \"creator\": \"\",\n        \"last_set\": 0,\n        \"value\": \"This channel is for team-wide communication and announcements. All team members are in this channel.\"\n      },\n      \"topic\": {\n        \"creator\": \"\",\n        \"last_set\": 0,\n        \"value\": \"Company-wide announcements and work-based matters\"\n      },\n      \"unlinked\": 0\n    }\n  ],\n  \"ok\": true,\n  \"response_metadata\": {\n    \"next_cursor\": \"dGVhbTpDMDYxRkE1UEI=\"\n  }\n}"
				},
				{
					"id": "5a9a188e-bf6a-48da-8bae-aedfb72a4456",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:read`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.search?team_ids=quis amet commodo&query=quis amet commodo&limit=74567849&cursor=quis amet commodo&search_channel_types=quis amet commodo&sort=quis amet commodo&sort_dir=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.search"
							],
							"query": [
								{
									"key": "team_ids",
									"value": "quis amet commodo"
								},
								{
									"key": "query",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								},
								{
									"key": "search_channel_types",
									"value": "quis amet commodo"
								},
								{
									"key": "sort",
									"value": "quis amet commodo"
								},
								{
									"key": "sort_dir",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"not_an_enterprise\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin conversations set Conversation Prefs",
			"id": "129482fb-0134-47b7-8634-607fd9f72f83",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel_id",
							"value": "dolore aliquip eu",
							"description": "(Required) The channel to set the prefs for"
						},
						{
							"key": "prefs",
							"value": "sunt dolore do dolor",
							"description": "(Required) The prefs for this channel in a stringified JSON format."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.conversations.setConversationPrefs",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.conversations.setConversationPrefs"
					]
				},
				"description": "Set the posting permissions for a public or private channel."
			},
			"response": [
				{
					"id": "a8e4c9ef-02bd-4b4d-899a-1242fdecef00",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The channel to set the prefs for",
									"key": "channel_id",
									"value": "dolore aliquip eu"
								},
								{
									"description": "(Required) The prefs for this channel in a stringified JSON format.",
									"key": "prefs",
									"value": "sunt dolore do dolor"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.setConversationPrefs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.setConversationPrefs"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "af55bea9-f403-4aee-905d-eab63ce84a2d",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The channel to set the prefs for",
									"key": "channel_id",
									"value": "dolore aliquip eu"
								},
								{
									"description": "(Required) The prefs for this channel in a stringified JSON format.",
									"key": "prefs",
									"value": "sunt dolore do dolor"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.setConversationPrefs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.setConversationPrefs"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin conversations set Teams",
			"id": "931d19c5-b69c-4a32-adb6-740783de50ac",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel_id",
							"value": "elit eiusmod non Excepteur dolor",
							"description": "(Required) The encoded `channel_id` to add or remove to workspaces."
						},
						{
							"key": "team_id",
							"value": "laborum sint",
							"description": "The workspace to which the channel belongs. Omit this argument if the channel is a cross-workspace shared channel."
						},
						{
							"key": "target_team_ids",
							"value": "incididunt dolore sed in",
							"description": "A comma-separated list of workspaces to which the channel should be shared. Not required if the channel is being shared org-wide."
						},
						{
							"key": "org_channel",
							"value": "false",
							"description": "True if channel has to be converted to an org channel"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.conversations.setTeams",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.conversations.setTeams"
					]
				},
				"description": "Set the workspaces in an Enterprise grid org that connect to a public or private channel."
			},
			"response": [
				{
					"id": "b85196a9-59fa-40d5-81a9-4fa29374b98d",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The encoded `channel_id` to add or remove to workspaces.",
									"key": "channel_id",
									"value": "elit eiusmod non Excepteur dolor"
								},
								{
									"description": "The workspace to which the channel belongs. Omit this argument if the channel is a cross-workspace shared channel.",
									"key": "team_id",
									"value": "laborum sint"
								},
								{
									"description": "A comma-separated list of workspaces to which the channel should be shared. Not required if the channel is being shared org-wide.",
									"key": "target_team_ids",
									"value": "incididunt dolore sed in"
								},
								{
									"description": "True if channel has to be converted to an org channel",
									"key": "org_channel",
									"value": "false"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.setTeams",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.setTeams"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "3768bb9c-6380-4dc5-9ccd-2b9b42b8e4ea",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The encoded `channel_id` to add or remove to workspaces.",
									"key": "channel_id",
									"value": "elit eiusmod non Excepteur dolor"
								},
								{
									"description": "The workspace to which the channel belongs. Omit this argument if the channel is a cross-workspace shared channel.",
									"key": "team_id",
									"value": "laborum sint"
								},
								{
									"description": "A comma-separated list of workspaces to which the channel should be shared. Not required if the channel is being shared org-wide.",
									"key": "target_team_ids",
									"value": "incididunt dolore sed in"
								},
								{
									"description": "True if channel has to be converted to an org channel",
									"key": "org_channel",
									"value": "false"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.setTeams",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.setTeams"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin conversations unarchive",
			"id": "2eb40032-fc77-4c9d-9605-ea731770709a",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel_id",
							"value": "mollit consectetur",
							"description": "(Required) The channel to unarchive."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.conversations.unarchive",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.conversations.unarchive"
					]
				},
				"description": "Unarchive a public or private channel."
			},
			"response": [
				{
					"id": "356eb693-b36f-4cba-bcfc-ad52c2b04dcc",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The channel to unarchive.",
									"key": "channel_id",
									"value": "mollit consectetur"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.unarchive",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.unarchive"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "166d0857-7abd-4b65-9d00-1269aaf4924c",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The channel to unarchive.",
									"key": "channel_id",
									"value": "mollit consectetur"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.unarchive",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.unarchive"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin emoji add",
			"id": "13b4d5c7-23bf-421c-a0f4-fdbd0da2fffe",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "token",
							"value": "Ut cupidatat",
							"description": "(Required) Authentication token. Requires scope: `admin.teams:write`"
						},
						{
							"key": "name",
							"value": "sit ut",
							"description": "(Required) The name of the emoji to be removed. Colons (`:myemoji:`) around the value are not required, although they may be included."
						},
						{
							"key": "url",
							"value": "labore ut",
							"description": "(Required) The URL of a file to use as an image for the emoji. Square images under 128KB and with transparent backgrounds work best."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.emoji.add",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.emoji.add"
					]
				},
				"description": "Add an emoji."
			},
			"response": [
				{
					"id": "83c727d9-ef09-469e-a16b-d0afce4ad4fb",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
									"key": "token",
									"value": "Ut cupidatat"
								},
								{
									"description": "(Required) The name of the emoji to be removed. Colons (`:myemoji:`) around the value are not required, although they may be included.",
									"key": "name",
									"value": "sit ut"
								},
								{
									"description": "(Required) The URL of a file to use as an image for the emoji. Square images under 128KB and with transparent backgrounds work best.",
									"key": "url",
									"value": "labore ut"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.emoji.add",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.emoji.add"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "ad17c59e-cda0-49af-a08f-07869ebf86c2",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
									"key": "token",
									"value": "Ut cupidatat"
								},
								{
									"description": "(Required) The name of the emoji to be removed. Colons (`:myemoji:`) around the value are not required, although they may be included.",
									"key": "name",
									"value": "sit ut"
								},
								{
									"description": "(Required) The URL of a file to use as an image for the emoji. Square images under 128KB and with transparent backgrounds work best.",
									"key": "url",
									"value": "labore ut"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.emoji.add",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.emoji.add"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin emoji add Alias",
			"id": "1f1ac07a-4386-45f1-9e0d-9e7fd5a3f4a2",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "token",
							"value": "in adipisicing irure culpa et",
							"description": "(Required) Authentication token. Requires scope: `admin.teams:write`"
						},
						{
							"key": "name",
							"value": "aliqua",
							"description": "(Required) The name of the emoji to be aliased. Colons (`:myemoji:`) around the value are not required, although they may be included."
						},
						{
							"key": "alias_for",
							"value": "in cillum aliqua magna sint",
							"description": "(Required) The alias of the emoji."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.emoji.addAlias",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.emoji.addAlias"
					]
				},
				"description": "Add an emoji alias."
			},
			"response": [
				{
					"id": "f2987264-c0cc-48f5-9075-05bc90857408",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
									"key": "token",
									"value": "in adipisicing irure culpa et"
								},
								{
									"description": "(Required) The name of the emoji to be aliased. Colons (`:myemoji:`) around the value are not required, although they may be included.",
									"key": "name",
									"value": "aliqua"
								},
								{
									"description": "(Required) The alias of the emoji.",
									"key": "alias_for",
									"value": "in cillum aliqua magna sint"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.emoji.addAlias",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.emoji.addAlias"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "9a7b7ee4-0bcd-4446-94e4-8af92788dc8a",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
									"key": "token",
									"value": "in adipisicing irure culpa et"
								},
								{
									"description": "(Required) The name of the emoji to be aliased. Colons (`:myemoji:`) around the value are not required, although they may be included.",
									"key": "name",
									"value": "aliqua"
								},
								{
									"description": "(Required) The alias of the emoji.",
									"key": "alias_for",
									"value": "in cillum aliqua magna sint"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.emoji.addAlias",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.emoji.addAlias"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin emoji list",
			"id": "36ca008e-c2d4-4902-9bd3-f6af9a3f1249",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/admin.emoji.list?token=quis amet commodo&cursor=quis amet commodo&limit=74567849",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.emoji.list"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "(Required) Authentication token. Requires scope: `admin.teams:read`"
						},
						{
							"key": "cursor",
							"value": "quis amet commodo",
							"description": "Set `cursor` to `next_cursor` returned by the previous call to list items in the next page"
						},
						{
							"key": "limit",
							"value": "74567849",
							"description": "The maximum number of items to return. Must be between 1 - 1000 both inclusive."
						}
					]
				},
				"description": "List emoji for an Enterprise Grid organization."
			},
			"response": [
				{
					"id": "0f039237-da80-47e2-87c8-d2d367d101fa",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.emoji.list?token=quis amet commodo&cursor=quis amet commodo&limit=74567849",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.emoji.list"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"cache_ts\": \"1575283387.000000\",\n  \"categories\": [\n    {\n      \"emoji_names\": [\n        \"grinning\",\n        \"grin\",\n        \"joy\",\n        \"etc etc ...\"\n      ],\n      \"name\": \"Smileys & People\"\n    }\n  ],\n  \"categories_version\": \"5\",\n  \"emoji\": {\n    \"black_square\": \"alias:black_large_square\",\n    \"bowtie\": \"https://emoji.slack-edge.com/T9TK3CUKW/bowtie/f3ec6f2bb0.png\",\n    \"cubimal_chick\": \"https://emoji.slack-edge.com/T9TK3CUKW/cubimal_chick/85961c43d7.png\",\n    \"dusty_stick\": \"https://emoji.slack-edge.com/T9TK3CUKW/dusty_stick/6177a62312.png\",\n    \"glitch_crab\": \"https://emoji.slack-edge.com/T9TK3CUKW/glitch_crab/db049f1f9c.png\",\n    \"piggy\": \"https://emoji.slack-edge.com/T9TK3CUKW/piggy/b7762ee8cd.png\",\n    \"pride\": \"https://emoji.slack-edge.com/T9TK3CUKW/pride/56b1bd3388.png\",\n    \"shipit\": \"alias:squirrel\",\n    \"simple_smile\": {\n      \"apple\": \"https://a.slack-edge.com/80588/img/emoji_2017_12_06/apple/simple_smile.png\",\n      \"google\": \"https://a.slack-edge.com/80588/img/emoji_2017_12_06/google/simple_smile.png\"\n    },\n    \"slack\": \"https://emoji.slack-edge.com/T9TK3CUKW/slack/7d462d2443.png\",\n    \"slack_call\": \"https://emoji.slack-edge.com/T9TK3CUKW/slack_call/b81fffd6dd.png\",\n    \"squirrel\": \"https://emoji.slack-edge.com/T9TK3CUKW/squirrel/465f40c0e0.png\",\n    \"thumbsup_all\": \"https://emoji.slack-edge.com/T9TK3CUKW/thumbsup_all/50096a1020.gif\",\n    \"white_square\": \"alias:white_large_square\"\n  },\n  \"ok\": true\n}"
				},
				{
					"id": "8a1a0d6e-dbac-4b46-9f70-ba1e2028d946",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.emoji.list?token=quis amet commodo&cursor=quis amet commodo&limit=74567849",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.emoji.list"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin emoji remove",
			"id": "727c060d-758a-401a-809e-ee0351c6ce56",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "token",
							"value": "non nisi",
							"description": "(Required) Authentication token. Requires scope: `admin.teams:write`"
						},
						{
							"key": "name",
							"value": "amet velit ut dolore deserunt",
							"description": "(Required) The name of the emoji to be removed. Colons (`:myemoji:`) around the value are not required, although they may be included."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.emoji.remove",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.emoji.remove"
					]
				},
				"description": "Remove an emoji across an Enterprise Grid organization"
			},
			"response": [
				{
					"id": "3dce1468-42b9-4ce7-ae58-e08a82dcfe16",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
									"key": "token",
									"value": "non nisi"
								},
								{
									"description": "(Required) The name of the emoji to be removed. Colons (`:myemoji:`) around the value are not required, although they may be included.",
									"key": "name",
									"value": "amet velit ut dolore deserunt"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.emoji.remove",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.emoji.remove"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "67ae6761-c3c0-4af8-a159-34d7164ce132",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
									"key": "token",
									"value": "non nisi"
								},
								{
									"description": "(Required) The name of the emoji to be removed. Colons (`:myemoji:`) around the value are not required, although they may be included.",
									"key": "name",
									"value": "amet velit ut dolore deserunt"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.emoji.remove",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.emoji.remove"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin emoji rename",
			"id": "f85ee98f-842e-44aa-b6b6-87b09be6fde5",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "token",
							"value": "dolor cupidatat qui",
							"description": "(Required) Authentication token. Requires scope: `admin.teams:write`"
						},
						{
							"key": "name",
							"value": "Ut elit ex cup",
							"description": "(Required) The name of the emoji to be renamed. Colons (`:myemoji:`) around the value are not required, although they may be included."
						},
						{
							"key": "new_name",
							"value": "ex nostrud irure",
							"description": "(Required) The new name of the emoji."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.emoji.rename",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.emoji.rename"
					]
				},
				"description": "Rename an emoji."
			},
			"response": [
				{
					"id": "ff0af7af-6a75-4e43-9bee-3b2f861e5c22",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
									"key": "token",
									"value": "dolor cupidatat qui"
								},
								{
									"description": "(Required) The name of the emoji to be renamed. Colons (`:myemoji:`) around the value are not required, although they may be included.",
									"key": "name",
									"value": "Ut elit ex cup"
								},
								{
									"description": "(Required) The new name of the emoji.",
									"key": "new_name",
									"value": "ex nostrud irure"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.emoji.rename",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.emoji.rename"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "8b8e0580-c8e6-45d4-9ac5-7bcfa4d66f84",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
									"key": "token",
									"value": "dolor cupidatat qui"
								},
								{
									"description": "(Required) The name of the emoji to be renamed. Colons (`:myemoji:`) around the value are not required, although they may be included.",
									"key": "name",
									"value": "Ut elit ex cup"
								},
								{
									"description": "(Required) The new name of the emoji.",
									"key": "new_name",
									"value": "ex nostrud irure"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.emoji.rename",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.emoji.rename"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin invite Requests approve",
			"id": "8948ac68-a585-4fb3-8d73-13987f9a12dd",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.invites:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "invite_request_id",
							"value": "quis pariatur",
							"description": "(Required) ID of the request to invite."
						},
						{
							"key": "team_id",
							"value": "cupidatat id deserunt ut",
							"description": "ID for the workspace where the invite request was made."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.inviteRequests.approve",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.inviteRequests.approve"
					]
				},
				"description": "Approve a workspace invite request."
			},
			"response": [
				{
					"id": "ad0d6e29-0b1a-4d3b-9789-aaa4566382ce",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.invites:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.inviteRequests.approve",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.inviteRequests.approve"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "4e2845d0-9d3f-4807-9d5b-2af20294bfb4",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.invites:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.inviteRequests.approve",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.inviteRequests.approve"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin invite Requests approved list",
			"id": "d83f5e24-ec29-47d7-8933-2383fe777fca",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.invites:read`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/admin.inviteRequests.approved.list?team_id=quis amet commodo&cursor=quis amet commodo&limit=74567849",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.inviteRequests.approved.list"
					],
					"query": [
						{
							"key": "team_id",
							"value": "quis amet commodo",
							"description": "ID for the workspace where the invite requests were made."
						},
						{
							"key": "cursor",
							"value": "quis amet commodo",
							"description": "Value of the `next_cursor` field sent as part of the previous API response"
						},
						{
							"key": "limit",
							"value": "74567849",
							"description": "The number of results that will be returned by the API on each invocation. Must be between 1 - 1000, both inclusive"
						}
					]
				},
				"description": "List all approved workspace invite requests."
			},
			"response": [
				{
					"id": "6b6551fd-aafb-4d73-a6a1-288a6060be85",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.invites:read`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.inviteRequests.approved.list?team_id=quis amet commodo&cursor=quis amet commodo&limit=74567849",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.inviteRequests.approved.list"
							],
							"query": [
								{
									"key": "team_id",
									"value": "quis amet commodo"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "10318242-07b1-4069-947d-b4e1cc39077c",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.invites:read`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.inviteRequests.approved.list?team_id=quis amet commodo&cursor=quis amet commodo&limit=74567849",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.inviteRequests.approved.list"
							],
							"query": [
								{
									"key": "team_id",
									"value": "quis amet commodo"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin invite Requests denied list",
			"id": "d7314526-0e9d-46d6-9980-d03f8d75fbae",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.invites:read`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/admin.inviteRequests.denied.list?team_id=quis amet commodo&cursor=quis amet commodo&limit=74567849",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.inviteRequests.denied.list"
					],
					"query": [
						{
							"key": "team_id",
							"value": "quis amet commodo",
							"description": "ID for the workspace where the invite requests were made."
						},
						{
							"key": "cursor",
							"value": "quis amet commodo",
							"description": "Value of the `next_cursor` field sent as part of the previous api response"
						},
						{
							"key": "limit",
							"value": "74567849",
							"description": "The number of results that will be returned by the API on each invocation. Must be between 1 - 1000 both inclusive"
						}
					]
				},
				"description": "List all denied workspace invite requests."
			},
			"response": [
				{
					"id": "a26a5714-97db-422e-b6a6-d011e06f9852",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.invites:read`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.inviteRequests.denied.list?team_id=quis amet commodo&cursor=quis amet commodo&limit=74567849",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.inviteRequests.denied.list"
							],
							"query": [
								{
									"key": "team_id",
									"value": "quis amet commodo"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "f697ae17-db2c-4f0c-99fe-c386a6c6660e",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.invites:read`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.inviteRequests.denied.list?team_id=quis amet commodo&cursor=quis amet commodo&limit=74567849",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.inviteRequests.denied.list"
							],
							"query": [
								{
									"key": "team_id",
									"value": "quis amet commodo"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin invite Requests deny",
			"id": "6d831418-c433-47be-ac8d-cbcfefecf622",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.invites:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "invite_request_id",
							"value": "quis pariatur",
							"description": "(Required) ID of the request to invite."
						},
						{
							"key": "team_id",
							"value": "cupidatat id deserunt ut",
							"description": "ID for the workspace where the invite request was made."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.inviteRequests.deny",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.inviteRequests.deny"
					]
				},
				"description": "Deny a workspace invite request."
			},
			"response": [
				{
					"id": "6b91adda-5186-46ca-92ac-249f1b29d560",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.invites:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.inviteRequests.deny",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.inviteRequests.deny"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "e6c961a3-2ee4-4b2f-a826-876a45420db2",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.invites:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.inviteRequests.deny",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.inviteRequests.deny"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin invite Requests list",
			"id": "1cc6b2ec-3306-457f-8649-ce0e8dbbfa2c",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.invites:read`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/admin.inviteRequests.list?team_id=quis amet commodo&cursor=quis amet commodo&limit=74567849",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.inviteRequests.list"
					],
					"query": [
						{
							"key": "team_id",
							"value": "quis amet commodo",
							"description": "ID for the workspace where the invite requests were made."
						},
						{
							"key": "cursor",
							"value": "quis amet commodo",
							"description": "Value of the `next_cursor` field sent as part of the previous API response"
						},
						{
							"key": "limit",
							"value": "74567849",
							"description": "The number of results that will be returned by the API on each invocation. Must be between 1 - 1000, both inclusive"
						}
					]
				},
				"description": "List all pending workspace invite requests."
			},
			"response": [
				{
					"id": "d4f28e56-6aa2-46e7-84b6-76887e8ef06a",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.invites:read`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.inviteRequests.list?team_id=quis amet commodo&cursor=quis amet commodo&limit=74567849",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.inviteRequests.list"
							],
							"query": [
								{
									"key": "team_id",
									"value": "quis amet commodo"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "27c930ee-0d63-46d9-aacc-6a5884933870",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.invites:read`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.inviteRequests.list?team_id=quis amet commodo&cursor=quis amet commodo&limit=74567849",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.inviteRequests.list"
							],
							"query": [
								{
									"key": "team_id",
									"value": "quis amet commodo"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin teams admins list",
			"id": "ab049c2e-67cc-4bb3-9109-fe0c89e5abd1",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/admin.teams.admins.list?token=quis amet commodo&limit=74567849&cursor=quis amet commodo&team_id=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.teams.admins.list"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "(Required) Authentication token. Requires scope: `admin.teams:read`"
						},
						{
							"key": "limit",
							"value": "74567849",
							"description": "The maximum number of items to return."
						},
						{
							"key": "cursor",
							"value": "quis amet commodo",
							"description": "Set `cursor` to `next_cursor` returned by the previous call to list items in the next page."
						},
						{
							"key": "team_id",
							"value": "quis amet commodo",
							"description": "(Required) "
						}
					]
				},
				"description": "List all of the admins on a given workspace."
			},
			"response": [
				{
					"id": "d1c2a9bf-b43a-461f-96af-c3f9c86722d7",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.teams.admins.list?token=quis amet commodo&limit=74567849&cursor=quis amet commodo&team_id=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.teams.admins.list"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								},
								{
									"key": "team_id",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"admin_ids\": [\n    \"U1234\"\n  ],\n  \"ok\": true\n}"
				},
				{
					"id": "fb45348f-b089-4196-bd72-fdd11366e820",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.teams.admins.list?token=quis amet commodo&limit=74567849&cursor=quis amet commodo&team_id=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.teams.admins.list"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								},
								{
									"key": "team_id",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin teams create",
			"id": "e73ee2f4-2e53-4273-9240-bc0c7b9a0c94",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "team_domain",
							"value": "commodo quis",
							"description": "(Required) Team domain (for example, slacksoftballteam)."
						},
						{
							"key": "team_name",
							"value": "ut",
							"description": "(Required) Team name (for example, Slack Softball Team)."
						},
						{
							"key": "team_description",
							"value": "Excepteur exercitation",
							"description": "Description for the team."
						},
						{
							"key": "team_discoverability",
							"value": "laboris sunt dolor dolor",
							"description": "Who can join the team. A team's discoverability can be `open`, `closed`, `invite_only`, or `unlisted`."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.teams.create",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.teams.create"
					]
				},
				"description": "Create an Enterprise team."
			},
			"response": [
				{
					"id": "14b0f1e0-66ed-485e-ae18-ccc8ebe831a1",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Team domain (for example, slacksoftballteam).",
									"key": "team_domain",
									"value": "commodo quis"
								},
								{
									"description": "(Required) Team name (for example, Slack Softball Team).",
									"key": "team_name",
									"value": "ut"
								},
								{
									"description": "Description for the team.",
									"key": "team_description",
									"value": "Excepteur exercitation"
								},
								{
									"description": "Who can join the team. A team's discoverability can be `open`, `closed`, `invite_only`, or `unlisted`.",
									"key": "team_discoverability",
									"value": "laboris sunt dolor dolor"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.teams.create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.teams.create"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"team\": \"T12345\"\n}"
				},
				{
					"id": "b713a5b3-7d8e-4dda-b2cc-0a3623b8ca10",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Team domain (for example, slacksoftballteam).",
									"key": "team_domain",
									"value": "commodo quis"
								},
								{
									"description": "(Required) Team name (for example, Slack Softball Team).",
									"key": "team_name",
									"value": "ut"
								},
								{
									"description": "Description for the team.",
									"key": "team_description",
									"value": "Excepteur exercitation"
								},
								{
									"description": "Who can join the team. A team's discoverability can be `open`, `closed`, `invite_only`, or `unlisted`.",
									"key": "team_discoverability",
									"value": "laboris sunt dolor dolor"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.teams.create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.teams.create"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin teams list",
			"id": "ca1bb40a-45f1-4b9a-ae2c-6e3afa6453f4",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.teams:read`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/admin.teams.list?limit=74567849&cursor=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.teams.list"
					],
					"query": [
						{
							"key": "limit",
							"value": "74567849",
							"description": "The maximum number of items to return. Must be between 1 - 100 both inclusive."
						},
						{
							"key": "cursor",
							"value": "quis amet commodo",
							"description": "Set `cursor` to `next_cursor` returned by the previous call to list items in the next page."
						}
					]
				},
				"description": "List all teams on an Enterprise organization"
			},
			"response": [
				{
					"id": "8c200cd6-2934-4882-a61a-0e12f1928801",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.teams:read`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.teams.list?limit=74567849&cursor=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.teams.list"
							],
							"query": [
								{
									"key": "limit",
									"value": "74567849"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"teams\": [\n    {\n      \"discoverability\": \"hidden\",\n      \"id\": \"T1234\",\n      \"name\": \"My Team\",\n      \"primary_owner\": {\n        \"email\": \"bront@slack.com\",\n        \"user_id\": \"W1234\"\n      },\n      \"team_url\": \"https://subarachnoid.slack.com/\"\n    }\n  ]\n}"
				},
				{
					"id": "5e093eb4-a017-4c80-ba34-12d681d72763",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.teams:read`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.teams.list?limit=74567849&cursor=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.teams.list"
							],
							"query": [
								{
									"key": "limit",
									"value": "74567849"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin teams owners list",
			"id": "733d1ac0-3143-4bef-83a8-2659ad4272ca",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/admin.teams.owners.list?token=quis amet commodo&team_id=quis amet commodo&limit=74567849&cursor=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.teams.owners.list"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "(Required) Authentication token. Requires scope: `admin.teams:read`"
						},
						{
							"key": "team_id",
							"value": "quis amet commodo",
							"description": "(Required) "
						},
						{
							"key": "limit",
							"value": "74567849",
							"description": "The maximum number of items to return. Must be between 1 - 1000 both inclusive."
						},
						{
							"key": "cursor",
							"value": "quis amet commodo",
							"description": "Set `cursor` to `next_cursor` returned by the previous call to list items in the next page."
						}
					]
				},
				"description": "List all of the owners on a given workspace."
			},
			"response": [
				{
					"id": "8e1704ef-46f5-406c-8269-d32417d34046",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.teams.owners.list?token=quis amet commodo&team_id=quis amet commodo&limit=74567849&cursor=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.teams.owners.list"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "team_id",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"owner_ids\": [\n    \"U1234\"\n  ]\n}"
				},
				{
					"id": "a4e860d6-c0af-4903-a21c-68d795961555",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.teams.owners.list?token=quis amet commodo&team_id=quis amet commodo&limit=74567849&cursor=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.teams.owners.list"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "team_id",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin teams settings info",
			"id": "7bab42c9-d58a-4e15-b619-b24750fd7298",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.teams:read`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/admin.teams.settings.info?team_id=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.teams.settings.info"
					],
					"query": [
						{
							"key": "team_id",
							"value": "quis amet commodo",
							"description": "(Required) "
						}
					]
				},
				"description": "Fetch information about settings in a workspace"
			},
			"response": [
				{
					"id": "a3a0a090-e94a-475f-ac7b-924b4328f8fa",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.teams:read`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.teams.settings.info?team_id=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.teams.settings.info"
							],
							"query": [
								{
									"key": "team_id",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"team\": {\n    \"default_channels\": \"array\",\n    \"domain\": \"string\",\n    \"email_domain\": \"string\",\n    \"enterprise_id\": \"string\",\n    \"enterprise_name\": \"string\",\n    \"icon\": \"array\",\n    \"id\": \"string\",\n    \"name\": \"string\"\n  }\n}"
				},
				{
					"id": "d057cc61-9991-44a1-a94c-a40d85b9d93e",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.teams:read`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.teams.settings.info?team_id=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.teams.settings.info"
							],
							"query": [
								{
									"key": "team_id",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin teams settings set Default Channels",
			"id": "f9d4c814-57d5-495a-92e2-2a4a51107d89",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "token",
							"value": "irure eu nisi quis",
							"description": "(Required) Authentication token. Requires scope: `admin.teams:write`"
						},
						{
							"key": "team_id",
							"value": "minim labore amet",
							"description": "(Required) ID for the workspace to set the default channel for."
						},
						{
							"key": "channel_ids",
							"value": "ex est laboris occaecat",
							"description": "(Required) An array of channel IDs."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.teams.settings.setDefaultChannels",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.teams.settings.setDefaultChannels"
					]
				},
				"description": "Set the default channels of a workspace."
			},
			"response": [
				{
					"id": "924f771d-8e13-42c4-aebb-88fc57b8efaa",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
									"key": "token",
									"value": "irure eu nisi quis"
								},
								{
									"description": "(Required) ID for the workspace to set the default channel for.",
									"key": "team_id",
									"value": "minim labore amet"
								},
								{
									"description": "(Required) An array of channel IDs.",
									"key": "channel_ids",
									"value": "ex est laboris occaecat"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.teams.settings.setDefaultChannels",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.teams.settings.setDefaultChannels"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "6f96b6a1-04dd-4d32-a262-c4eb9795b571",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
									"key": "token",
									"value": "irure eu nisi quis"
								},
								{
									"description": "(Required) ID for the workspace to set the default channel for.",
									"key": "team_id",
									"value": "minim labore amet"
								},
								{
									"description": "(Required) An array of channel IDs.",
									"key": "channel_ids",
									"value": "ex est laboris occaecat"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.teams.settings.setDefaultChannels",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.teams.settings.setDefaultChannels"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin teams settings set Description",
			"id": "8877a1e5-7314-4a54-98c7-104fda4b29b8",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "team_id",
							"value": "elit cupidatat non id",
							"description": "(Required) ID for the workspace to set the description for."
						},
						{
							"key": "description",
							"value": "voluptate",
							"description": "(Required) The new description for the workspace."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.teams.settings.setDescription",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.teams.settings.setDescription"
					]
				},
				"description": "Set the description of a given workspace."
			},
			"response": [
				{
					"id": "5050e9f5-99a9-4685-92c0-343846de2f94",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) ID for the workspace to set the description for.",
									"key": "team_id",
									"value": "elit cupidatat non id"
								},
								{
									"description": "(Required) The new description for the workspace.",
									"key": "description",
									"value": "voluptate"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.teams.settings.setDescription",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.teams.settings.setDescription"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "861b96b0-efc3-43b3-ae11-884ae85aba1e",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) ID for the workspace to set the description for.",
									"key": "team_id",
									"value": "elit cupidatat non id"
								},
								{
									"description": "(Required) The new description for the workspace.",
									"key": "description",
									"value": "voluptate"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.teams.settings.setDescription",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.teams.settings.setDescription"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin teams settings set Discoverability",
			"id": "bed6dff9-7590-425a-9fdf-ec72bcbb5dc3",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "team_id",
							"value": "in aliqua adipisicing",
							"description": "(Required) The ID of the workspace to set discoverability on."
						},
						{
							"key": "discoverability",
							"value": "labore ut tempor magna",
							"description": "(Required) This workspace's discovery setting. It must be set to one of `open`, `invite_only`, `closed`, or `unlisted`."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.teams.settings.setDiscoverability",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.teams.settings.setDiscoverability"
					]
				},
				"description": "An API method that allows admins to set the discoverability of a given workspace"
			},
			"response": [
				{
					"id": "8f272551-4a71-4582-9a47-c91d602dea5f",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The ID of the workspace to set discoverability on.",
									"key": "team_id",
									"value": "in aliqua adipisicing"
								},
								{
									"description": "(Required) This workspace's discovery setting. It must be set to one of `open`, `invite_only`, `closed`, or `unlisted`.",
									"key": "discoverability",
									"value": "labore ut tempor magna"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.teams.settings.setDiscoverability",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.teams.settings.setDiscoverability"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "74f4ccf6-0f32-4517-a724-db1911f43f73",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The ID of the workspace to set discoverability on.",
									"key": "team_id",
									"value": "in aliqua adipisicing"
								},
								{
									"description": "(Required) This workspace's discovery setting. It must be set to one of `open`, `invite_only`, `closed`, or `unlisted`.",
									"key": "discoverability",
									"value": "labore ut tempor magna"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.teams.settings.setDiscoverability",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.teams.settings.setDiscoverability"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin teams settings set Icon",
			"id": "c5c35b91-cff4-45c6-ae29-33d0ebab8f90",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "token",
							"value": "pariatur aliqua eu",
							"description": "(Required) Authentication token. Requires scope: `admin.teams:write`"
						},
						{
							"key": "image_url",
							"value": "commodo",
							"description": "(Required) Image URL for the icon"
						},
						{
							"key": "team_id",
							"value": "mollit",
							"description": "(Required) ID for the workspace to set the icon for."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.teams.settings.setIcon",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.teams.settings.setIcon"
					]
				},
				"description": "Sets the icon of a workspace."
			},
			"response": [
				{
					"id": "98690566-b9b1-4f66-9a7c-65d0c5b142d3",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
									"key": "token",
									"value": "pariatur aliqua eu"
								},
								{
									"description": "(Required) Image URL for the icon",
									"key": "image_url",
									"value": "commodo"
								},
								{
									"description": "(Required) ID for the workspace to set the icon for.",
									"key": "team_id",
									"value": "mollit"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.teams.settings.setIcon",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.teams.settings.setIcon"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "af2874cd-10f2-4357-9a29-1ed2927401dc",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
									"key": "token",
									"value": "pariatur aliqua eu"
								},
								{
									"description": "(Required) Image URL for the icon",
									"key": "image_url",
									"value": "commodo"
								},
								{
									"description": "(Required) ID for the workspace to set the icon for.",
									"key": "team_id",
									"value": "mollit"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.teams.settings.setIcon",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.teams.settings.setIcon"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin teams settings set Name",
			"id": "fa7e38c2-f760-48e9-8e92-e05baec0b12f",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "team_id",
							"value": "ut adipisicing ullamco",
							"description": "(Required) ID for the workspace to set the name for."
						},
						{
							"key": "name",
							"value": "consequat tempor esse",
							"description": "(Required) The new name of the workspace."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.teams.settings.setName",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.teams.settings.setName"
					]
				},
				"description": "Set the name of a given workspace."
			},
			"response": [
				{
					"id": "91c13494-0071-422f-b89c-87b76d2295e5",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) ID for the workspace to set the name for.",
									"key": "team_id",
									"value": "ut adipisicing ullamco"
								},
								{
									"description": "(Required) The new name of the workspace.",
									"key": "name",
									"value": "consequat tempor esse"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.teams.settings.setName",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.teams.settings.setName"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "e92cf209-31c6-4291-ac89-abb062465bee",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) ID for the workspace to set the name for.",
									"key": "team_id",
									"value": "ut adipisicing ullamco"
								},
								{
									"description": "(Required) The new name of the workspace.",
									"key": "name",
									"value": "consequat tempor esse"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.teams.settings.setName",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.teams.settings.setName"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin usergroups add Channels",
			"id": "dcc46b7b-1381-485d-8dc7-4ef01c68dcd4",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.usergroups:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "usergroup_id",
							"value": "commodo sint mollit do",
							"description": "(Required) ID of the IDP group to add default channels for."
						},
						{
							"key": "channel_ids",
							"value": "consectetur dolor",
							"description": "(Required) Comma separated string of channel IDs."
						},
						{
							"key": "team_id",
							"value": "irure do",
							"description": "The workspace to add default channels in."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.usergroups.addChannels",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.usergroups.addChannels"
					]
				},
				"description": "Add one or more default channels to an IDP group."
			},
			"response": [
				{
					"id": "38ad06ce-c74a-48e2-a72d-9ab0466766c3",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.usergroups:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) ID of the IDP group to add default channels for.",
									"key": "usergroup_id",
									"value": "commodo sint mollit do"
								},
								{
									"description": "(Required) Comma separated string of channel IDs.",
									"key": "channel_ids",
									"value": "consectetur dolor"
								},
								{
									"description": "The workspace to add default channels in.",
									"key": "team_id",
									"value": "irure do"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.usergroups.addChannels",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.usergroups.addChannels"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "92e8f32b-1c76-408b-8f55-13d99a84a27e",
					"name": "Typical error response if the token provided is not associated with an Org Admin or Owner",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.usergroups:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) ID of the IDP group to add default channels for.",
									"key": "usergroup_id",
									"value": "commodo sint mollit do"
								},
								{
									"description": "(Required) Comma separated string of channel IDs.",
									"key": "channel_ids",
									"value": "consectetur dolor"
								},
								{
									"description": "The workspace to add default channels in.",
									"key": "team_id",
									"value": "irure do"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.usergroups.addChannels",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.usergroups.addChannels"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"not_an_admin\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin usergroups add Teams",
			"id": "16656f01-1031-4d96-996a-c0144fadf98e",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "usergroup_id",
							"value": "culpa incididunt ipsum ullamco",
							"description": "(Required) An encoded usergroup (IDP Group) ID."
						},
						{
							"key": "team_ids",
							"value": "eiusmod Excepteur",
							"description": "(Required) A comma separated list of encoded team (workspace) IDs. Each workspace *MUST* belong to the organization associated with the token."
						},
						{
							"key": "auto_provision",
							"value": "true",
							"description": "When `true`, this method automatically creates new workspace accounts for the IDP group members."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.usergroups.addTeams",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.usergroups.addTeams"
					]
				},
				"description": "Associate one or more default workspaces with an organization-wide IDP group."
			},
			"response": [
				{
					"id": "816f2424-a35c-4375-a8ba-2b95dd62bbb1",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) An encoded usergroup (IDP Group) ID.",
									"key": "usergroup_id",
									"value": "culpa incididunt ipsum ullamco"
								},
								{
									"description": "(Required) A comma separated list of encoded team (workspace) IDs. Each workspace *MUST* belong to the organization associated with the token.",
									"key": "team_ids",
									"value": "eiusmod Excepteur"
								},
								{
									"description": "When `true`, this method automatically creates new workspace accounts for the IDP group members.",
									"key": "auto_provision",
									"value": "true"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.usergroups.addTeams",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.usergroups.addTeams"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "22c75f3d-a5e0-46de-a756-9c89e4d05b39",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) An encoded usergroup (IDP Group) ID.",
									"key": "usergroup_id",
									"value": "culpa incididunt ipsum ullamco"
								},
								{
									"description": "(Required) A comma separated list of encoded team (workspace) IDs. Each workspace *MUST* belong to the organization associated with the token.",
									"key": "team_ids",
									"value": "eiusmod Excepteur"
								},
								{
									"description": "When `true`, this method automatically creates new workspace accounts for the IDP group members.",
									"key": "auto_provision",
									"value": "true"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.usergroups.addTeams",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.usergroups.addTeams"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin usergroups list Channels",
			"id": "e1c8c9ad-adc2-40f3-a275-18f3e7e42a2e",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.usergroups:read`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/admin.usergroups.listChannels?usergroup_id=quis amet commodo&team_id=quis amet commodo&include_num_members=false",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.usergroups.listChannels"
					],
					"query": [
						{
							"key": "usergroup_id",
							"value": "quis amet commodo",
							"description": "(Required) ID of the IDP group to list default channels for."
						},
						{
							"key": "team_id",
							"value": "quis amet commodo",
							"description": "ID of the the workspace."
						},
						{
							"key": "include_num_members",
							"value": "false",
							"description": "Flag to include or exclude the count of members per channel."
						}
					]
				},
				"description": "List the channels linked to an org-level IDP group (user group)."
			},
			"response": [
				{
					"id": "3a34334d-3249-41b3-abd5-5c3c77889d08",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.usergroups:read`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.usergroups.listChannels?usergroup_id=quis amet commodo&team_id=quis amet commodo&include_num_members=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.usergroups.listChannels"
							],
							"query": [
								{
									"key": "usergroup_id",
									"value": "quis amet commodo"
								},
								{
									"key": "team_id",
									"value": "quis amet commodo"
								},
								{
									"key": "include_num_members",
									"value": "true"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"channels\": [\n    {\n      \"id\": \"C024BE91L\",\n      \"name\": \"fun\",\n      \"num_members\": 34,\n      \"team_id\": \"T024BE911\"\n    },\n    {\n      \"id\": \"C024BE91K\",\n      \"name\": \"more fun\",\n      \"team_id\": \"T024BE912\"\n    },\n    {\n      \"id\": \"C024BE91M\",\n      \"is_redacted\": true,\n      \"name\": \"public-channel\",\n      \"num_members\": 34,\n      \"team_id\": \"T024BE911\"\n    },\n    {\n      \"id\": \"C024BE91N\",\n      \"name\": \"some more fun\",\n      \"team_id\": \"T024BE921\"\n    }\n  ],\n  \"ok\": true\n}"
				},
				{
					"id": "c1af8ead-38b0-4234-8a39-f0c38f3748c0",
					"name": "Typical error response if the token provided is not associated with an Org Admin or Owner",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.usergroups:read`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.usergroups.listChannels?usergroup_id=quis amet commodo&team_id=quis amet commodo&include_num_members=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.usergroups.listChannels"
							],
							"query": [
								{
									"key": "usergroup_id",
									"value": "quis amet commodo"
								},
								{
									"key": "team_id",
									"value": "quis amet commodo"
								},
								{
									"key": "include_num_members",
									"value": "true"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"not_an_admin\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin usergroups remove Channels",
			"id": "8cd1f516-05ab-41d7-952b-5965dce08a4c",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.usergroups:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "usergroup_id",
							"value": "esse deserunt",
							"description": "(Required) ID of the IDP Group"
						},
						{
							"key": "channel_ids",
							"value": "pariatur sit proident eiusmod aliqua",
							"description": "(Required) Comma-separated string of channel IDs"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.usergroups.removeChannels",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.usergroups.removeChannels"
					]
				},
				"description": "Remove one or more default channels from an org-level IDP group (user group)."
			},
			"response": [
				{
					"id": "933588a7-6e22-41ca-8286-39902183fb87",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.usergroups:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) ID of the IDP Group",
									"key": "usergroup_id",
									"value": "esse deserunt"
								},
								{
									"description": "(Required) Comma-separated string of channel IDs",
									"key": "channel_ids",
									"value": "pariatur sit proident eiusmod aliqua"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.usergroups.removeChannels",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.usergroups.removeChannels"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "894c7989-5323-4847-8f78-5ec9be2668ea",
					"name": "Typical error response if the token provided is not associated with an Org Admin or Owner",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.usergroups:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) ID of the IDP Group",
									"key": "usergroup_id",
									"value": "esse deserunt"
								},
								{
									"description": "(Required) Comma-separated string of channel IDs",
									"key": "channel_ids",
									"value": "pariatur sit proident eiusmod aliqua"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.usergroups.removeChannels",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.usergroups.removeChannels"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"not_an_admin\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin users assign",
			"id": "1182f5f5-84e2-42a5-a25d-959bfed60ed3",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "team_id",
							"value": "pariatur sunt veniam",
							"description": "(Required) The ID (`T1234`) of the workspace."
						},
						{
							"key": "user_id",
							"value": "L",
							"description": "(Required) The ID of the user to add to the workspace."
						},
						{
							"key": "is_restricted",
							"value": "false",
							"description": "True if user should be added to the workspace as a guest."
						},
						{
							"key": "is_ultra_restricted",
							"value": "false",
							"description": "True if user should be added to the workspace as a single-channel guest."
						},
						{
							"key": "channel_ids",
							"value": "veniam ut",
							"description": "Comma separated values of channel IDs to add user in the new workspace."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.users.assign",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.users.assign"
					]
				},
				"description": "Add an Enterprise user to a workspace."
			},
			"response": [
				{
					"id": "f9e5ce5a-dfe8-4736-b9f6-7007904bc557",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The ID (`T1234`) of the workspace.",
									"key": "team_id",
									"value": "pariatur sunt veniam"
								},
								{
									"description": "(Required) The ID of the user to add to the workspace.",
									"key": "user_id",
									"value": "L"
								},
								{
									"description": "True if user should be added to the workspace as a guest.",
									"key": "is_restricted",
									"value": "false"
								},
								{
									"description": "True if user should be added to the workspace as a single-channel guest.",
									"key": "is_ultra_restricted",
									"value": "false"
								},
								{
									"description": "Comma separated values of channel IDs to add user in the new workspace.",
									"key": "channel_ids",
									"value": "veniam ut"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.users.assign",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.users.assign"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "e7fc195f-05e2-4deb-a642-f07daef38503",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The ID (`T1234`) of the workspace.",
									"key": "team_id",
									"value": "pariatur sunt veniam"
								},
								{
									"description": "(Required) The ID of the user to add to the workspace.",
									"key": "user_id",
									"value": "L"
								},
								{
									"description": "True if user should be added to the workspace as a guest.",
									"key": "is_restricted",
									"value": "false"
								},
								{
									"description": "True if user should be added to the workspace as a single-channel guest.",
									"key": "is_ultra_restricted",
									"value": "false"
								},
								{
									"description": "Comma separated values of channel IDs to add user in the new workspace.",
									"key": "channel_ids",
									"value": "veniam ut"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.users.assign",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.users.assign"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin users invite",
			"id": "de9a7193-5772-4216-b07e-f3a7dab800e5",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "team_id",
							"value": "dolore ad amet anim pariatur",
							"description": "(Required) The ID (`T1234`) of the workspace."
						},
						{
							"key": "email",
							"value": "dolore non",
							"description": "(Required) The email address of the person to invite."
						},
						{
							"key": "channel_ids",
							"value": "sit",
							"description": "(Required) A comma-separated list of `channel_id`s for this user to join. At least one channel is required."
						},
						{
							"key": "custom_message",
							"value": "non fugiat",
							"description": "An optional message to send to the user in the invite email."
						},
						{
							"key": "real_name",
							"value": "cupidatat aliquip est aliqua",
							"description": "Full name of the user."
						},
						{
							"key": "resend",
							"value": "true",
							"description": "Allow this invite to be resent in the future if a user has not signed up yet. (default: false)"
						},
						{
							"key": "is_restricted",
							"value": "false",
							"description": "Is this user a multi-channel guest user? (default: false)"
						},
						{
							"key": "is_ultra_restricted",
							"value": "false",
							"description": "Is this user a single channel guest user? (default: false)"
						},
						{
							"key": "guest_expiration_ts",
							"value": "Ut dolore",
							"description": "Timestamp when guest account should be disabled. Only include this timestamp if you are inviting a guest user and you want their account to expire on a certain date."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.users.invite",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.users.invite"
					]
				},
				"description": "Invite a user to a workspace."
			},
			"response": [
				{
					"id": "ae0330f4-b4a0-4bfe-81b5-78efa19f26aa",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The ID (`T1234`) of the workspace.",
									"key": "team_id",
									"value": "dolore ad amet anim pariatur"
								},
								{
									"description": "(Required) The email address of the person to invite.",
									"key": "email",
									"value": "dolore non"
								},
								{
									"description": "(Required) A comma-separated list of `channel_id`s for this user to join. At least one channel is required.",
									"key": "channel_ids",
									"value": "sit"
								},
								{
									"description": "An optional message to send to the user in the invite email.",
									"key": "custom_message",
									"value": "non fugiat"
								},
								{
									"description": "Full name of the user.",
									"key": "real_name",
									"value": "cupidatat aliquip est aliqua"
								},
								{
									"description": "Allow this invite to be resent in the future if a user has not signed up yet. (default: false)",
									"key": "resend",
									"value": "true"
								},
								{
									"description": "Is this user a multi-channel guest user? (default: false)",
									"key": "is_restricted",
									"value": "false"
								},
								{
									"description": "Is this user a single channel guest user? (default: false)",
									"key": "is_ultra_restricted",
									"value": "false"
								},
								{
									"description": "Timestamp when guest account should be disabled. Only include this timestamp if you are inviting a guest user and you want their account to expire on a certain date.",
									"key": "guest_expiration_ts",
									"value": "Ut dolore"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.users.invite",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.users.invite"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "e60b074a-94b4-41fa-900d-138b10e9bb71",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The ID (`T1234`) of the workspace.",
									"key": "team_id",
									"value": "dolore ad amet anim pariatur"
								},
								{
									"description": "(Required) The email address of the person to invite.",
									"key": "email",
									"value": "dolore non"
								},
								{
									"description": "(Required) A comma-separated list of `channel_id`s for this user to join. At least one channel is required.",
									"key": "channel_ids",
									"value": "sit"
								},
								{
									"description": "An optional message to send to the user in the invite email.",
									"key": "custom_message",
									"value": "non fugiat"
								},
								{
									"description": "Full name of the user.",
									"key": "real_name",
									"value": "cupidatat aliquip est aliqua"
								},
								{
									"description": "Allow this invite to be resent in the future if a user has not signed up yet. (default: false)",
									"key": "resend",
									"value": "true"
								},
								{
									"description": "Is this user a multi-channel guest user? (default: false)",
									"key": "is_restricted",
									"value": "false"
								},
								{
									"description": "Is this user a single channel guest user? (default: false)",
									"key": "is_ultra_restricted",
									"value": "false"
								},
								{
									"description": "Timestamp when guest account should be disabled. Only include this timestamp if you are inviting a guest user and you want their account to expire on a certain date.",
									"key": "guest_expiration_ts",
									"value": "Ut dolore"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.users.invite",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.users.invite"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin users list",
			"id": "bc47b6b7-6418-4af6-99f4-164f4249052f",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.users:read`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/admin.users.list?team_id=quis amet commodo&cursor=quis amet commodo&limit=74567849",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.users.list"
					],
					"query": [
						{
							"key": "team_id",
							"value": "quis amet commodo",
							"description": "(Required) The ID (`T1234`) of the workspace."
						},
						{
							"key": "cursor",
							"value": "quis amet commodo",
							"description": "Set `cursor` to `next_cursor` returned by the previous call to list items in the next page."
						},
						{
							"key": "limit",
							"value": "74567849",
							"description": "Limit for how many users to be retrieved per page"
						}
					]
				},
				"description": "List users on a workspace"
			},
			"response": [
				{
					"id": "fa41fe6b-ae63-4e44-bdfe-3bea8c5c0765",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.users:read`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.users.list?team_id=quis amet commodo&cursor=quis amet commodo&limit=74567849",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.users.list"
							],
							"query": [
								{
									"key": "team_id",
									"value": "quis amet commodo"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"users\": [\n    {\n      \"email\": \"bront@slack.com\",\n      \"id\": \"T1234\",\n      \"is_admin\": false,\n      \"is_bot\": false,\n      \"is_owner\": false,\n      \"is_primary_owner\": false,\n      \"is_restricted\": false,\n      \"is_ultra_restricted\": false\n    }\n  ]\n}"
				},
				{
					"id": "1b98d971-23f2-4cb0-8c2f-758416fd7145",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.users:read`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.users.list?team_id=quis amet commodo&cursor=quis amet commodo&limit=74567849",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.users.list"
							],
							"query": [
								{
									"key": "team_id",
									"value": "quis amet commodo"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin users remove",
			"id": "4f6db4db-c25f-424e-b5bd-3d8abe62a6aa",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "team_id",
							"value": "non pariatur ipsum et in",
							"description": "(Required) The ID (`T1234`) of the workspace."
						},
						{
							"key": "user_id",
							"value": "sint proident ",
							"description": "(Required) The ID of the user to remove."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.users.remove",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.users.remove"
					]
				},
				"description": "Remove a user from a workspace."
			},
			"response": [
				{
					"id": "588364e2-d043-4d42-aef6-059b0100998c",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The ID (`T1234`) of the workspace.",
									"key": "team_id",
									"value": "non pariatur ipsum et in"
								},
								{
									"description": "(Required) The ID of the user to remove.",
									"key": "user_id",
									"value": "sint proident "
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.users.remove",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.users.remove"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "5f489eeb-910e-4074-a911-6eaafa8322ad",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The ID (`T1234`) of the workspace.",
									"key": "team_id",
									"value": "non pariatur ipsum et in"
								},
								{
									"description": "(Required) The ID of the user to remove.",
									"key": "user_id",
									"value": "sint proident "
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.users.remove",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.users.remove"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin users session invalidate",
			"id": "05955d83-7960-4196-a1cc-3df1f382970c",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "team_id",
							"value": "volupt",
							"description": "(Required) ID of the team that the session belongs to"
						},
						{
							"key": "session_id",
							"value": "13070442",
							"description": "(Required) "
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.users.session.invalidate",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.users.session.invalidate"
					]
				},
				"description": "Invalidate a single session for a user by session_id"
			},
			"response": [
				{
					"id": "668847da-006c-47fe-af1d-413b4b54eafc",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) ID of the team that the session belongs to",
									"key": "team_id",
									"value": "volupt"
								},
								{
									"description": "(Required) ",
									"key": "session_id",
									"value": "13070442"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.users.session.invalidate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.users.session.invalidate"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "dfc3cb3c-e93a-457d-a717-f6bc17d7605a",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) ID of the team that the session belongs to",
									"key": "team_id",
									"value": "volupt"
								},
								{
									"description": "(Required) ",
									"key": "session_id",
									"value": "13070442"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.users.session.invalidate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.users.session.invalidate"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin users session reset",
			"id": "dc8ca91c-beb7-47e7-a992-0d94f366ba37",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "user_id",
							"value": "non dolor voluptate nisi",
							"description": "(Required) The ID of the user to wipe sessions for"
						},
						{
							"key": "mobile_only",
							"value": "false",
							"description": "Only expire mobile sessions (default: false)"
						},
						{
							"key": "web_only",
							"value": "true",
							"description": "Only expire web sessions (default: false)"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.users.session.reset",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.users.session.reset"
					]
				},
				"description": "Wipes all valid sessions on all devices for a given user"
			},
			"response": [
				{
					"id": "b4876729-d7ea-4160-8549-263f8b1b954a",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The ID of the user to wipe sessions for",
									"key": "user_id",
									"value": "non dolor voluptate nisi"
								},
								{
									"description": "Only expire mobile sessions (default: false)",
									"key": "mobile_only",
									"value": "false"
								},
								{
									"description": "Only expire web sessions (default: false)",
									"key": "web_only",
									"value": "true"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.users.session.reset",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.users.session.reset"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "79102720-c87a-4b9f-b119-2a5c4883c4c3",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The ID of the user to wipe sessions for",
									"key": "user_id",
									"value": "non dolor voluptate nisi"
								},
								{
									"description": "Only expire mobile sessions (default: false)",
									"key": "mobile_only",
									"value": "false"
								},
								{
									"description": "Only expire web sessions (default: false)",
									"key": "web_only",
									"value": "true"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.users.session.reset",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.users.session.reset"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin users set Admin",
			"id": "54cfed42-06cc-4886-b968-2b34d9f3052e",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "team_id",
							"value": "exercitation occaecat Ut",
							"description": "(Required) The ID (`T1234`) of the workspace."
						},
						{
							"key": "user_id",
							"value": "eiusmod mollit ullam",
							"description": "(Required) The ID of the user to designate as an admin."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.users.setAdmin",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.users.setAdmin"
					]
				},
				"description": "Set an existing guest, regular user, or owner to be an admin user."
			},
			"response": [
				{
					"id": "943605df-19c9-499e-907f-fc7818a6140f",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The ID (`T1234`) of the workspace.",
									"key": "team_id",
									"value": "exercitation occaecat Ut"
								},
								{
									"description": "(Required) The ID of the user to designate as an admin.",
									"key": "user_id",
									"value": "eiusmod mollit ullam"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.users.setAdmin",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.users.setAdmin"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "82ed67d8-438b-495d-b980-8d7f3b7196a5",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The ID (`T1234`) of the workspace.",
									"key": "team_id",
									"value": "exercitation occaecat Ut"
								},
								{
									"description": "(Required) The ID of the user to designate as an admin.",
									"key": "user_id",
									"value": "eiusmod mollit ullam"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.users.setAdmin",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.users.setAdmin"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin users set Expiration",
			"id": "18165643-808b-475b-af6b-db93fce5f871",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "team_id",
							"value": "officia reprehenderit est",
							"description": "(Required) The ID (`T1234`) of the workspace."
						},
						{
							"key": "user_id",
							"value": "magna exercitation",
							"description": "(Required) The ID of the user to set an expiration for."
						},
						{
							"key": "expiration_ts",
							"value": "-34387313",
							"description": "(Required) Timestamp when guest account should be disabled."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.users.setExpiration",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.users.setExpiration"
					]
				},
				"description": "Set an expiration for a guest user"
			},
			"response": [
				{
					"id": "2d7f9bdd-7bbb-4ea9-859c-ff9cb73e38cd",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The ID (`T1234`) of the workspace.",
									"key": "team_id",
									"value": "officia reprehenderit est"
								},
								{
									"description": "(Required) The ID of the user to set an expiration for.",
									"key": "user_id",
									"value": "magna exercitation"
								},
								{
									"description": "(Required) Timestamp when guest account should be disabled.",
									"key": "expiration_ts",
									"value": "-34387313"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.users.setExpiration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.users.setExpiration"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "4eaf2f10-4591-48f5-a507-1842cdb7879f",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The ID (`T1234`) of the workspace.",
									"key": "team_id",
									"value": "officia reprehenderit est"
								},
								{
									"description": "(Required) The ID of the user to set an expiration for.",
									"key": "user_id",
									"value": "magna exercitation"
								},
								{
									"description": "(Required) Timestamp when guest account should be disabled.",
									"key": "expiration_ts",
									"value": "-34387313"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.users.setExpiration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.users.setExpiration"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin users set Owner",
			"id": "6896cd17-475d-4117-a151-d7a6fa4b1062",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "team_id",
							"value": "Excepteur sint dolor",
							"description": "(Required) The ID (`T1234`) of the workspace."
						},
						{
							"key": "user_id",
							"value": "sunt id sint incididunt",
							"description": "(Required) Id of the user to promote to owner."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.users.setOwner",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.users.setOwner"
					]
				},
				"description": "Set an existing guest, regular user, or admin user to be a workspace owner."
			},
			"response": [
				{
					"id": "3883184a-a95e-4086-a734-eccc96cf2df8",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The ID (`T1234`) of the workspace.",
									"key": "team_id",
									"value": "Excepteur sint dolor"
								},
								{
									"description": "(Required) Id of the user to promote to owner.",
									"key": "user_id",
									"value": "sunt id sint incididunt"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.users.setOwner",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.users.setOwner"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "0aa36733-f693-45fa-b6d6-c56f8d151d82",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The ID (`T1234`) of the workspace.",
									"key": "team_id",
									"value": "Excepteur sint dolor"
								},
								{
									"description": "(Required) Id of the user to promote to owner.",
									"key": "user_id",
									"value": "sunt id sint incididunt"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.users.setOwner",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.users.setOwner"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin users set Regular",
			"id": "99034bf0-4b3b-4018-bf4f-790569566a84",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "team_id",
							"value": "aliqua laborum elit quis Duis",
							"description": "(Required) The ID (`T1234`) of the workspace."
						},
						{
							"key": "user_id",
							"value": "ullamco ",
							"description": "(Required) The ID of the user to designate as a regular user."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.users.setRegular",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.users.setRegular"
					]
				},
				"description": "Set an existing guest user, admin user, or owner to be a regular user."
			},
			"response": [
				{
					"id": "0853f8f4-ed24-4ffa-9b81-a477b34ca159",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The ID (`T1234`) of the workspace.",
									"key": "team_id",
									"value": "aliqua laborum elit quis Duis"
								},
								{
									"description": "(Required) The ID of the user to designate as a regular user.",
									"key": "user_id",
									"value": "ullamco "
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.users.setRegular",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.users.setRegular"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "12fb8e55-bdfe-468e-b1cb-4ae047fa606c",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The ID (`T1234`) of the workspace.",
									"key": "team_id",
									"value": "aliqua laborum elit quis Duis"
								},
								{
									"description": "(Required) The ID of the user to designate as a regular user.",
									"key": "user_id",
									"value": "ullamco "
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.users.setRegular",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.users.setRegular"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "api test",
			"id": "439283f5-f370-4ff5-b66d-91131ba061c6",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api.test?error=quis amet commodo&foo=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api.test"
					],
					"query": [
						{
							"key": "error",
							"value": "quis amet commodo",
							"description": "Error response to return"
						},
						{
							"key": "foo",
							"value": "quis amet commodo",
							"description": "example property to return"
						}
					]
				},
				"description": "Checks API calling code."
			},
			"response": [
				{
					"id": "1bd6cea5-4013-407b-bad4-e1a1a9fa17b4",
					"name": "Standard success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api.test?error=quis amet commodo&foo=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api.test"
							],
							"query": [
								{
									"key": "error",
									"value": "quis amet commodo"
								},
								{
									"key": "foo",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "f2a9e32a-af20-4224-b616-1493c3195fb7",
					"name": "Artificial error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api.test?error=quis amet commodo&foo=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api.test"
							],
							"query": [
								{
									"key": "error",
									"value": "quis amet commodo"
								},
								{
									"key": "foo",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"args\": {\n    \"error\": \"my_error\"\n  },\n  \"error\": \"my_error\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "apps event authorizations list",
			"id": "6f6c5c0a-c245-4be7-bf32-105139db3278",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `authorizations:read`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/apps.event.authorizations.list?event_context=quis amet commodo&cursor=quis amet commodo&limit=74567849",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"apps.event.authorizations.list"
					],
					"query": [
						{
							"key": "event_context",
							"value": "quis amet commodo",
							"description": "(Required) "
						},
						{
							"key": "cursor",
							"value": "quis amet commodo"
						},
						{
							"key": "limit",
							"value": "74567849"
						}
					]
				},
				"description": "Get a list of authorizations for the given event context. Each authorization represents an app installation that the event is visible to."
			},
			"response": [
				{
					"id": "78f9acca-a4c5-42e5-b07b-936b3df704cb",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `authorizations:read`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/apps.event.authorizations.list?event_context=quis amet commodo&cursor=quis amet commodo&limit=74567849",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apps.event.authorizations.list"
							],
							"query": [
								{
									"key": "event_context",
									"value": "quis amet commodo"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"authorizations\": {\n    \"enterprise_id\": \"string\",\n    \"is_bot\": \"string\",\n    \"team_id\": \"string\",\n    \"user_id\": \"string\"\n  },\n  \"ok\": true\n}"
				},
				{
					"id": "183c01bb-ab5a-422e-9ef8-7fcbd3c2b635",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `authorizations:read`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/apps.event.authorizations.list?event_context=quis amet commodo&cursor=quis amet commodo&limit=74567849",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apps.event.authorizations.list"
							],
							"query": [
								{
									"key": "event_context",
									"value": "quis amet commodo"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "apps permissions info",
			"id": "c48c166d-b773-40e9-8d6b-009115012dd9",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/apps.permissions.info?token=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"apps.permissions.info"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "Authentication token. Requires scope: `none`"
						}
					]
				},
				"description": "Returns list of permissions this app has on a team."
			},
			"response": [
				{
					"id": "11a07411-eb0d-4e0e-b2a9-9c05370b6604",
					"name": "Standard success response when used with a user token",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/apps.permissions.info?token=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apps.permissions.info"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"info\": {\n    \"app_home\": {\n      \"resources\": {\n        \"ids\": [\n          \"D0C0NU1Q8\",\n          \"D0BH95DLH\"\n        ]\n      },\n      \"scopes\": [\n        \"chat:write\",\n        \"im:history\",\n        \"im:read\"\n      ]\n    },\n    \"channel\": {\n      \"resources\": {\n        \"excluded_ids\": [],\n        \"ids\": [\n          \"C061FA5PB\"\n        ],\n        \"wildcard\": false\n      },\n      \"scopes\": [\n        \"channels:read\"\n      ]\n    },\n    \"group\": {\n      \"resources\": {\n        \"ids\": []\n      },\n      \"scopes\": []\n    },\n    \"im\": {\n      \"resources\": {\n        \"ids\": []\n      },\n      \"scopes\": []\n    },\n    \"mpim\": {\n      \"resources\": {\n        \"ids\": []\n      },\n      \"scopes\": []\n    },\n    \"team\": {\n      \"resources\": {\n        \"ids\": []\n      },\n      \"scopes\": []\n    }\n  },\n  \"ok\": true\n}"
				},
				{
					"id": "4f8c5f38-3c28-4f84-8d84-117f8d95438f",
					"name": "Standard failure response when used with an invalid token",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/apps.permissions.info?token=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apps.permissions.info"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "apps permissions request",
			"id": "919a6cb5-b001-4ca2-ad91-7cf8e9babef8",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/apps.permissions.request?token=quis amet commodo&scopes=quis amet commodo&trigger_id=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"apps.permissions.request"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "(Required) Authentication token. Requires scope: `none`"
						},
						{
							"key": "scopes",
							"value": "quis amet commodo",
							"description": "(Required) A comma separated list of scopes to request for"
						},
						{
							"key": "trigger_id",
							"value": "quis amet commodo",
							"description": "(Required) Token used to trigger the permissions API"
						}
					]
				},
				"description": "Allows an app to request additional scopes"
			},
			"response": [
				{
					"id": "8700a7d6-1304-49cd-bede-83f5f64d5a8b",
					"name": "Standard success response when used with a user token",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/apps.permissions.request?token=quis amet commodo&scopes=quis amet commodo&trigger_id=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apps.permissions.request"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "scopes",
									"value": "quis amet commodo"
								},
								{
									"key": "trigger_id",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "0d2fe0b5-24c8-4039-b852-4fb016718d22",
					"name": "Standard failure response when trigger_id is invalid",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/apps.permissions.request?token=quis amet commodo&scopes=quis amet commodo&trigger_id=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apps.permissions.request"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "scopes",
									"value": "quis amet commodo"
								},
								{
									"key": "trigger_id",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_trigger_id\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "apps permissions resources list",
			"id": "207db5fa-5de1-412a-9367-e04d3f2c7565",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/apps.permissions.resources.list?token=quis amet commodo&cursor=quis amet commodo&limit=74567849",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"apps.permissions.resources.list"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "(Required) Authentication token. Requires scope: `none`"
						},
						{
							"key": "cursor",
							"value": "quis amet commodo",
							"description": "Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more detail."
						},
						{
							"key": "limit",
							"value": "74567849",
							"description": "The maximum number of items to return."
						}
					]
				},
				"description": "Returns list of resource grants this app has on a team."
			},
			"response": [
				{
					"id": "3bf99660-675c-4dd8-9ddb-846f10cea647",
					"name": "Typical successful paginated response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/apps.permissions.resources.list?token=quis amet commodo&cursor=quis amet commodo&limit=74567849",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apps.permissions.resources.list"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"resources\": [\n    {\n      \"id\": \"T0DES3UAN\",\n      \"type\": \"team\"\n    },\n    {\n      \"id\": \"D024BFF1M\",\n      \"type\": \"app_home\"\n    },\n    {\n      \"id\": \"C024BE91L\",\n      \"type\": \"channel\"\n    }\n  ],\n  \"response_metadata\": {\n    \"next_cursor\": \"dGVhbTpDMUg5UkVTR0w=\"\n  }\n}"
				},
				{
					"id": "f71dc9d1-a661-4a89-9fd7-96c8b81f0543",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/apps.permissions.resources.list?token=quis amet commodo&cursor=quis amet commodo&limit=74567849",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apps.permissions.resources.list"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_cursor\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "apps permissions scopes list",
			"id": "25b7bd3e-7b5e-4ba6-8583-45313a9a6512",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/apps.permissions.scopes.list?token=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"apps.permissions.scopes.list"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "(Required) Authentication token. Requires scope: `none`"
						}
					]
				},
				"description": "Returns list of scopes this app has on a team."
			},
			"response": [
				{
					"id": "8610319d-f22e-4730-a6de-e4153065399e",
					"name": "Typical successful paginated response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/apps.permissions.scopes.list?token=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apps.permissions.scopes.list"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"scopes\": {\n    \"app_home\": [\n      \"chat:write\",\n      \"im:history\",\n      \"im:read\"\n    ],\n    \"channel\": [\n      \"channels:history\",\n      \"chat:write\"\n    ],\n    \"group\": [\n      \"chat:write\"\n    ],\n    \"im\": [\n      \"chat:write\"\n    ],\n    \"mpim\": [\n      \"chat:write\"\n    ],\n    \"team\": [\n      \"users:read\"\n    ],\n    \"user\": []\n  }\n}"
				},
				{
					"id": "257dffd4-5949-4164-b5b7-f63076d42b03",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/apps.permissions.scopes.list?token=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apps.permissions.scopes.list"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "apps permissions users list",
			"id": "95efbcc9-97ac-4a9b-94f1-0888e2a09b26",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/apps.permissions.users.list?token=quis amet commodo&cursor=quis amet commodo&limit=74567849",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"apps.permissions.users.list"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "(Required) Authentication token. Requires scope: `none`"
						},
						{
							"key": "cursor",
							"value": "quis amet commodo",
							"description": "Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more detail."
						},
						{
							"key": "limit",
							"value": "74567849",
							"description": "The maximum number of items to return."
						}
					]
				},
				"description": "Returns list of user grants and corresponding scopes this app has on a team."
			},
			"response": [
				{
					"id": "30ca8a97-34a5-4311-aee5-1765cf257b69",
					"name": "Typical successful paginated response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/apps.permissions.users.list?token=quis amet commodo&cursor=quis amet commodo&limit=74567849",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apps.permissions.users.list"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"resources\": [\n    {\n      \"id\": \"U0DES3UAN\",\n      \"scopes\": [\n        \"dnd:write:user\",\n        \"reminders:write:user\"\n      ]\n    },\n    {\n      \"id\": \"U024BFF1M\",\n      \"scopes\": [\n        \"reminders:write:user\"\n      ]\n    }\n  ],\n  \"response_metadata\": {\n    \"next_cursor\": \"dGVhbTdPMUg5UkFTT0w=\"\n  }\n}"
				},
				{
					"id": "d64e265e-f55b-4e12-8c22-317cda7bdc4f",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/apps.permissions.users.list?token=quis amet commodo&cursor=quis amet commodo&limit=74567849",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apps.permissions.users.list"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_cursor\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "apps permissions users request",
			"id": "b5cd2966-fd7f-4241-84cb-e46539626f09",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/apps.permissions.users.request?token=quis amet commodo&scopes=quis amet commodo&trigger_id=quis amet commodo&user=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"apps.permissions.users.request"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "(Required) Authentication token. Requires scope: `none`"
						},
						{
							"key": "scopes",
							"value": "quis amet commodo",
							"description": "(Required) A comma separated list of user scopes to request for"
						},
						{
							"key": "trigger_id",
							"value": "quis amet commodo",
							"description": "(Required) Token used to trigger the request"
						},
						{
							"key": "user",
							"value": "quis amet commodo",
							"description": "(Required) The user this scope is being requested for"
						}
					]
				},
				"description": "Enables an app to trigger a permissions modal to grant an app access to a user access scope."
			},
			"response": [
				{
					"id": "f9c508a4-c47d-40d5-a134-f72c76f4679a",
					"name": "Standard success response when used with a user token",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/apps.permissions.users.request?token=quis amet commodo&scopes=quis amet commodo&trigger_id=quis amet commodo&user=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apps.permissions.users.request"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "scopes",
									"value": "quis amet commodo"
								},
								{
									"key": "trigger_id",
									"value": "quis amet commodo"
								},
								{
									"key": "user",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "3567c809-0c68-4943-aafc-e70b9f76a0ae",
					"name": "Standard failure response when trigger_id is invalid",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/apps.permissions.users.request?token=quis amet commodo&scopes=quis amet commodo&trigger_id=quis amet commodo&user=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apps.permissions.users.request"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "scopes",
									"value": "quis amet commodo"
								},
								{
									"key": "trigger_id",
									"value": "quis amet commodo"
								},
								{
									"key": "user",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_trigger_id\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "apps uninstall",
			"id": "c1076fe6-26e9-4166-a0c1-b2d614f25d8d",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/apps.uninstall?token=quis amet commodo&client_id=quis amet commodo&client_secret=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"apps.uninstall"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "Authentication token. Requires scope: `none`"
						},
						{
							"key": "client_id",
							"value": "quis amet commodo",
							"description": "Issued when you created your application."
						},
						{
							"key": "client_secret",
							"value": "quis amet commodo",
							"description": "Issued when you created your application."
						}
					]
				},
				"description": "Uninstalls your app from a workspace."
			},
			"response": [
				{
					"id": "7e8a5b4e-c95c-45cf-9c92-7cae402d225d",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/apps.uninstall?token=quis amet commodo&client_id=quis amet commodo&client_secret=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apps.uninstall"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "client_id",
									"value": "quis amet commodo"
								},
								{
									"key": "client_secret",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "f8f4445d-7641-400b-ad0b-529c7982e3bb",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/apps.uninstall?token=quis amet commodo&client_id=quis amet commodo&client_secret=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apps.uninstall"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "client_id",
									"value": "quis amet commodo"
								},
								{
									"key": "client_secret",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "auth revoke",
			"id": "8322fe5d-3b27-4fbf-8d75-854eef90f017",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/auth.revoke?token=quis amet commodo&test=true",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth.revoke"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "(Required) Authentication token. Requires scope: `none`"
						},
						{
							"key": "test",
							"value": "true",
							"description": "Setting this parameter to `1` triggers a _testing mode_ where the specified token will not actually be revoked."
						}
					]
				},
				"description": "Revokes a token."
			},
			"response": [
				{
					"id": "1e2b83c9-02b7-4566-aaba-3b0e4179e708",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/auth.revoke?token=quis amet commodo&test=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth.revoke"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "test",
									"value": "true"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"revoked\": true\n}"
				},
				{
					"id": "26d7bab5-da77-4430-8924-dfd20c4a6b1f",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/auth.revoke?token=quis amet commodo&test=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth.revoke"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "test",
									"value": "true"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "auth test",
			"id": "92ed3797-c0bc-40c5-bfb9-5a305e84e9db",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `none`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/auth.test",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth.test"
					]
				},
				"description": "Checks authentication & identity."
			},
			"response": [
				{
					"id": "446eb805-991d-4738-8f1b-0b7d3a9ef983",
					"name": "Standard success response when used with a user token",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `none`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/auth.test",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth.test"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"team\": \"Subarachnoid Workspace\",\n  \"team_id\": \"T12345678\",\n  \"url\": \"https://subarachnoid.slack.com/\",\n  \"user\": \"grace\",\n  \"user_id\": \"W12345678\"\n}"
				},
				{
					"id": "e206784f-3cc0-43ea-a615-2b686cd1162a",
					"name": "Standard failure response when used with an invalid token",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `none`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/auth.test",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth.test"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "bots info",
			"id": "cb375978-e4cf-436f-8bcb-ce36620670eb",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/bots.info?token=quis amet commodo&bot=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"bots.info"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "(Required) Authentication token. Requires scope: `users:read`"
						},
						{
							"key": "bot",
							"value": "quis amet commodo",
							"description": "Bot user to get info on"
						}
					]
				},
				"description": "Gets information about a bot user."
			},
			"response": [
				{
					"id": "78a2d823-bf3e-4a61-814f-cc8581adbd2d",
					"name": "When successful, returns bot info by bot ID.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/bots.info?token=quis amet commodo&bot=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bots.info"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "bot",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"bot\": {\n    \"app_id\": \"A161CLERW\",\n    \"deleted\": false,\n    \"icons\": {\n      \"image_36\": \"https://...\",\n      \"image_48\": \"https://...\",\n      \"image_72\": \"https://...\"\n    },\n    \"id\": \"B061F7JD2\",\n    \"name\": \"beforebot\",\n    \"updated\": 1449272004,\n    \"user_id\": \"U012ABCDEF\"\n  },\n  \"ok\": true\n}"
				},
				{
					"id": "da7d43c4-f42c-4eb6-a29c-55e197c05d5d",
					"name": "When no bot can be found, it returns an error.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/bots.info?token=quis amet commodo&bot=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bots.info"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "bot",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"bot_not_found\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "calls add",
			"id": "5b6f1bc4-7ecd-4120-905b-f3ecc43aef9a",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `calls:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "external_unique_id",
							"value": "nulla proident elit",
							"description": "(Required) An ID supplied by the 3rd-party Call provider. It must be unique across all Calls from that service."
						},
						{
							"key": "join_url",
							"value": "et est",
							"description": "(Required) The URL required for a client to join the Call."
						},
						{
							"key": "external_display_id",
							"value": "culpa irure Lorem",
							"description": "An optional, human-readable ID supplied by the 3rd-party Call provider. If supplied, this ID will be displayed in the Call object."
						},
						{
							"key": "desktop_app_join_url",
							"value": "Duis culpa nostrud dolor dolore",
							"description": "When supplied, available Slack clients will attempt to directly launch the 3rd-party Call with this URL."
						},
						{
							"key": "date_start",
							"value": "-4676511",
							"description": "Call start time in UTC UNIX timestamp format"
						},
						{
							"key": "title",
							"value": "Lore",
							"description": "The name of the Call."
						},
						{
							"key": "created_by",
							"value": "eu elit ipsum Lorem amet",
							"description": "The valid Slack user ID of the user who created this Call. When this method is called with a user token, the `created_by` field is optional and defaults to the authed user of the token. Otherwise, the field is required."
						},
						{
							"key": "users",
							"value": "pariatur sit consequat ullamco",
							"description": "The list of users to register as participants in the Call. [Read more on how to specify users here](/apis/calls#users)."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/calls.add",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"calls.add"
					]
				},
				"description": "Registers a new Call."
			},
			"response": [
				{
					"id": "ff17061e-8643-42e1-82d8-87de7df06ee7",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `calls:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) An ID supplied by the 3rd-party Call provider. It must be unique across all Calls from that service.",
									"key": "external_unique_id",
									"value": "nulla proident elit"
								},
								{
									"description": "(Required) The URL required for a client to join the Call.",
									"key": "join_url",
									"value": "et est"
								},
								{
									"description": "An optional, human-readable ID supplied by the 3rd-party Call provider. If supplied, this ID will be displayed in the Call object.",
									"key": "external_display_id",
									"value": "culpa irure Lorem"
								},
								{
									"description": "When supplied, available Slack clients will attempt to directly launch the 3rd-party Call with this URL.",
									"key": "desktop_app_join_url",
									"value": "Duis culpa nostrud dolor dolore"
								},
								{
									"description": "Call start time in UTC UNIX timestamp format",
									"key": "date_start",
									"value": "-4676511"
								},
								{
									"description": "The name of the Call.",
									"key": "title",
									"value": "Lore"
								},
								{
									"description": "The valid Slack user ID of the user who created this Call. When this method is called with a user token, the `created_by` field is optional and defaults to the authed user of the token. Otherwise, the field is required.",
									"key": "created_by",
									"value": "eu elit ipsum Lorem amet"
								},
								{
									"description": "The list of users to register as participants in the Call. [Read more on how to specify users here](/apis/calls#users).",
									"key": "users",
									"value": "pariatur sit consequat ullamco"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/calls.add",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"calls.add"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "1ebebaab-0c64-4dc2-9e25-545eae9cc203",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `calls:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) An ID supplied by the 3rd-party Call provider. It must be unique across all Calls from that service.",
									"key": "external_unique_id",
									"value": "nulla proident elit"
								},
								{
									"description": "(Required) The URL required for a client to join the Call.",
									"key": "join_url",
									"value": "et est"
								},
								{
									"description": "An optional, human-readable ID supplied by the 3rd-party Call provider. If supplied, this ID will be displayed in the Call object.",
									"key": "external_display_id",
									"value": "culpa irure Lorem"
								},
								{
									"description": "When supplied, available Slack clients will attempt to directly launch the 3rd-party Call with this URL.",
									"key": "desktop_app_join_url",
									"value": "Duis culpa nostrud dolor dolore"
								},
								{
									"description": "Call start time in UTC UNIX timestamp format",
									"key": "date_start",
									"value": "-4676511"
								},
								{
									"description": "The name of the Call.",
									"key": "title",
									"value": "Lore"
								},
								{
									"description": "The valid Slack user ID of the user who created this Call. When this method is called with a user token, the `created_by` field is optional and defaults to the authed user of the token. Otherwise, the field is required.",
									"key": "created_by",
									"value": "eu elit ipsum Lorem amet"
								},
								{
									"description": "The list of users to register as participants in the Call. [Read more on how to specify users here](/apis/calls#users).",
									"key": "users",
									"value": "pariatur sit consequat ullamco"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/calls.add",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"calls.add"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "calls end",
			"id": "6decabee-e180-4cdf-b1d7-19dc0f1adc87",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `calls:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "id",
							"value": "veniam dolor incididunt cupidatat",
							"description": "(Required) `id` returned when registering the call using the [`calls.add`](/methods/calls.add) method."
						},
						{
							"key": "duration",
							"value": "23308663",
							"description": "Call duration in seconds"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/calls.end",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"calls.end"
					]
				},
				"description": "Ends a Call."
			},
			"response": [
				{
					"id": "1ca170c4-08c6-4178-a358-1372d86be9c5",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `calls:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) `id` returned when registering the call using the [`calls.add`](/methods/calls.add) method.",
									"key": "id",
									"value": "veniam dolor incididunt cupidatat"
								},
								{
									"description": "Call duration in seconds",
									"key": "duration",
									"value": "23308663"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/calls.end",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"calls.end"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "949d2ea1-0d54-42f7-97ce-493ee118bf59",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `calls:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) `id` returned when registering the call using the [`calls.add`](/methods/calls.add) method.",
									"key": "id",
									"value": "veniam dolor incididunt cupidatat"
								},
								{
									"description": "Call duration in seconds",
									"key": "duration",
									"value": "23308663"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/calls.end",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"calls.end"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "calls info",
			"id": "26a3e0bc-12c5-4d50-8e30-39524fb4746b",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `calls:read`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/calls.info?id=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"calls.info"
					],
					"query": [
						{
							"key": "id",
							"value": "quis amet commodo",
							"description": "(Required) `id` of the Call returned by the [`calls.add`](/methods/calls.add) method."
						}
					]
				},
				"description": "Returns information about a Call."
			},
			"response": [
				{
					"id": "3b01ed18-c7d6-4327-ac7f-803c243e1948",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `calls:read`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/calls.info?id=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"calls.info"
							],
							"query": [
								{
									"key": "id",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "263518de-ebfe-4c89-bb5c-ce87883f7b4a",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `calls:read`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/calls.info?id=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"calls.info"
							],
							"query": [
								{
									"key": "id",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "calls participants add",
			"id": "3378900f-aa5d-4448-93ea-19b1332ad760",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `calls:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "id",
							"value": "dolor commodo veniam ut",
							"description": "(Required) `id` returned by the [`calls.add`](/methods/calls.add) method."
						},
						{
							"key": "users",
							"value": "qui",
							"description": "(Required) The list of users to add as participants in the Call. [Read more on how to specify users here](/apis/calls#users)."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/calls.participants.add",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"calls.participants.add"
					]
				},
				"description": "Registers new participants added to a Call."
			},
			"response": [
				{
					"id": "45676f80-731d-4d04-a3a7-b08836a4b0da",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `calls:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) `id` returned by the [`calls.add`](/methods/calls.add) method.",
									"key": "id",
									"value": "dolor commodo veniam ut"
								},
								{
									"description": "(Required) The list of users to add as participants in the Call. [Read more on how to specify users here](/apis/calls#users).",
									"key": "users",
									"value": "qui"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/calls.participants.add",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"calls.participants.add"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "e94016bd-6e6b-4f2d-a33f-d7470e5851fd",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `calls:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) `id` returned by the [`calls.add`](/methods/calls.add) method.",
									"key": "id",
									"value": "dolor commodo veniam ut"
								},
								{
									"description": "(Required) The list of users to add as participants in the Call. [Read more on how to specify users here](/apis/calls#users).",
									"key": "users",
									"value": "qui"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/calls.participants.add",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"calls.participants.add"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "calls participants remove",
			"id": "d05ed9fc-c74b-452b-a376-f5213b071c06",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `calls:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "id",
							"value": "deserunt aute",
							"description": "(Required) `id` returned by the [`calls.add`](/methods/calls.add) method."
						},
						{
							"key": "users",
							"value": "quis in",
							"description": "(Required) The list of users to remove as participants in the Call. [Read more on how to specify users here](/apis/calls#users)."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/calls.participants.remove",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"calls.participants.remove"
					]
				},
				"description": "Registers participants removed from a Call."
			},
			"response": [
				{
					"id": "bd9664a9-26e7-47be-b68b-2be070da4154",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `calls:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) `id` returned by the [`calls.add`](/methods/calls.add) method.",
									"key": "id",
									"value": "deserunt aute"
								},
								{
									"description": "(Required) The list of users to remove as participants in the Call. [Read more on how to specify users here](/apis/calls#users).",
									"key": "users",
									"value": "quis in"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/calls.participants.remove",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"calls.participants.remove"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "76b5aecd-ac99-4f06-8b2a-6c19cb60e908",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `calls:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) `id` returned by the [`calls.add`](/methods/calls.add) method.",
									"key": "id",
									"value": "deserunt aute"
								},
								{
									"description": "(Required) The list of users to remove as participants in the Call. [Read more on how to specify users here](/apis/calls#users).",
									"key": "users",
									"value": "quis in"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/calls.participants.remove",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"calls.participants.remove"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "calls update",
			"id": "5269f532-ee83-4989-aaa1-3f76e6c5d4c6",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `calls:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "id",
							"value": "Ut",
							"description": "(Required) `id` returned by the [`calls.add`](/methods/calls.add) method."
						},
						{
							"key": "title",
							"value": "Lorem amet voluptate qui cillum",
							"description": "The name of the Call."
						},
						{
							"key": "join_url",
							"value": "aliquip dolore pariatur aute",
							"description": "The URL required for a client to join the Call."
						},
						{
							"key": "desktop_app_join_url",
							"value": "ex conseq",
							"description": "When supplied, available Slack clients will attempt to directly launch the 3rd-party Call with this URL."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/calls.update",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"calls.update"
					]
				},
				"description": "Updates information about a Call."
			},
			"response": [
				{
					"id": "9bd5a9a9-2a00-4d27-97f8-07fc5c4d073e",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `calls:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) `id` returned by the [`calls.add`](/methods/calls.add) method.",
									"key": "id",
									"value": "Ut"
								},
								{
									"description": "The name of the Call.",
									"key": "title",
									"value": "Lorem amet voluptate qui cillum"
								},
								{
									"description": "The URL required for a client to join the Call.",
									"key": "join_url",
									"value": "aliquip dolore pariatur aute"
								},
								{
									"description": "When supplied, available Slack clients will attempt to directly launch the 3rd-party Call with this URL.",
									"key": "desktop_app_join_url",
									"value": "ex conseq"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/calls.update",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"calls.update"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "e00c05f7-f072-436d-8ca3-dc9fbec2ed4a",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `calls:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) `id` returned by the [`calls.add`](/methods/calls.add) method.",
									"key": "id",
									"value": "Ut"
								},
								{
									"description": "The name of the Call.",
									"key": "title",
									"value": "Lorem amet voluptate qui cillum"
								},
								{
									"description": "The URL required for a client to join the Call.",
									"key": "join_url",
									"value": "aliquip dolore pariatur aute"
								},
								{
									"description": "When supplied, available Slack clients will attempt to directly launch the 3rd-party Call with this URL.",
									"key": "desktop_app_join_url",
									"value": "ex conseq"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/calls.update",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"calls.update"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "chat delete",
			"id": "127b4b65-e20b-4b8e-85af-14a5333ee6bd",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `chat:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "ts",
							"value": "-88833926.36244082",
							"description": "Timestamp of the message to be deleted."
						},
						{
							"key": "channel",
							"value": "eu cillum id labore",
							"description": "Channel containing the message to be deleted."
						},
						{
							"key": "as_user",
							"value": "false",
							"description": "Pass true to delete the message as the authed user with `chat:write:user` scope. [Bot users](/bot-users) in this context are considered authed users. If unused or false, the message will be deleted with `chat:write:bot` scope."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/chat.delete",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"chat.delete"
					]
				},
				"description": "Deletes a message."
			},
			"response": [
				{
					"id": "92c19795-34fa-44c4-8a4f-b7f53473d68e",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `chat:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Timestamp of the message to be deleted.",
									"key": "ts",
									"value": "-88833926.36244082"
								},
								{
									"description": "Channel containing the message to be deleted.",
									"key": "channel",
									"value": "eu cillum id labore"
								},
								{
									"description": "Pass true to delete the message as the authed user with `chat:write:user` scope. [Bot users](/bot-users) in this context are considered authed users. If unused or false, the message will be deleted with `chat:write:bot` scope.",
									"key": "as_user",
									"value": "false"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/chat.delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chat.delete"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"channel\": \"C024BE91L\",\n  \"ok\": true,\n  \"ts\": \"1401383885.000061\"\n}"
				},
				{
					"id": "05a78ecf-7451-427b-84a5-97c391bb1fe7",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `chat:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Timestamp of the message to be deleted.",
									"key": "ts",
									"value": "-88833926.36244082"
								},
								{
									"description": "Channel containing the message to be deleted.",
									"key": "channel",
									"value": "eu cillum id labore"
								},
								{
									"description": "Pass true to delete the message as the authed user with `chat:write:user` scope. [Bot users](/bot-users) in this context are considered authed users. If unused or false, the message will be deleted with `chat:write:bot` scope.",
									"key": "as_user",
									"value": "false"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/chat.delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chat.delete"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"message_not_found\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "chat delete Scheduled Message",
			"id": "24ed1b05-7d4e-446d-9cb2-861f0dd74738",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `chat:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "laborum officia enim",
							"description": "(Required) The channel the scheduled_message is posting to"
						},
						{
							"key": "scheduled_message_id",
							"value": "in et",
							"description": "(Required) `scheduled_message_id` returned from call to chat.scheduleMessage"
						},
						{
							"key": "as_user",
							"value": "true",
							"description": "Pass true to delete the message as the authed user with `chat:write:user` scope. [Bot users](/bot-users) in this context are considered authed users. If unused or false, the message will be deleted with `chat:write:bot` scope."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/chat.deleteScheduledMessage",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"chat.deleteScheduledMessage"
					]
				},
				"description": "Deletes a pending scheduled message from the queue."
			},
			"response": [
				{
					"id": "b68a0b51-8e55-4de5-8e0a-21e122aa3062",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `chat:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The channel the scheduled_message is posting to",
									"key": "channel",
									"value": "laborum officia enim"
								},
								{
									"description": "(Required) `scheduled_message_id` returned from call to chat.scheduleMessage",
									"key": "scheduled_message_id",
									"value": "in et"
								},
								{
									"description": "Pass true to delete the message as the authed user with `chat:write:user` scope. [Bot users](/bot-users) in this context are considered authed users. If unused or false, the message will be deleted with `chat:write:bot` scope.",
									"key": "as_user",
									"value": "true"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/chat.deleteScheduledMessage",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chat.deleteScheduledMessage"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "4e02cc16-e94c-46b1-98d8-3e5c0cddb02e",
					"name": "Typical error response if no message is found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `chat:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The channel the scheduled_message is posting to",
									"key": "channel",
									"value": "laborum officia enim"
								},
								{
									"description": "(Required) `scheduled_message_id` returned from call to chat.scheduleMessage",
									"key": "scheduled_message_id",
									"value": "in et"
								},
								{
									"description": "Pass true to delete the message as the authed user with `chat:write:user` scope. [Bot users](/bot-users) in this context are considered authed users. If unused or false, the message will be deleted with `chat:write:bot` scope.",
									"key": "as_user",
									"value": "true"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/chat.deleteScheduledMessage",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chat.deleteScheduledMessage"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_scheduled_message_id\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "chat get Permalink",
			"id": "005e3764-2347-4fe6-a24d-67e644c39f31",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/chat.getPermalink?token=quis amet commodo&channel=quis amet commodo&message_ts=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"chat.getPermalink"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "(Required) Authentication token. Requires scope: `none`"
						},
						{
							"key": "channel",
							"value": "quis amet commodo",
							"description": "(Required) The ID of the conversation or channel containing the message"
						},
						{
							"key": "message_ts",
							"value": "quis amet commodo",
							"description": "(Required) A message's `ts` value, uniquely identifying it within a channel"
						}
					]
				},
				"description": "Retrieve a permalink URL for a specific extant message"
			},
			"response": [
				{
					"id": "abc1f403-7f0b-45ba-b6f5-da0ddbb4918a",
					"name": "Standard success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/chat.getPermalink?token=quis amet commodo&channel=quis amet commodo&message_ts=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chat.getPermalink"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "channel",
									"value": "quis amet commodo"
								},
								{
									"key": "message_ts",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"channel\": \"C1H9RESGA\",\n  \"ok\": true,\n  \"permalink\": \"https://ghostbusters.slack.com/archives/C1H9RESGA/p135854651500008\"\n}"
				},
				{
					"id": "62b085d5-9a9f-413a-b89e-34464f70d605",
					"name": "Error response when channel cannot be found",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/chat.getPermalink?token=quis amet commodo&channel=quis amet commodo&message_ts=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chat.getPermalink"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "channel",
									"value": "quis amet commodo"
								},
								{
									"key": "message_ts",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"channel_not_found\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "chat me Message",
			"id": "a80fd31c-42f9-4fc5-9eba-7feeefbf7b44",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `chat:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "in dolore",
							"description": "Channel to send message to. Can be a public channel, private group or IM channel. Can be an encoded ID, or a name."
						},
						{
							"key": "text",
							"value": "in dolor deserunt sint",
							"description": "Text of the message to send."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/chat.meMessage",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"chat.meMessage"
					]
				},
				"description": "Share a me message into a channel."
			},
			"response": [
				{
					"id": "578d16fb-5859-437f-8ef0-e53199d4ffc5",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `chat:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Channel to send message to. Can be a public channel, private group or IM channel. Can be an encoded ID, or a name.",
									"key": "channel",
									"value": "in dolore"
								},
								{
									"description": "Text of the message to send.",
									"key": "text",
									"value": "in dolor deserunt sint"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/chat.meMessage",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chat.meMessage"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"channel\": \"C024BE7LR\",\n  \"ok\": true,\n  \"ts\": \"1417671948.000006\"\n}"
				},
				{
					"id": "1202cbcf-ef08-432e-97a1-ccaf6cd661d6",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `chat:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Channel to send message to. Can be a public channel, private group or IM channel. Can be an encoded ID, or a name.",
									"key": "channel",
									"value": "in dolore"
								},
								{
									"description": "Text of the message to send.",
									"key": "text",
									"value": "in dolor deserunt sint"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/chat.meMessage",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chat.meMessage"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "chat post Ephemeral",
			"id": "21778339-f112-410d-9d1f-9ee925472741",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `chat:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "quis veniam",
							"description": "(Required) Channel, private group, or IM channel to send message to. Can be an encoded ID, or a name."
						},
						{
							"key": "user",
							"value": "vo",
							"description": "(Required) `id` of the user who will receive the ephemeral message. The user should be in the channel specified by the `channel` argument."
						},
						{
							"key": "as_user",
							"value": "true",
							"description": "Pass true to post the message as the authed user. Defaults to true if the chat:write:bot scope is not included. Otherwise, defaults to false."
						},
						{
							"key": "attachments",
							"value": "aliqua commodo",
							"description": "A JSON-based array of structured attachments, presented as a URL-encoded string."
						},
						{
							"key": "blocks",
							"value": "non dolore laboris Duis",
							"description": "A JSON-based array of structured blocks, presented as a URL-encoded string."
						},
						{
							"key": "icon_emoji",
							"value": "dolore nostrud ea",
							"description": "Emoji to use as the icon for this message. Overrides `icon_url`. Must be used in conjunction with `as_user` set to `false`, otherwise ignored. See [authorship](#authorship) below."
						},
						{
							"key": "icon_url",
							"value": "incididunt sunt do reprehenderit",
							"description": "URL to an image to use as the icon for this message. Must be used in conjunction with `as_user` set to false, otherwise ignored. See [authorship](#authorship) below."
						},
						{
							"key": "link_names",
							"value": "false",
							"description": "Find and link channel names and usernames."
						},
						{
							"key": "parse",
							"value": "in Ut",
							"description": "Change how messages are treated. Defaults to `none`. See [below](#formatting)."
						},
						{
							"key": "text",
							"value": "commodo officia dolor exercitation",
							"description": "How this field works and whether it is required depends on other fields you use in your API call. [See below](#text_usage) for more detail."
						},
						{
							"key": "thread_ts",
							"value": "esse dolor ullamco nulla",
							"description": "Provide another message's `ts` value to post this message in a thread. Avoid using a reply's `ts` value; use its parent's value instead. Ephemeral messages in threads are only shown if there is already an active thread."
						},
						{
							"key": "username",
							"value": "Duis reprehenderit Lorem eiusmod",
							"description": "Set your bot's user name. Must be used in conjunction with `as_user` set to false, otherwise ignored. See [authorship](#authorship) below."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/chat.postEphemeral",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"chat.postEphemeral"
					]
				},
				"description": "Sends an ephemeral message to a user in a channel."
			},
			"response": [
				{
					"id": "43dd12a3-551c-4e27-b35f-0665a158cef7",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `chat:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Channel, private group, or IM channel to send message to. Can be an encoded ID, or a name.",
									"key": "channel",
									"value": "quis veniam"
								},
								{
									"description": "(Required) `id` of the user who will receive the ephemeral message. The user should be in the channel specified by the `channel` argument.",
									"key": "user",
									"value": "vo"
								},
								{
									"description": "Pass true to post the message as the authed user. Defaults to true if the chat:write:bot scope is not included. Otherwise, defaults to false.",
									"key": "as_user",
									"value": "true"
								},
								{
									"description": "A JSON-based array of structured attachments, presented as a URL-encoded string.",
									"key": "attachments",
									"value": "aliqua commodo"
								},
								{
									"description": "A JSON-based array of structured blocks, presented as a URL-encoded string.",
									"key": "blocks",
									"value": "non dolore laboris Duis"
								},
								{
									"description": "Emoji to use as the icon for this message. Overrides `icon_url`. Must be used in conjunction with `as_user` set to `false`, otherwise ignored. See [authorship](#authorship) below.",
									"key": "icon_emoji",
									"value": "dolore nostrud ea"
								},
								{
									"description": "URL to an image to use as the icon for this message. Must be used in conjunction with `as_user` set to false, otherwise ignored. See [authorship](#authorship) below.",
									"key": "icon_url",
									"value": "incididunt sunt do reprehenderit"
								},
								{
									"description": "Find and link channel names and usernames.",
									"key": "link_names",
									"value": "false"
								},
								{
									"description": "Change how messages are treated. Defaults to `none`. See [below](#formatting).",
									"key": "parse",
									"value": "in Ut"
								},
								{
									"description": "How this field works and whether it is required depends on other fields you use in your API call. [See below](#text_usage) for more detail.",
									"key": "text",
									"value": "commodo officia dolor exercitation"
								},
								{
									"description": "Provide another message's `ts` value to post this message in a thread. Avoid using a reply's `ts` value; use its parent's value instead. Ephemeral messages in threads are only shown if there is already an active thread.",
									"key": "thread_ts",
									"value": "esse dolor ullamco nulla"
								},
								{
									"description": "Set your bot's user name. Must be used in conjunction with `as_user` set to false, otherwise ignored. See [authorship](#authorship) below.",
									"key": "username",
									"value": "Duis reprehenderit Lorem eiusmod"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/chat.postEphemeral",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chat.postEphemeral"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message_ts\": \"1502210682.580145\",\n  \"ok\": true\n}"
				},
				{
					"id": "e35cd4eb-548c-481b-a829-b432e8c4ffbb",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `chat:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Channel, private group, or IM channel to send message to. Can be an encoded ID, or a name.",
									"key": "channel",
									"value": "quis veniam"
								},
								{
									"description": "(Required) `id` of the user who will receive the ephemeral message. The user should be in the channel specified by the `channel` argument.",
									"key": "user",
									"value": "vo"
								},
								{
									"description": "Pass true to post the message as the authed user. Defaults to true if the chat:write:bot scope is not included. Otherwise, defaults to false.",
									"key": "as_user",
									"value": "true"
								},
								{
									"description": "A JSON-based array of structured attachments, presented as a URL-encoded string.",
									"key": "attachments",
									"value": "aliqua commodo"
								},
								{
									"description": "A JSON-based array of structured blocks, presented as a URL-encoded string.",
									"key": "blocks",
									"value": "non dolore laboris Duis"
								},
								{
									"description": "Emoji to use as the icon for this message. Overrides `icon_url`. Must be used in conjunction with `as_user` set to `false`, otherwise ignored. See [authorship](#authorship) below.",
									"key": "icon_emoji",
									"value": "dolore nostrud ea"
								},
								{
									"description": "URL to an image to use as the icon for this message. Must be used in conjunction with `as_user` set to false, otherwise ignored. See [authorship](#authorship) below.",
									"key": "icon_url",
									"value": "incididunt sunt do reprehenderit"
								},
								{
									"description": "Find and link channel names and usernames.",
									"key": "link_names",
									"value": "false"
								},
								{
									"description": "Change how messages are treated. Defaults to `none`. See [below](#formatting).",
									"key": "parse",
									"value": "in Ut"
								},
								{
									"description": "How this field works and whether it is required depends on other fields you use in your API call. [See below](#text_usage) for more detail.",
									"key": "text",
									"value": "commodo officia dolor exercitation"
								},
								{
									"description": "Provide another message's `ts` value to post this message in a thread. Avoid using a reply's `ts` value; use its parent's value instead. Ephemeral messages in threads are only shown if there is already an active thread.",
									"key": "thread_ts",
									"value": "esse dolor ullamco nulla"
								},
								{
									"description": "Set your bot's user name. Must be used in conjunction with `as_user` set to false, otherwise ignored. See [authorship](#authorship) below.",
									"key": "username",
									"value": "Duis reprehenderit Lorem eiusmod"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/chat.postEphemeral",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chat.postEphemeral"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"user_not_in_channel\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "chat post Message",
			"id": "ddf659a5-036a-4f1e-b993-3a7824b68cbd",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `chat:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "ullamco officia",
							"description": "(Required) Channel, private group, or IM channel to send message to. Can be an encoded ID, or a name. See [below](#channels) for more details."
						},
						{
							"key": "as_user",
							"value": "laboris cupidatat",
							"description": "Pass true to post the message as the authed user, instead of as a bot. Defaults to false. See [authorship](#authorship) below."
						},
						{
							"key": "attachments",
							"value": "aute est ex esse",
							"description": "A JSON-based array of structured attachments, presented as a URL-encoded string."
						},
						{
							"key": "blocks",
							"value": "incididunt",
							"description": "A JSON-based array of structured blocks, presented as a URL-encoded string."
						},
						{
							"key": "icon_emoji",
							"value": "culpa nulla",
							"description": "Emoji to use as the icon for this message. Overrides `icon_url`. Must be used in conjunction with `as_user` set to `false`, otherwise ignored. See [authorship](#authorship) below."
						},
						{
							"key": "icon_url",
							"value": "fugiat qui Lorem ullamco",
							"description": "URL to an image to use as the icon for this message. Must be used in conjunction with `as_user` set to false, otherwise ignored. See [authorship](#authorship) below."
						},
						{
							"key": "link_names",
							"value": "false",
							"description": "Find and link channel names and usernames."
						},
						{
							"key": "mrkdwn",
							"value": "false",
							"description": "Disable Slack markup parsing by setting to `false`. Enabled by default."
						},
						{
							"key": "parse",
							"value": "Duis sunt Excepteur pariatur sed",
							"description": "Change how messages are treated. Defaults to `none`. See [below](#formatting)."
						},
						{
							"key": "reply_broadcast",
							"value": "true",
							"description": "Used in conjunction with `thread_ts` and indicates whether reply should be made visible to everyone in the channel or conversation. Defaults to `false`."
						},
						{
							"key": "text",
							"value": "elit aute consequat",
							"description": "How this field works and whether it is required depends on other fields you use in your API call. [See below](#text_usage) for more detail."
						},
						{
							"key": "thread_ts",
							"value": "eius",
							"description": "Provide another message's `ts` value to make this message a reply. Avoid using a reply's `ts` value; use its parent instead."
						},
						{
							"key": "unfurl_links",
							"value": "false",
							"description": "Pass true to enable unfurling of primarily text-based content."
						},
						{
							"key": "unfurl_media",
							"value": "false",
							"description": "Pass false to disable unfurling of media content."
						},
						{
							"key": "username",
							"value": "aliquip ut",
							"description": "Set your bot's user name. Must be used in conjunction with `as_user` set to false, otherwise ignored. See [authorship](#authorship) below."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/chat.postMessage",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"chat.postMessage"
					]
				},
				"description": "Sends a message to a channel."
			},
			"response": [
				{
					"id": "d34cf6b3-c8b2-4d5b-8df6-9afb81674e39",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `chat:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Channel, private group, or IM channel to send message to. Can be an encoded ID, or a name. See [below](#channels) for more details.",
									"key": "channel",
									"value": "ullamco officia"
								},
								{
									"description": "Pass true to post the message as the authed user, instead of as a bot. Defaults to false. See [authorship](#authorship) below.",
									"key": "as_user",
									"value": "laboris cupidatat"
								},
								{
									"description": "A JSON-based array of structured attachments, presented as a URL-encoded string.",
									"key": "attachments",
									"value": "aute est ex esse"
								},
								{
									"description": "A JSON-based array of structured blocks, presented as a URL-encoded string.",
									"key": "blocks",
									"value": "incididunt"
								},
								{
									"description": "Emoji to use as the icon for this message. Overrides `icon_url`. Must be used in conjunction with `as_user` set to `false`, otherwise ignored. See [authorship](#authorship) below.",
									"key": "icon_emoji",
									"value": "culpa nulla"
								},
								{
									"description": "URL to an image to use as the icon for this message. Must be used in conjunction with `as_user` set to false, otherwise ignored. See [authorship](#authorship) below.",
									"key": "icon_url",
									"value": "fugiat qui Lorem ullamco"
								},
								{
									"description": "Find and link channel names and usernames.",
									"key": "link_names",
									"value": "false"
								},
								{
									"description": "Disable Slack markup parsing by setting to `false`. Enabled by default.",
									"key": "mrkdwn",
									"value": "false"
								},
								{
									"description": "Change how messages are treated. Defaults to `none`. See [below](#formatting).",
									"key": "parse",
									"value": "Duis sunt Excepteur pariatur sed"
								},
								{
									"description": "Used in conjunction with `thread_ts` and indicates whether reply should be made visible to everyone in the channel or conversation. Defaults to `false`.",
									"key": "reply_broadcast",
									"value": "true"
								},
								{
									"description": "How this field works and whether it is required depends on other fields you use in your API call. [See below](#text_usage) for more detail.",
									"key": "text",
									"value": "elit aute consequat"
								},
								{
									"description": "Provide another message's `ts` value to make this message a reply. Avoid using a reply's `ts` value; use its parent instead.",
									"key": "thread_ts",
									"value": "eius"
								},
								{
									"description": "Pass true to enable unfurling of primarily text-based content.",
									"key": "unfurl_links",
									"value": "false"
								},
								{
									"description": "Pass false to disable unfurling of media content.",
									"key": "unfurl_media",
									"value": "false"
								},
								{
									"description": "Set your bot's user name. Must be used in conjunction with `as_user` set to false, otherwise ignored. See [authorship](#authorship) below.",
									"key": "username",
									"value": "aliquip ut"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/chat.postMessage",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chat.postMessage"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"channel\": \"C1H9RESGL\",\n  \"message\": {\n    \"attachments\": [\n      {\n        \"fallback\": \"This is an attachment's fallback\",\n        \"id\": 1,\n        \"text\": \"This is an attachment\"\n      }\n    ],\n    \"bot_id\": \"B19LU7CSY\",\n    \"subtype\": \"bot_message\",\n    \"text\": \"Here's a message for you\",\n    \"ts\": \"1503435956.000247\",\n    \"type\": \"message\",\n    \"username\": \"ecto1\"\n  },\n  \"ok\": true,\n  \"ts\": \"1503435956.000247\"\n}"
				},
				{
					"id": "0a361958-85a9-4579-b906-47321cca332b",
					"name": "Typical error response if too many attachments are included",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `chat:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Channel, private group, or IM channel to send message to. Can be an encoded ID, or a name. See [below](#channels) for more details.",
									"key": "channel",
									"value": "ullamco officia"
								},
								{
									"description": "Pass true to post the message as the authed user, instead of as a bot. Defaults to false. See [authorship](#authorship) below.",
									"key": "as_user",
									"value": "laboris cupidatat"
								},
								{
									"description": "A JSON-based array of structured attachments, presented as a URL-encoded string.",
									"key": "attachments",
									"value": "aute est ex esse"
								},
								{
									"description": "A JSON-based array of structured blocks, presented as a URL-encoded string.",
									"key": "blocks",
									"value": "incididunt"
								},
								{
									"description": "Emoji to use as the icon for this message. Overrides `icon_url`. Must be used in conjunction with `as_user` set to `false`, otherwise ignored. See [authorship](#authorship) below.",
									"key": "icon_emoji",
									"value": "culpa nulla"
								},
								{
									"description": "URL to an image to use as the icon for this message. Must be used in conjunction with `as_user` set to false, otherwise ignored. See [authorship](#authorship) below.",
									"key": "icon_url",
									"value": "fugiat qui Lorem ullamco"
								},
								{
									"description": "Find and link channel names and usernames.",
									"key": "link_names",
									"value": "false"
								},
								{
									"description": "Disable Slack markup parsing by setting to `false`. Enabled by default.",
									"key": "mrkdwn",
									"value": "false"
								},
								{
									"description": "Change how messages are treated. Defaults to `none`. See [below](#formatting).",
									"key": "parse",
									"value": "Duis sunt Excepteur pariatur sed"
								},
								{
									"description": "Used in conjunction with `thread_ts` and indicates whether reply should be made visible to everyone in the channel or conversation. Defaults to `false`.",
									"key": "reply_broadcast",
									"value": "true"
								},
								{
									"description": "How this field works and whether it is required depends on other fields you use in your API call. [See below](#text_usage) for more detail.",
									"key": "text",
									"value": "elit aute consequat"
								},
								{
									"description": "Provide another message's `ts` value to make this message a reply. Avoid using a reply's `ts` value; use its parent instead.",
									"key": "thread_ts",
									"value": "eius"
								},
								{
									"description": "Pass true to enable unfurling of primarily text-based content.",
									"key": "unfurl_links",
									"value": "false"
								},
								{
									"description": "Pass false to disable unfurling of media content.",
									"key": "unfurl_media",
									"value": "false"
								},
								{
									"description": "Set your bot's user name. Must be used in conjunction with `as_user` set to false, otherwise ignored. See [authorship](#authorship) below.",
									"key": "username",
									"value": "aliquip ut"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/chat.postMessage",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chat.postMessage"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"too_many_attachments\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "chat schedule Message",
			"id": "fcf4f9ea-6ac6-44ed-9bb0-e2b26101b93a",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `chat:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "qui aliqua fugiat in",
							"description": "Channel, private group, or DM channel to send message to. Can be an encoded ID, or a name. See [below](#channels) for more details."
						},
						{
							"key": "text",
							"value": "vol",
							"description": "How this field works and whether it is required depends on other fields you use in your API call. [See below](#text_usage) for more detail."
						},
						{
							"key": "post_at",
							"value": "eiusmod officia in aliqua",
							"description": "Unix EPOCH timestamp of time in future to send the message."
						},
						{
							"key": "parse",
							"value": "Duis qui",
							"description": "Change how messages are treated. Defaults to `none`. See [chat.postMessage](chat.postMessage#formatting)."
						},
						{
							"key": "as_user",
							"value": "true",
							"description": "Pass true to post the message as the authed user, instead of as a bot. Defaults to false. See [chat.postMessage](chat.postMessage#authorship)."
						},
						{
							"key": "link_names",
							"value": "true",
							"description": "Find and link channel names and usernames."
						},
						{
							"key": "attachments",
							"value": "dolor amet",
							"description": "A JSON-based array of structured attachments, presented as a URL-encoded string."
						},
						{
							"key": "blocks",
							"value": "dolor pariatur amet",
							"description": "A JSON-based array of structured blocks, presented as a URL-encoded string."
						},
						{
							"key": "unfurl_links",
							"value": "false",
							"description": "Pass true to enable unfurling of primarily text-based content."
						},
						{
							"key": "unfurl_media",
							"value": "true",
							"description": "Pass false to disable unfurling of media content."
						},
						{
							"key": "thread_ts",
							"value": "38820165.689165235",
							"description": "Provide another message's `ts` value to make this message a reply. Avoid using a reply's `ts` value; use its parent instead."
						},
						{
							"key": "reply_broadcast",
							"value": "true",
							"description": "Used in conjunction with `thread_ts` and indicates whether reply should be made visible to everyone in the channel or conversation. Defaults to `false`."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/chat.scheduleMessage",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"chat.scheduleMessage"
					]
				},
				"description": "Schedules a message to be sent to a channel."
			},
			"response": [
				{
					"id": "92d1b001-880f-446a-99ec-ba626df2b28e",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `chat:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Channel, private group, or DM channel to send message to. Can be an encoded ID, or a name. See [below](#channels) for more details.",
									"key": "channel",
									"value": "qui aliqua fugiat in"
								},
								{
									"description": "How this field works and whether it is required depends on other fields you use in your API call. [See below](#text_usage) for more detail.",
									"key": "text",
									"value": "vol"
								},
								{
									"description": "Unix EPOCH timestamp of time in future to send the message.",
									"key": "post_at",
									"value": "eiusmod officia in aliqua"
								},
								{
									"description": "Change how messages are treated. Defaults to `none`. See [chat.postMessage](chat.postMessage#formatting).",
									"key": "parse",
									"value": "Duis qui"
								},
								{
									"description": "Pass true to post the message as the authed user, instead of as a bot. Defaults to false. See [chat.postMessage](chat.postMessage#authorship).",
									"key": "as_user",
									"value": "true"
								},
								{
									"description": "Find and link channel names and usernames.",
									"key": "link_names",
									"value": "true"
								},
								{
									"description": "A JSON-based array of structured attachments, presented as a URL-encoded string.",
									"key": "attachments",
									"value": "dolor amet"
								},
								{
									"description": "A JSON-based array of structured blocks, presented as a URL-encoded string.",
									"key": "blocks",
									"value": "dolor pariatur amet"
								},
								{
									"description": "Pass true to enable unfurling of primarily text-based content.",
									"key": "unfurl_links",
									"value": "false"
								},
								{
									"description": "Pass false to disable unfurling of media content.",
									"key": "unfurl_media",
									"value": "true"
								},
								{
									"description": "Provide another message's `ts` value to make this message a reply. Avoid using a reply's `ts` value; use its parent instead.",
									"key": "thread_ts",
									"value": "38820165.689165235"
								},
								{
									"description": "Used in conjunction with `thread_ts` and indicates whether reply should be made visible to everyone in the channel or conversation. Defaults to `false`.",
									"key": "reply_broadcast",
									"value": "true"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/chat.scheduleMessage",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chat.scheduleMessage"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"channel\": \"C1H9RESGL\",\n  \"message\": {\n    \"attachments\": [\n      {\n        \"fallback\": \"This is an attachment's fallback\",\n        \"id\": 1,\n        \"text\": \"This is an attachment\"\n      }\n    ],\n    \"bot_id\": \"B19LU7CSY\",\n    \"subtype\": \"bot_message\",\n    \"text\": \"Here's a message for you in the future\",\n    \"type\": \"delayed_message\",\n    \"username\": \"ecto1\"\n  },\n  \"ok\": true,\n  \"post_at\": \"1562180400\",\n  \"scheduled_message_id\": \"Q1298393284\"\n}"
				},
				{
					"id": "c59e70fb-fa74-440f-9e78-579d3289da7d",
					"name": "Typical error response if the `post_at` is invalid (ex. in the past or too far into the future)",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `chat:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Channel, private group, or DM channel to send message to. Can be an encoded ID, or a name. See [below](#channels) for more details.",
									"key": "channel",
									"value": "qui aliqua fugiat in"
								},
								{
									"description": "How this field works and whether it is required depends on other fields you use in your API call. [See below](#text_usage) for more detail.",
									"key": "text",
									"value": "vol"
								},
								{
									"description": "Unix EPOCH timestamp of time in future to send the message.",
									"key": "post_at",
									"value": "eiusmod officia in aliqua"
								},
								{
									"description": "Change how messages are treated. Defaults to `none`. See [chat.postMessage](chat.postMessage#formatting).",
									"key": "parse",
									"value": "Duis qui"
								},
								{
									"description": "Pass true to post the message as the authed user, instead of as a bot. Defaults to false. See [chat.postMessage](chat.postMessage#authorship).",
									"key": "as_user",
									"value": "true"
								},
								{
									"description": "Find and link channel names and usernames.",
									"key": "link_names",
									"value": "true"
								},
								{
									"description": "A JSON-based array of structured attachments, presented as a URL-encoded string.",
									"key": "attachments",
									"value": "dolor amet"
								},
								{
									"description": "A JSON-based array of structured blocks, presented as a URL-encoded string.",
									"key": "blocks",
									"value": "dolor pariatur amet"
								},
								{
									"description": "Pass true to enable unfurling of primarily text-based content.",
									"key": "unfurl_links",
									"value": "false"
								},
								{
									"description": "Pass false to disable unfurling of media content.",
									"key": "unfurl_media",
									"value": "true"
								},
								{
									"description": "Provide another message's `ts` value to make this message a reply. Avoid using a reply's `ts` value; use its parent instead.",
									"key": "thread_ts",
									"value": "38820165.689165235"
								},
								{
									"description": "Used in conjunction with `thread_ts` and indicates whether reply should be made visible to everyone in the channel or conversation. Defaults to `false`.",
									"key": "reply_broadcast",
									"value": "true"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/chat.scheduleMessage",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chat.scheduleMessage"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"time_in_past\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "chat scheduled Messages list",
			"id": "48719754-05e1-424e-bc8e-85120e415356",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "Authentication token. Requires scope: `none`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/chat.scheduledMessages.list?channel=quis amet commodo&latest=92688022.54048604&oldest=92688022.54048604&limit=74567849&cursor=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"chat.scheduledMessages.list"
					],
					"query": [
						{
							"key": "channel",
							"value": "quis amet commodo",
							"description": "The channel of the scheduled messages"
						},
						{
							"key": "latest",
							"value": "92688022.54048604",
							"description": "A UNIX timestamp of the latest value in the time range"
						},
						{
							"key": "oldest",
							"value": "92688022.54048604",
							"description": "A UNIX timestamp of the oldest value in the time range"
						},
						{
							"key": "limit",
							"value": "74567849",
							"description": "Maximum number of original entries to return."
						},
						{
							"key": "cursor",
							"value": "quis amet commodo",
							"description": "For pagination purposes, this is the `cursor` value returned from a previous call to `chat.scheduledmessages.list` indicating where you want to start this call from."
						}
					]
				},
				"description": "Returns a list of scheduled messages."
			},
			"response": [
				{
					"id": "cdfdbce9-a2b0-4d2f-9b2c-d10d42d8082b",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `none`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/chat.scheduledMessages.list?channel=quis amet commodo&latest=92688022.54048604&oldest=92688022.54048604&limit=74567849&cursor=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chat.scheduledMessages.list"
							],
							"query": [
								{
									"key": "channel",
									"value": "quis amet commodo"
								},
								{
									"key": "latest",
									"value": "92688022.54048604"
								},
								{
									"key": "oldest",
									"value": "92688022.54048604"
								},
								{
									"key": "limit",
									"value": "74567849"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"response_metadata\": {\n    \"next_cursor\": \"\"\n  },\n  \"scheduled_messages\": [\n    {\n      \"channel_id\": \"C1H9RESGL\",\n      \"date_created\": 1551891734,\n      \"id\": 1298393284,\n      \"post_at\": 1551991428,\n      \"text\": \"Here's a message for you in the future\"\n    }\n  ]\n}"
				},
				{
					"id": "53042721-39f0-4592-8d97-0d3322cd408a",
					"name": "Typical error response if the channel passed is invalid",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `none`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/chat.scheduledMessages.list?channel=quis amet commodo&latest=92688022.54048604&oldest=92688022.54048604&limit=74567849&cursor=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chat.scheduledMessages.list"
							],
							"query": [
								{
									"key": "channel",
									"value": "quis amet commodo"
								},
								{
									"key": "latest",
									"value": "92688022.54048604"
								},
								{
									"key": "oldest",
									"value": "92688022.54048604"
								},
								{
									"key": "limit",
									"value": "74567849"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_channel\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "chat unfurl",
			"id": "2a8a61a8-1dd1-4386-97bb-2c6f624d1831",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `links:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "magna ut velit",
							"description": "(Required) Channel ID of the message"
						},
						{
							"key": "ts",
							"value": "laboris magna",
							"description": "(Required) Timestamp of the message to add unfurl behavior to."
						},
						{
							"key": "unfurls",
							"value": "et",
							"description": "URL-encoded JSON map with keys set to URLs featured in the the message, pointing to their unfurl blocks or message attachments."
						},
						{
							"key": "user_auth_message",
							"value": "Ut dolore in sunt enim",
							"description": "Provide a simply-formatted string to send as an ephemeral message to the user as invitation to authenticate further and enable full unfurling behavior"
						},
						{
							"key": "user_auth_required",
							"value": "true",
							"description": "Set to `true` or `1` to indicate the user must install your Slack app to trigger unfurls for this domain"
						},
						{
							"key": "user_auth_url",
							"value": "reprehenderit cupidatat eu voluptate culpa",
							"description": "Send users to this custom URL where they will complete authentication in your app to fully trigger unfurling. Value should be properly URL-encoded."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/chat.unfurl",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"chat.unfurl"
					]
				},
				"description": "Provide custom unfurl behavior for user-posted URLs"
			},
			"response": [
				{
					"id": "a60e6a8f-8ef9-468e-99c4-8ba135fe77cd",
					"name": "Typical, minimal success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `links:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Channel ID of the message",
									"key": "channel",
									"value": "magna ut velit"
								},
								{
									"description": "(Required) Timestamp of the message to add unfurl behavior to.",
									"key": "ts",
									"value": "laboris magna"
								},
								{
									"description": "URL-encoded JSON map with keys set to URLs featured in the the message, pointing to their unfurl blocks or message attachments.",
									"key": "unfurls",
									"value": "et"
								},
								{
									"description": "Provide a simply-formatted string to send as an ephemeral message to the user as invitation to authenticate further and enable full unfurling behavior",
									"key": "user_auth_message",
									"value": "Ut dolore in sunt enim"
								},
								{
									"description": "Set to `true` or `1` to indicate the user must install your Slack app to trigger unfurls for this domain",
									"key": "user_auth_required",
									"value": "true"
								},
								{
									"description": "Send users to this custom URL where they will complete authentication in your app to fully trigger unfurling. Value should be properly URL-encoded.",
									"key": "user_auth_url",
									"value": "reprehenderit cupidatat eu voluptate culpa"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/chat.unfurl",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chat.unfurl"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "844f596b-3798-4a41-9245-b28e27bcbb47",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `links:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Channel ID of the message",
									"key": "channel",
									"value": "magna ut velit"
								},
								{
									"description": "(Required) Timestamp of the message to add unfurl behavior to.",
									"key": "ts",
									"value": "laboris magna"
								},
								{
									"description": "URL-encoded JSON map with keys set to URLs featured in the the message, pointing to their unfurl blocks or message attachments.",
									"key": "unfurls",
									"value": "et"
								},
								{
									"description": "Provide a simply-formatted string to send as an ephemeral message to the user as invitation to authenticate further and enable full unfurling behavior",
									"key": "user_auth_message",
									"value": "Ut dolore in sunt enim"
								},
								{
									"description": "Set to `true` or `1` to indicate the user must install your Slack app to trigger unfurls for this domain",
									"key": "user_auth_required",
									"value": "true"
								},
								{
									"description": "Send users to this custom URL where they will complete authentication in your app to fully trigger unfurling. Value should be properly URL-encoded.",
									"key": "user_auth_url",
									"value": "reprehenderit cupidatat eu voluptate culpa"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/chat.unfurl",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chat.unfurl"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"cannot_unfurl_url\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "chat update",
			"id": "9f64423b-4143-473c-9cd9-3e24c23a6fbb",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `chat:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "adipisicing velit",
							"description": "(Required) Channel containing the message to be updated."
						},
						{
							"key": "ts",
							"value": "in cillum dolor anim Duis",
							"description": "(Required) Timestamp of the message to be updated."
						},
						{
							"key": "as_user",
							"value": "ut qui in voluptate",
							"description": "Pass true to update the message as the authed user. [Bot users](/bot-users) in this context are considered authed users."
						},
						{
							"key": "attachments",
							"value": "Excepteur dolor labore incididunt consec",
							"description": "A JSON-based array of structured attachments, presented as a URL-encoded string. This field is required when not presenting `text`. If you don't include this field, the message's previous `attachments` will be retained. To remove previous `attachments`, include an empty array for this field."
						},
						{
							"key": "blocks",
							"value": "cillum do eiusmod ut",
							"description": "A JSON-based array of [structured blocks](/block-kit/building), presented as a URL-encoded string. If you don't include this field, the message's previous `blocks` will be retained. To remove previous `blocks`, include an empty array for this field."
						},
						{
							"key": "link_names",
							"value": "do",
							"description": "Find and link channel names and usernames. Defaults to `none`. If you do not specify a value for this field, the original value set for the message will be overwritten with the default, `none`."
						},
						{
							"key": "parse",
							"value": "exercitation",
							"description": "Change how messages are treated. Defaults to `client`, unlike `chat.postMessage`. Accepts either `none` or `full`. If you do not specify a value for this field, the original value set for the message will be overwritten with the default, `client`."
						},
						{
							"key": "text",
							"value": "ea esse ex",
							"description": "New text for the message, using the [default formatting rules](/reference/surfaces/formatting). It's not required when presenting `blocks` or `attachments`."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/chat.update",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"chat.update"
					]
				},
				"description": "Updates a message."
			},
			"response": [
				{
					"id": "39fd1525-5a21-4a7e-9731-822ffe1432ef",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `chat:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Channel containing the message to be updated.",
									"key": "channel",
									"value": "adipisicing velit"
								},
								{
									"description": "(Required) Timestamp of the message to be updated.",
									"key": "ts",
									"value": "in cillum dolor anim Duis"
								},
								{
									"description": "Pass true to update the message as the authed user. [Bot users](/bot-users) in this context are considered authed users.",
									"key": "as_user",
									"value": "ut qui in voluptate"
								},
								{
									"description": "A JSON-based array of structured attachments, presented as a URL-encoded string. This field is required when not presenting `text`. If you don't include this field, the message's previous `attachments` will be retained. To remove previous `attachments`, include an empty array for this field.",
									"key": "attachments",
									"value": "Excepteur dolor labore incididunt consec"
								},
								{
									"description": "A JSON-based array of [structured blocks](/block-kit/building), presented as a URL-encoded string. If you don't include this field, the message's previous `blocks` will be retained. To remove previous `blocks`, include an empty array for this field.",
									"key": "blocks",
									"value": "cillum do eiusmod ut"
								},
								{
									"description": "Find and link channel names and usernames. Defaults to `none`. If you do not specify a value for this field, the original value set for the message will be overwritten with the default, `none`.",
									"key": "link_names",
									"value": "do"
								},
								{
									"description": "Change how messages are treated. Defaults to `client`, unlike `chat.postMessage`. Accepts either `none` or `full`. If you do not specify a value for this field, the original value set for the message will be overwritten with the default, `client`.",
									"key": "parse",
									"value": "exercitation"
								},
								{
									"description": "New text for the message, using the [default formatting rules](/reference/surfaces/formatting). It's not required when presenting `blocks` or `attachments`.",
									"key": "text",
									"value": "ea esse ex"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/chat.update",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chat.update"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"channel\": \"C024BE91L\",\n  \"message\": {\n    \"text\": \"Updated text you carefully authored\",\n    \"user\": \"U34567890\"\n  },\n  \"ok\": true,\n  \"text\": \"Updated text you carefully authored\",\n  \"ts\": \"1401383885.000061\"\n}"
				},
				{
					"id": "6ce966ef-5f38-4899-806b-1b3a402f2e0b",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `chat:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Channel containing the message to be updated.",
									"key": "channel",
									"value": "adipisicing velit"
								},
								{
									"description": "(Required) Timestamp of the message to be updated.",
									"key": "ts",
									"value": "in cillum dolor anim Duis"
								},
								{
									"description": "Pass true to update the message as the authed user. [Bot users](/bot-users) in this context are considered authed users.",
									"key": "as_user",
									"value": "ut qui in voluptate"
								},
								{
									"description": "A JSON-based array of structured attachments, presented as a URL-encoded string. This field is required when not presenting `text`. If you don't include this field, the message's previous `attachments` will be retained. To remove previous `attachments`, include an empty array for this field.",
									"key": "attachments",
									"value": "Excepteur dolor labore incididunt consec"
								},
								{
									"description": "A JSON-based array of [structured blocks](/block-kit/building), presented as a URL-encoded string. If you don't include this field, the message's previous `blocks` will be retained. To remove previous `blocks`, include an empty array for this field.",
									"key": "blocks",
									"value": "cillum do eiusmod ut"
								},
								{
									"description": "Find and link channel names and usernames. Defaults to `none`. If you do not specify a value for this field, the original value set for the message will be overwritten with the default, `none`.",
									"key": "link_names",
									"value": "do"
								},
								{
									"description": "Change how messages are treated. Defaults to `client`, unlike `chat.postMessage`. Accepts either `none` or `full`. If you do not specify a value for this field, the original value set for the message will be overwritten with the default, `client`.",
									"key": "parse",
									"value": "exercitation"
								},
								{
									"description": "New text for the message, using the [default formatting rules](/reference/surfaces/formatting). It's not required when presenting `blocks` or `attachments`.",
									"key": "text",
									"value": "ea esse ex"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/chat.update",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chat.update"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"cant_update_message\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "conversations archive",
			"id": "84c8ea1f-225c-4e6a-8429-f29b3c03329a",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `conversations:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "eiusmod",
							"description": "ID of conversation to archive"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/conversations.archive",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"conversations.archive"
					]
				},
				"description": "Archives a conversation."
			},
			"response": [
				{
					"id": "9610570e-3467-4eb6-8bd3-faf2c7a0a725",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "ID of conversation to archive",
									"key": "channel",
									"value": "eiusmod"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.archive",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.archive"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "ab536611-ab82-4df6-9825-4d843b16ae14",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "ID of conversation to archive",
									"key": "channel",
									"value": "eiusmod"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.archive",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.archive"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"channel_not_found\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "conversations close",
			"id": "7970abd0-94bb-4404-a3a0-e02538f53cde",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `conversations:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "Duis",
							"description": "Conversation to close."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/conversations.close",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"conversations.close"
					]
				},
				"description": "Closes a direct message or multi-person direct message."
			},
			"response": [
				{
					"id": "6c2fc653-3e59-4347-bbde-8a23a85700c0",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Conversation to close.",
									"key": "channel",
									"value": "Duis"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.close",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.close"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "4cacc9e0-7ab8-41dd-8bd5-d0915abb9516",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Conversation to close.",
									"key": "channel",
									"value": "Duis"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.close",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.close"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"channel_not_found\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "conversations create",
			"id": "cda80c40-ed0e-4ad1-a441-051369e1c9e4",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `conversations:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "name",
							"value": "culpa ut mollit",
							"description": "Name of the public or private channel to create"
						},
						{
							"key": "is_private",
							"value": "false",
							"description": "Create a private channel instead of a public one"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/conversations.create",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"conversations.create"
					]
				},
				"description": "Initiates a public or private channel-based conversation"
			},
			"response": [
				{
					"id": "3c9cf668-f9cd-42a6-941e-53f5a25d871c",
					"name": "If successful, the command returns a rather stark [conversation object](/types/conversation)",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Name of the public or private channel to create",
									"key": "name",
									"value": "culpa ut mollit"
								},
								{
									"description": "Create a private channel instead of a public one",
									"key": "is_private",
									"value": "false"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.create"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"channel\": {\n    \"created\": 1504554479,\n    \"creator\": \"U0123456\",\n    \"id\": \"C0EAQDV4Z\",\n    \"is_archived\": false,\n    \"is_channel\": true,\n    \"is_ext_shared\": false,\n    \"is_general\": false,\n    \"is_group\": false,\n    \"is_im\": false,\n    \"is_member\": true,\n    \"is_mpim\": false,\n    \"is_org_shared\": false,\n    \"is_pending_ext_shared\": false,\n    \"is_private\": false,\n    \"is_shared\": false,\n    \"last_read\": \"0000000000.000000\",\n    \"latest\": null,\n    \"name\": \"endeavor\",\n    \"name_normalized\": \"endeavor\",\n    \"pending_shared\": [],\n    \"previous_names\": [],\n    \"priority\": 0,\n    \"purpose\": {\n      \"creator\": \"\",\n      \"last_set\": 0,\n      \"value\": \"\"\n    },\n    \"topic\": {\n      \"creator\": \"\",\n      \"last_set\": 0,\n      \"value\": \"\"\n    },\n    \"unlinked\": 0,\n    \"unread_count\": 0,\n    \"unread_count_display\": 0\n  },\n  \"ok\": true\n}"
				},
				{
					"id": "916b7c23-dec8-4d4a-b033-7d973ba1effb",
					"name": "Typical error response when name already in use",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Name of the public or private channel to create",
									"key": "name",
									"value": "culpa ut mollit"
								},
								{
									"description": "Create a private channel instead of a public one",
									"key": "is_private",
									"value": "false"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.create"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"name_taken\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "conversations history",
			"id": "ffe49e9b-78ee-4674-9fdb-15502553afce",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/conversations.history?token=quis amet commodo&channel=quis amet commodo&latest=92688022.54048604&oldest=92688022.54048604&inclusive=true&limit=74567849&cursor=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"conversations.history"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "Authentication token. Requires scope: `conversations:history`"
						},
						{
							"key": "channel",
							"value": "quis amet commodo",
							"description": "Conversation ID to fetch history for."
						},
						{
							"key": "latest",
							"value": "92688022.54048604",
							"description": "End of time range of messages to include in results."
						},
						{
							"key": "oldest",
							"value": "92688022.54048604",
							"description": "Start of time range of messages to include in results."
						},
						{
							"key": "inclusive",
							"value": "true",
							"description": "Include messages with latest or oldest timestamp in results only when either timestamp is specified."
						},
						{
							"key": "limit",
							"value": "74567849",
							"description": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the users list hasn't been reached."
						},
						{
							"key": "cursor",
							"value": "quis amet commodo",
							"description": "Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more detail."
						}
					]
				},
				"description": "Fetches a conversation's history of messages and events."
			},
			"response": [
				{
					"id": "7cec44cb-b698-4162-80d3-d8dfd4cc8b60",
					"name": "Typical success response containing a channel's messages",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/conversations.history?token=quis amet commodo&channel=quis amet commodo&latest=92688022.54048604&oldest=92688022.54048604&inclusive=true&limit=74567849&cursor=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.history"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "channel",
									"value": "quis amet commodo"
								},
								{
									"key": "latest",
									"value": "92688022.54048604"
								},
								{
									"key": "oldest",
									"value": "92688022.54048604"
								},
								{
									"key": "inclusive",
									"value": "true"
								},
								{
									"key": "limit",
									"value": "74567849"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"has_more\": true,\n  \"messages\": [\n    {\n      \"text\": \"I find you punny and would like to smell your nose letter\",\n      \"ts\": \"1512085950.000216\",\n      \"type\": \"message\",\n      \"user\": \"U012AB3CDE\"\n    },\n    {\n      \"text\": \"What, you want to smell my shoes better?\",\n      \"ts\": \"1512104434.000490\",\n      \"type\": \"message\",\n      \"user\": \"U061F7AUR\"\n    }\n  ],\n  \"ok\": true,\n  \"pin_count\": 0,\n  \"response_metadata\": {\n    \"next_cursor\": \"bmV4dF90czoxNTEyMDg1ODYxMDAwNTQz\"\n  }\n}"
				},
				{
					"id": "4b9f6fdb-76d2-4e70-8566-98f499d9370b",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/conversations.history?token=quis amet commodo&channel=quis amet commodo&latest=92688022.54048604&oldest=92688022.54048604&inclusive=true&limit=74567849&cursor=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.history"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "channel",
									"value": "quis amet commodo"
								},
								{
									"key": "latest",
									"value": "92688022.54048604"
								},
								{
									"key": "oldest",
									"value": "92688022.54048604"
								},
								{
									"key": "inclusive",
									"value": "true"
								},
								{
									"key": "limit",
									"value": "74567849"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"channel_not_found\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "conversations info",
			"id": "b2d9a407-6f3e-495f-b740-25b707881e9d",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/conversations.info?token=quis amet commodo&channel=quis amet commodo&include_locale=true&include_num_members=true",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"conversations.info"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "Authentication token. Requires scope: `conversations:read`"
						},
						{
							"key": "channel",
							"value": "quis amet commodo",
							"description": "Conversation ID to learn more about"
						},
						{
							"key": "include_locale",
							"value": "true",
							"description": "Set this to `true` to receive the locale for this conversation. Defaults to `false`"
						},
						{
							"key": "include_num_members",
							"value": "true",
							"description": "Set to `true` to include the member count for the specified conversation. Defaults to `false`"
						}
					]
				},
				"description": "Retrieve information about a conversation."
			},
			"response": [
				{
					"id": "8e02d0e6-8a16-47c1-ac2d-e6d2e2768af6",
					"name": "Typical success response for a public channel. (Also, a response from a private channel and a multi-party IM is very similar to this example.)",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/conversations.info?token=quis amet commodo&channel=quis amet commodo&include_locale=true&include_num_members=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.info"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "channel",
									"value": "quis amet commodo"
								},
								{
									"key": "include_locale",
									"value": "true"
								},
								{
									"key": "include_num_members",
									"value": "true"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"channel\": {\n    \"created\": 1449252889,\n    \"creator\": \"W012A3BCD\",\n    \"id\": \"C012AB3CD\",\n    \"is_archived\": false,\n    \"is_channel\": true,\n    \"is_ext_shared\": false,\n    \"is_general\": true,\n    \"is_group\": false,\n    \"is_im\": false,\n    \"is_member\": true,\n    \"is_mpim\": false,\n    \"is_org_shared\": false,\n    \"is_pending_ext_shared\": false,\n    \"is_private\": false,\n    \"is_read_only\": false,\n    \"is_shared\": false,\n    \"last_read\": \"1502126650.228446\",\n    \"locale\": \"en-US\",\n    \"name\": \"general\",\n    \"name_normalized\": \"general\",\n    \"parent_conversation\": null,\n    \"pending_shared\": [],\n    \"previous_names\": [\n      \"specifics\",\n      \"abstractions\",\n      \"etc\"\n    ],\n    \"purpose\": {\n      \"creator\": \"W012A3BCD\",\n      \"last_set\": 1449709364,\n      \"value\": \"This part of the workspace is for fun. Make fun here.\"\n    },\n    \"topic\": {\n      \"creator\": \"W012A3BCD\",\n      \"last_set\": 1449709364,\n      \"value\": \"For public discussion of generalities\"\n    },\n    \"unlinked\": 0\n  },\n  \"ok\": true\n}"
				},
				{
					"id": "76844d16-ae95-4fe5-a21e-f289541dea93",
					"name": "Typical error response when a channel cannot be found",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/conversations.info?token=quis amet commodo&channel=quis amet commodo&include_locale=true&include_num_members=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.info"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "channel",
									"value": "quis amet commodo"
								},
								{
									"key": "include_locale",
									"value": "true"
								},
								{
									"key": "include_num_members",
									"value": "true"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"channel_not_found\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "conversations invite",
			"id": "64ae2c72-243d-48f9-ad39-4783559b5fe2",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `conversations:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "exercitation qui deserunt",
							"description": "The ID of the public or private channel to invite user(s) to."
						},
						{
							"key": "users",
							"value": "velit Lorem tempor ut",
							"description": "A comma separated list of user IDs. Up to 1000 users may be listed."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/conversations.invite",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"conversations.invite"
					]
				},
				"description": "Invites users to a channel."
			},
			"response": [
				{
					"id": "ecedffc6-b11f-40b3-b182-3de0366c7cb4",
					"name": "Typical success response when an invitation is extended",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "The ID of the public or private channel to invite user(s) to.",
									"key": "channel",
									"value": "exercitation qui deserunt"
								},
								{
									"description": "A comma separated list of user IDs. Up to 1000 users may be listed.",
									"key": "users",
									"value": "velit Lorem tempor ut"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.invite",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.invite"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"channel\": {\n    \"created\": 1449252889,\n    \"creator\": \"W012A3BCD\",\n    \"id\": \"C012AB3CD\",\n    \"is_archived\": false,\n    \"is_channel\": true,\n    \"is_ext_shared\": false,\n    \"is_general\": true,\n    \"is_group\": false,\n    \"is_im\": false,\n    \"is_member\": true,\n    \"is_mpim\": false,\n    \"is_org_shared\": false,\n    \"is_pending_ext_shared\": false,\n    \"is_private\": false,\n    \"is_read_only\": false,\n    \"is_shared\": false,\n    \"last_read\": \"1502126650.228446\",\n    \"locale\": \"en-US\",\n    \"name\": \"general\",\n    \"name_normalized\": \"general\",\n    \"num_members\": 23,\n    \"pending_shared\": [],\n    \"previous_names\": [\n      \"specifics\",\n      \"abstractions\",\n      \"etc\"\n    ],\n    \"purpose\": {\n      \"creator\": \"W012A3BCD\",\n      \"last_set\": 1449709364,\n      \"value\": \"This part of the workspace is for fun. Make fun here.\"\n    },\n    \"topic\": {\n      \"creator\": \"W012A3BCD\",\n      \"last_set\": 1449709364,\n      \"value\": \"For public discussion of generalities\"\n    },\n    \"unlinked\": 0\n  },\n  \"ok\": true\n}"
				},
				{
					"id": "450fba38-dbd2-4268-96f8-249fabf548e9",
					"name": "Typical error response when an invite is attempted on a conversation type that does not support it",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "The ID of the public or private channel to invite user(s) to.",
									"key": "channel",
									"value": "exercitation qui deserunt"
								},
								{
									"description": "A comma separated list of user IDs. Up to 1000 users may be listed.",
									"key": "users",
									"value": "velit Lorem tempor ut"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.invite",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.invite"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"method_not_supported_for_channel_type\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "conversations join",
			"id": "cba7f310-394d-48fc-967e-5f10a705e79b",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `channels:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "esse nisi",
							"description": "ID of conversation to join"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/conversations.join",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"conversations.join"
					]
				},
				"description": "Joins an existing conversation."
			},
			"response": [
				{
					"id": "7c168d6e-f078-432a-b91d-682132b74878",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `channels:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "ID of conversation to join",
									"key": "channel",
									"value": "esse nisi"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.join",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.join"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"channel\": {\n    \"created\": 1449252889,\n    \"creator\": \"U061F7AUR\",\n    \"id\": \"C061EG9SL\",\n    \"is_archived\": false,\n    \"is_channel\": true,\n    \"is_ext_shared\": false,\n    \"is_general\": true,\n    \"is_group\": false,\n    \"is_im\": false,\n    \"is_member\": true,\n    \"is_mpim\": false,\n    \"is_org_shared\": false,\n    \"is_pending_ext_shared\": false,\n    \"is_private\": false,\n    \"is_shared\": false,\n    \"name\": \"general\",\n    \"name_normalized\": \"general\",\n    \"pending_shared\": [],\n    \"previous_names\": [],\n    \"purpose\": {\n      \"creator\": \"\",\n      \"last_set\": 0,\n      \"value\": \"For widget discussion\"\n    },\n    \"topic\": {\n      \"creator\": \"\",\n      \"last_set\": 0,\n      \"value\": \"Which widget do you worry about?\"\n    },\n    \"unlinked\": 0\n  },\n  \"ok\": true,\n  \"response_metadata\": {\n    \"warnings\": [\n      \"already_in_channel\"\n    ]\n  },\n  \"warning\": \"already_in_channel\"\n}"
				},
				{
					"id": "ef1d5982-7741-48a2-b54e-cd4ee95c99a9",
					"name": "Typical error response if the conversation is archived and cannot be joined",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `channels:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "ID of conversation to join",
									"key": "channel",
									"value": "esse nisi"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.join",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.join"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"is_archived\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "conversations kick",
			"id": "2ab254a7-8df2-4514-b0f0-61d3608d62f9",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `conversations:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "sit",
							"description": "ID of conversation to remove user from."
						},
						{
							"key": "user",
							"value": "ipsum ex dolore proident",
							"description": "User ID to be removed."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/conversations.kick",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"conversations.kick"
					]
				},
				"description": "Removes a user from a conversation."
			},
			"response": [
				{
					"id": "de8444ff-c62e-43bb-b522-ee66041cf345",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "ID of conversation to remove user from.",
									"key": "channel",
									"value": "sit"
								},
								{
									"description": "User ID to be removed.",
									"key": "user",
									"value": "ipsum ex dolore proident"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.kick",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.kick"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "2c78e792-ce1e-44b2-86c2-82ba4f07663a",
					"name": "Typical error response when you attempt to kick yourself from a channel",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "ID of conversation to remove user from.",
									"key": "channel",
									"value": "sit"
								},
								{
									"description": "User ID to be removed.",
									"key": "user",
									"value": "ipsum ex dolore proident"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.kick",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.kick"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"cant_kick_self\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "conversations leave",
			"id": "9354bda0-c5e6-43d2-93e8-1387c61ee26b",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `conversations:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "Duis enim",
							"description": "Conversation to leave"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/conversations.leave",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"conversations.leave"
					]
				},
				"description": "Leaves a conversation."
			},
			"response": [
				{
					"id": "1cbab558-1b98-4a3a-a54b-52af18064801",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Conversation to leave",
									"key": "channel",
									"value": "Duis enim"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.leave",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.leave"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "70ffba16-b6c2-43ce-b8ee-2b3ebb55fafe",
					"name": "Typical error response when attempting to leave a workspace's \"general\" channel",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Conversation to leave",
									"key": "channel",
									"value": "Duis enim"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.leave",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.leave"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"cant_leave_general\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "conversations list",
			"id": "a1479fae-e129-4d1f-9560-b2775d185ce3",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/conversations.list?token=quis amet commodo&exclude_archived=true&types=quis amet commodo&limit=74567849&cursor=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"conversations.list"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "Authentication token. Requires scope: `conversations:read`"
						},
						{
							"key": "exclude_archived",
							"value": "true",
							"description": "Set to `true` to exclude archived channels from the list"
						},
						{
							"key": "types",
							"value": "quis amet commodo",
							"description": "Mix and match channel types by providing a comma-separated list of any combination of `public_channel`, `private_channel`, `mpim`, `im`"
						},
						{
							"key": "limit",
							"value": "74567849",
							"description": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the list hasn't been reached. Must be an integer no larger than 1000."
						},
						{
							"key": "cursor",
							"value": "quis amet commodo",
							"description": "Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more detail."
						}
					]
				},
				"description": "Lists all channels in a Slack team."
			},
			"response": [
				{
					"id": "d454bddd-b73b-4264-ac9b-747259aee48e",
					"name": "Typical success response with only public channels",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/conversations.list?token=quis amet commodo&exclude_archived=true&types=quis amet commodo&limit=74567849&cursor=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.list"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "exclude_archived",
									"value": "true"
								},
								{
									"key": "types",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"channels\": [\n    {\n      \"created\": 1449252889,\n      \"creator\": \"U012A3CDE\",\n      \"id\": \"C012AB3CD\",\n      \"is_archived\": false,\n      \"is_channel\": true,\n      \"is_ext_shared\": false,\n      \"is_general\": true,\n      \"is_group\": false,\n      \"is_im\": false,\n      \"is_member\": true,\n      \"is_mpim\": false,\n      \"is_org_shared\": false,\n      \"is_pending_ext_shared\": false,\n      \"is_private\": false,\n      \"is_shared\": false,\n      \"name\": \"general\",\n      \"name_normalized\": \"general\",\n      \"num_members\": 4,\n      \"pending_shared\": [],\n      \"previous_names\": [],\n      \"purpose\": {\n        \"creator\": \"\",\n        \"last_set\": 0,\n        \"value\": \"This channel is for team-wide communication and announcements. All team members are in this channel.\"\n      },\n      \"topic\": {\n        \"creator\": \"\",\n        \"last_set\": 0,\n        \"value\": \"Company-wide announcements and work-based matters\"\n      },\n      \"unlinked\": 0\n    },\n    {\n      \"created\": 1449252889,\n      \"creator\": \"U061F7AUR\",\n      \"id\": \"C061EG9T2\",\n      \"is_archived\": false,\n      \"is_channel\": true,\n      \"is_ext_shared\": false,\n      \"is_general\": false,\n      \"is_group\": false,\n      \"is_im\": false,\n      \"is_member\": true,\n      \"is_mpim\": false,\n      \"is_org_shared\": false,\n      \"is_pending_ext_shared\": false,\n      \"is_private\": false,\n      \"is_shared\": false,\n      \"name\": \"random\",\n      \"name_normalized\": \"random\",\n      \"num_members\": 4,\n      \"pending_shared\": [],\n      \"previous_names\": [],\n      \"purpose\": {\n        \"creator\": \"\",\n        \"last_set\": 0,\n        \"value\": \"A place for non-work-related flimflam, faffing, hodge-podge or jibber-jabber you'd prefer to keep out of more focused work-related channels.\"\n      },\n      \"topic\": {\n        \"creator\": \"\",\n        \"last_set\": 0,\n        \"value\": \"Non-work banter and water cooler conversation\"\n      },\n      \"unlinked\": 0\n    }\n  ],\n  \"ok\": true,\n  \"response_metadata\": {\n    \"next_cursor\": \"dGVhbTpDMDYxRkE1UEI=\"\n  }\n}"
				},
				{
					"id": "f133a468-7f65-4276-bdd5-d940995c6c48",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/conversations.list?token=quis amet commodo&exclude_archived=true&types=quis amet commodo&limit=74567849&cursor=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.list"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "exclude_archived",
									"value": "true"
								},
								{
									"key": "types",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "conversations mark",
			"id": "ace9c1e6-b69b-4cf4-beb6-24c64fe54cac",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `conversations:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "proident cupidatat",
							"description": "Channel or conversation to set the read cursor for."
						},
						{
							"key": "ts",
							"value": "-40240102.12075635",
							"description": "Unique identifier of message you want marked as most recently seen in this conversation."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/conversations.mark",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"conversations.mark"
					]
				},
				"description": "Sets the read cursor in a channel."
			},
			"response": [
				{
					"id": "39b3989c-b0ec-419c-b180-ec8698b4a6f9",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Channel or conversation to set the read cursor for.",
									"key": "channel",
									"value": "proident cupidatat"
								},
								{
									"description": "Unique identifier of message you want marked as most recently seen in this conversation.",
									"key": "ts",
									"value": "-40240102.12075635"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.mark",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.mark"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "a272941d-d54e-47a7-b90f-3befb8e7128d",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Channel or conversation to set the read cursor for.",
									"key": "channel",
									"value": "proident cupidatat"
								},
								{
									"description": "Unique identifier of message you want marked as most recently seen in this conversation.",
									"key": "ts",
									"value": "-40240102.12075635"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.mark",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.mark"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "conversations members",
			"id": "6eb6aff2-a6a0-4e17-840d-5781dc092bad",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/conversations.members?token=quis amet commodo&channel=quis amet commodo&limit=74567849&cursor=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"conversations.members"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "Authentication token. Requires scope: `conversations:read`"
						},
						{
							"key": "channel",
							"value": "quis amet commodo",
							"description": "ID of the conversation to retrieve members for"
						},
						{
							"key": "limit",
							"value": "74567849",
							"description": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the users list hasn't been reached."
						},
						{
							"key": "cursor",
							"value": "quis amet commodo",
							"description": "Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more detail."
						}
					]
				},
				"description": "Retrieve members of a conversation."
			},
			"response": [
				{
					"id": "8de14b43-15d8-4efc-a902-a5bde25f9c8a",
					"name": "Typical paginated success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/conversations.members?token=quis amet commodo&channel=quis amet commodo&limit=74567849&cursor=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.members"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "channel",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"members\": [\n    \"U023BECGF\",\n    \"U061F7AUR\",\n    \"W012A3CDE\"\n  ],\n  \"ok\": true,\n  \"response_metadata\": {\n    \"next_cursor\": \"e3VzZXJfaWQ6IFcxMjM0NTY3fQ==\"\n  }\n}"
				},
				{
					"id": "6029a758-5547-47a7-81f0-7be9a1e8289c",
					"name": "Typical error response when an invalid cursor is provided",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/conversations.members?token=quis amet commodo&channel=quis amet commodo&limit=74567849&cursor=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.members"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "channel",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_cursor\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "conversations open",
			"id": "f36db3e2-ff29-4e40-a6c3-94e83d086a87",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `conversations:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "culpa minim dolor",
							"description": "Resume a conversation by supplying an `im` or `mpim`'s ID. Or provide the `users` field instead."
						},
						{
							"key": "users",
							"value": "cupidatat ut irure deserunt est",
							"description": "Comma separated lists of users. If only one user is included, this creates a 1:1 DM.  The ordering of the users is preserved whenever a multi-person direct message is returned. Supply a `channel` when not supplying `users`."
						},
						{
							"key": "return_im",
							"value": "false",
							"description": "Boolean, indicates you want the full IM channel definition in the response."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/conversations.open",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"conversations.open"
					]
				},
				"description": "Opens or resumes a direct message or multi-person direct message."
			},
			"response": [
				{
					"id": "0cc71e05-3e8b-40bb-9422-1116819a8a01",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Resume a conversation by supplying an `im` or `mpim`'s ID. Or provide the `users` field instead.",
									"key": "channel",
									"value": "culpa minim dolor"
								},
								{
									"description": "Comma separated lists of users. If only one user is included, this creates a 1:1 DM.  The ordering of the users is preserved whenever a multi-person direct message is returned. Supply a `channel` when not supplying `users`.",
									"key": "users",
									"value": "cupidatat ut irure deserunt est"
								},
								{
									"description": "Boolean, indicates you want the full IM channel definition in the response.",
									"key": "return_im",
									"value": "false"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.open",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.open"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"channel\": {\n    \"id\": \"D069C7QFK\"\n  },\n  \"ok\": true\n}"
				},
				{
					"id": "0620a4cc-8350-4a30-85e8-3adfeb68b2bb",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Resume a conversation by supplying an `im` or `mpim`'s ID. Or provide the `users` field instead.",
									"key": "channel",
									"value": "culpa minim dolor"
								},
								{
									"description": "Comma separated lists of users. If only one user is included, this creates a 1:1 DM.  The ordering of the users is preserved whenever a multi-person direct message is returned. Supply a `channel` when not supplying `users`.",
									"key": "users",
									"value": "cupidatat ut irure deserunt est"
								},
								{
									"description": "Boolean, indicates you want the full IM channel definition in the response.",
									"key": "return_im",
									"value": "false"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.open",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.open"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"channel_not_found\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "conversations rename",
			"id": "60d5a100-24d2-4a16-bea5-cd093d7253dd",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `conversations:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "eiusmod dolore",
							"description": "ID of conversation to rename"
						},
						{
							"key": "name",
							"value": "qui irure",
							"description": "New name for conversation."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/conversations.rename",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"conversations.rename"
					]
				},
				"description": "Renames a conversation."
			},
			"response": [
				{
					"id": "b3779c3c-decd-439d-945b-cfa16a2a5e0b",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "ID of conversation to rename",
									"key": "channel",
									"value": "eiusmod dolore"
								},
								{
									"description": "New name for conversation.",
									"key": "name",
									"value": "qui irure"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.rename",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.rename"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"channel\": {\n    \"created\": 1449252889,\n    \"creator\": \"W012A3BCD\",\n    \"id\": \"C012AB3CD\",\n    \"is_archived\": false,\n    \"is_channel\": true,\n    \"is_ext_shared\": false,\n    \"is_general\": true,\n    \"is_group\": false,\n    \"is_im\": false,\n    \"is_member\": true,\n    \"is_mpim\": false,\n    \"is_org_shared\": false,\n    \"is_pending_ext_shared\": false,\n    \"is_private\": false,\n    \"is_read_only\": false,\n    \"is_shared\": false,\n    \"last_read\": \"1502126650.228446\",\n    \"locale\": \"en-US\",\n    \"name\": \"general\",\n    \"name_normalized\": \"general\",\n    \"num_members\": 23,\n    \"pending_shared\": [],\n    \"previous_names\": [\n      \"specifics\",\n      \"abstractions\",\n      \"etc\"\n    ],\n    \"purpose\": {\n      \"creator\": \"W012A3BCD\",\n      \"last_set\": 1449709364,\n      \"value\": \"This part of the workspace is for fun. Make fun here.\"\n    },\n    \"topic\": {\n      \"creator\": \"W012A3BCD\",\n      \"last_set\": 1449709364,\n      \"value\": \"For public discussion of generalities\"\n    },\n    \"unlinked\": 0\n  },\n  \"ok\": true\n}"
				},
				{
					"id": "3aec918a-ba75-4b45-84f4-a7af1c7d499a",
					"name": "Typical error response when the calling user is not a member of the conversation",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "ID of conversation to rename",
									"key": "channel",
									"value": "eiusmod dolore"
								},
								{
									"description": "New name for conversation.",
									"key": "name",
									"value": "qui irure"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.rename",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.rename"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"not_in_channel\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "conversations replies",
			"id": "6744de4e-85cb-49e5-9b72-3a09a3ab506a",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/conversations.replies?token=quis amet commodo&channel=quis amet commodo&ts=92688022.54048604&latest=92688022.54048604&oldest=92688022.54048604&inclusive=true&limit=74567849&cursor=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"conversations.replies"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "Authentication token. Requires scope: `conversations:history`"
						},
						{
							"key": "channel",
							"value": "quis amet commodo",
							"description": "Conversation ID to fetch thread from."
						},
						{
							"key": "ts",
							"value": "92688022.54048604",
							"description": "Unique identifier of a thread's parent message. `ts` must be the timestamp of an existing message with 0 or more replies. If there are no replies then just the single message referenced by `ts` will return - it is just an ordinary, unthreaded message."
						},
						{
							"key": "latest",
							"value": "92688022.54048604",
							"description": "End of time range of messages to include in results."
						},
						{
							"key": "oldest",
							"value": "92688022.54048604",
							"description": "Start of time range of messages to include in results."
						},
						{
							"key": "inclusive",
							"value": "true",
							"description": "Include messages with latest or oldest timestamp in results only when either timestamp is specified."
						},
						{
							"key": "limit",
							"value": "74567849",
							"description": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the users list hasn't been reached."
						},
						{
							"key": "cursor",
							"value": "quis amet commodo",
							"description": "Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more detail."
						}
					]
				},
				"description": "Retrieve a thread of messages posted to a conversation"
			},
			"response": [
				{
					"id": "bfc26ecd-a69e-4505-826d-8432f2c82c6f",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/conversations.replies?token=quis amet commodo&channel=quis amet commodo&ts=92688022.54048604&latest=92688022.54048604&oldest=92688022.54048604&inclusive=true&limit=74567849&cursor=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.replies"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "channel",
									"value": "quis amet commodo"
								},
								{
									"key": "ts",
									"value": "92688022.54048604"
								},
								{
									"key": "latest",
									"value": "92688022.54048604"
								},
								{
									"key": "oldest",
									"value": "92688022.54048604"
								},
								{
									"key": "inclusive",
									"value": "true"
								},
								{
									"key": "limit",
									"value": "74567849"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"has_more\": true,\n  \"messages\": [\n    {\n      \"last_read\": \"1484678597.521003\",\n      \"reply_count\": 3,\n      \"subscribed\": true,\n      \"text\": \"island\",\n      \"thread_ts\": \"1482960137.003543\",\n      \"ts\": \"1482960137.003543\",\n      \"type\": \"message\",\n      \"unread_count\": 0,\n      \"user\": \"U061F7AUR\"\n    },\n    {\n      \"parent_user_id\": \"U061F7AUR\",\n      \"text\": \"one island\",\n      \"thread_ts\": \"1482960137.003543\",\n      \"ts\": \"1483037603.017503\",\n      \"type\": \"message\",\n      \"user\": \"U061F7AUR\"\n    },\n    {\n      \"parent_user_id\": \"U061F7AUR\",\n      \"text\": \"two island\",\n      \"thread_ts\": \"1482960137.003543\",\n      \"ts\": \"1483051909.018632\",\n      \"type\": \"message\",\n      \"user\": \"U061F7AUR\"\n    },\n    {\n      \"parent_user_id\": \"U061F7AUR\",\n      \"text\": \"three for the land\",\n      \"thread_ts\": \"1482960137.003543\",\n      \"ts\": \"1483125339.020269\",\n      \"type\": \"message\",\n      \"user\": \"U061F7AUR\"\n    }\n  ],\n  \"ok\": true,\n  \"response_metadata\": {\n    \"next_cursor\": \"bmV4dF90czoxNDg0Njc4MjkwNTE3MDkx\"\n  }\n}"
				},
				{
					"id": "769d05cf-0da5-45f8-b737-40adefb7e3cd",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/conversations.replies?token=quis amet commodo&channel=quis amet commodo&ts=92688022.54048604&latest=92688022.54048604&oldest=92688022.54048604&inclusive=true&limit=74567849&cursor=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.replies"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "channel",
									"value": "quis amet commodo"
								},
								{
									"key": "ts",
									"value": "92688022.54048604"
								},
								{
									"key": "latest",
									"value": "92688022.54048604"
								},
								{
									"key": "oldest",
									"value": "92688022.54048604"
								},
								{
									"key": "inclusive",
									"value": "true"
								},
								{
									"key": "limit",
									"value": "74567849"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"thread_not_found\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "conversations set Purpose",
			"id": "e52979c6-3f04-45a1-8658-4fb4ff4a683b",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `conversations:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "dolore dolor",
							"description": "Conversation to set the purpose of"
						},
						{
							"key": "purpose",
							"value": "nostrud culpa sunt",
							"description": "A new, specialer purpose"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/conversations.setPurpose",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"conversations.setPurpose"
					]
				},
				"description": "Sets the purpose for a conversation."
			},
			"response": [
				{
					"id": "343f449a-cb5f-4209-881f-334f54fb61db",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Conversation to set the purpose of",
									"key": "channel",
									"value": "dolore dolor"
								},
								{
									"description": "A new, specialer purpose",
									"key": "purpose",
									"value": "nostrud culpa sunt"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.setPurpose",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.setPurpose"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "3a3367c9-c166-4da9-869b-8b9248fc9826",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Conversation to set the purpose of",
									"key": "channel",
									"value": "dolore dolor"
								},
								{
									"description": "A new, specialer purpose",
									"key": "purpose",
									"value": "nostrud culpa sunt"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.setPurpose",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.setPurpose"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "conversations set Topic",
			"id": "96ac7b1b-a0b1-4abf-b80d-d1e86a2442b1",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `conversations:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "qui consequat",
							"description": "Conversation to set the topic of"
						},
						{
							"key": "topic",
							"value": "laboris irure Duis consequat eu",
							"description": "The new topic string. Does not support formatting or linkification."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/conversations.setTopic",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"conversations.setTopic"
					]
				},
				"description": "Sets the topic for a conversation."
			},
			"response": [
				{
					"id": "ac93c221-6f95-43ed-b042-3a394ccdbd1f",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Conversation to set the topic of",
									"key": "channel",
									"value": "qui consequat"
								},
								{
									"description": "The new topic string. Does not support formatting or linkification.",
									"key": "topic",
									"value": "laboris irure Duis consequat eu"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.setTopic",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.setTopic"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "5377f42c-0e0e-4c46-b211-1e69b5e8eb28",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Conversation to set the topic of",
									"key": "channel",
									"value": "qui consequat"
								},
								{
									"description": "The new topic string. Does not support formatting or linkification.",
									"key": "topic",
									"value": "laboris irure Duis consequat eu"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.setTopic",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.setTopic"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "conversations unarchive",
			"id": "9a6139ea-62e5-48cb-abc8-374e35c86a74",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `conversations:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "mollit Excepteur",
							"description": "ID of conversation to unarchive"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/conversations.unarchive",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"conversations.unarchive"
					]
				},
				"description": "Reverses conversation archival."
			},
			"response": [
				{
					"id": "2875ad4b-b369-45df-895e-20363c7f88d0",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "ID of conversation to unarchive",
									"key": "channel",
									"value": "mollit Excepteur"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.unarchive",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.unarchive"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "b870a2e9-65a6-41ab-84b5-99d24f74650e",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "ID of conversation to unarchive",
									"key": "channel",
									"value": "mollit Excepteur"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.unarchive",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.unarchive"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"channel_not_found\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "dialog open",
			"id": "d729adc6-170e-4d89-80b0-387453a66fd2",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `none`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/dialog.open?dialog=quis amet commodo&trigger_id=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"dialog.open"
					],
					"query": [
						{
							"key": "dialog",
							"value": "quis amet commodo",
							"description": "(Required) The dialog definition. This must be a JSON-encoded string."
						},
						{
							"key": "trigger_id",
							"value": "quis amet commodo",
							"description": "(Required) Exchange a trigger to post to the user."
						}
					]
				},
				"description": "Open a dialog with a user"
			},
			"response": [
				{
					"id": "8c293319-b663-49d9-8df2-9cd0df4691ec",
					"name": "Typical success response is quite minimal.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `none`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dialog.open?dialog=quis amet commodo&trigger_id=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dialog.open"
							],
							"query": [
								{
									"key": "dialog",
									"value": "quis amet commodo"
								},
								{
									"key": "trigger_id",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "3a71ca50-818c-4682-b24f-cc332bce4272",
					"name": "Typical error response, before getting to any possible validation errors.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `none`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dialog.open?dialog=quis amet commodo&trigger_id=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dialog.open"
							],
							"query": [
								{
									"key": "dialog",
									"value": "quis amet commodo"
								},
								{
									"key": "trigger_id",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"missing_trigger\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "dnd end Dnd",
			"id": "465b8817-bd6c-4dbb-941e-a4c788b4b4c9",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `dnd:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/dnd.endDnd",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"dnd.endDnd"
					]
				},
				"description": "Ends the current user's Do Not Disturb session immediately."
			},
			"response": [
				{
					"id": "21a5b4b0-8ee2-490a-bb5a-92c912421ec0",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `dnd:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dnd.endDnd",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dnd.endDnd"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "88090b00-2400-405c-8576-b4b253eb0e9f",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `dnd:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dnd.endDnd",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dnd.endDnd"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "dnd end Snooze",
			"id": "334e52d9-8fbc-4043-b81f-7551f8d25efa",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `dnd:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/dnd.endSnooze",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"dnd.endSnooze"
					]
				},
				"description": "Ends the current user's snooze mode immediately."
			},
			"response": [
				{
					"id": "f49e630f-74a0-4295-bf9d-fd1f7f5b38c2",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `dnd:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dnd.endSnooze",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dnd.endSnooze"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "3c7b03f4-f6b3-4005-98d9-61dd0e3d3a3b",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `dnd:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dnd.endSnooze",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dnd.endSnooze"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "dnd info",
			"id": "b9c6ee16-e7aa-465b-b323-b028550c0b27",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/dnd.info?token=quis amet commodo&user=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"dnd.info"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "Authentication token. Requires scope: `dnd:read`"
						},
						{
							"key": "user",
							"value": "quis amet commodo",
							"description": "User to fetch status for (defaults to current user)"
						}
					]
				},
				"description": "Retrieves a user's current Do Not Disturb status."
			},
			"response": [
				{
					"id": "850737a8-2da8-41af-86e1-9536dcc3df31",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dnd.info?token=quis amet commodo&user=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dnd.info"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "user",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "4bb2a4dd-a2c9-40ea-a1a4-cc92cd5e08f5",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dnd.info?token=quis amet commodo&user=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dnd.info"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "user",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "dnd set Snooze",
			"id": "038eb302-91d4-482e-b5cd-f4e43a6fb6f5",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "token",
							"value": "ea quis ut",
							"description": "(Required) Authentication token. Requires scope: `dnd:write`"
						},
						{
							"key": "num_minutes",
							"value": "nisi irure qui non",
							"description": "(Required) Number of minutes, from now, to snooze until."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/dnd.setSnooze",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"dnd.setSnooze"
					]
				},
				"description": "Turns on Do Not Disturb mode for the current user, or changes its duration."
			},
			"response": [
				{
					"id": "7b8bd214-b1a3-4ca8-9563-6c5bb3e0100a",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `dnd:write`",
									"key": "token",
									"value": "ea quis ut"
								},
								{
									"description": "(Required) Number of minutes, from now, to snooze until.",
									"key": "num_minutes",
									"value": "nisi irure qui non"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/dnd.setSnooze",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dnd.setSnooze"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "0f99eb1a-b47f-41ad-97a1-1570fb18cbeb",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `dnd:write`",
									"key": "token",
									"value": "ea quis ut"
								},
								{
									"description": "(Required) Number of minutes, from now, to snooze until.",
									"key": "num_minutes",
									"value": "nisi irure qui non"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/dnd.setSnooze",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dnd.setSnooze"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "dnd team Info",
			"id": "2b6bb1aa-ac0e-4b9d-92f2-56b675fcc418",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/dnd.teamInfo?token=quis amet commodo&users=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"dnd.teamInfo"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "Authentication token. Requires scope: `dnd:read`"
						},
						{
							"key": "users",
							"value": "quis amet commodo",
							"description": "Comma-separated list of users to fetch Do Not Disturb status for"
						}
					]
				},
				"description": "Retrieves the Do Not Disturb status for up to 50 users on a team."
			},
			"response": [
				{
					"id": "a303b620-b519-466c-be4f-e6c57a750e42",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dnd.teamInfo?token=quis amet commodo&users=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dnd.teamInfo"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "users",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"users\": {\n    \"U023BECGF\": {\n      \"dnd_enabled\": true,\n      \"next_dnd_end_ts\": 1450423800,\n      \"next_dnd_start_ts\": 1450387800\n    },\n    \"W058CJVAA\": {\n      \"dnd_enabled\": false,\n      \"next_dnd_end_ts\": 1,\n      \"next_dnd_start_ts\": 1\n    }\n  }\n}"
				},
				{
					"id": "f309e72e-e0c8-4207-aa3c-28a0d57e79db",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dnd.teamInfo?token=quis amet commodo&users=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dnd.teamInfo"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "users",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "emoji list",
			"id": "db88bb26-7806-4c96-93d4-d1df8cf3a1d0",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/emoji.list?token=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"emoji.list"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "(Required) Authentication token. Requires scope: `emoji:read`"
						}
					]
				},
				"description": "Lists custom emoji for a team."
			},
			"response": [
				{
					"id": "00842c0a-de98-44b5-9442-774b64615602",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/emoji.list?token=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"emoji.list"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "e9a7de31-4c8a-4409-a60e-b07352ec5560",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/emoji.list?token=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"emoji.list"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "files comments delete",
			"id": "1dbf2675-070e-4204-b8d9-c6c1670d17f6",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `files:write:user`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "file",
							"value": "fugiat Excepteur enim ex quis",
							"description": "File to delete a comment from."
						},
						{
							"key": "id",
							"value": "nisi officia",
							"description": "The comment to delete."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/files.comments.delete",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"files.comments.delete"
					]
				},
				"description": "Deletes an existing comment on a file."
			},
			"response": [
				{
					"id": "f2b80add-39e3-4b02-96f3-ba65f089010a",
					"name": "Standard success response is very simple",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `files:write:user`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "File to delete a comment from.",
									"key": "file",
									"value": "fugiat Excepteur enim ex quis"
								},
								{
									"description": "The comment to delete.",
									"key": "id",
									"value": "nisi officia"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/files.comments.delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.comments.delete"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "184dbb8e-ad71-4847-9399-2f5ca8fa4598",
					"name": "Standard failure response when used with an invalid token",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `files:write:user`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "File to delete a comment from.",
									"key": "file",
									"value": "fugiat Excepteur enim ex quis"
								},
								{
									"description": "The comment to delete.",
									"key": "id",
									"value": "nisi officia"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/files.comments.delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.comments.delete"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"file_not_found\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "files delete",
			"id": "5f1819be-8316-4eb6-a08c-cd0d16760fc7",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `files:write:user`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "file",
							"value": "id Excepteur pariatur fugia",
							"description": "ID of file to delete."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/files.delete",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"files.delete"
					]
				},
				"description": "Deletes a file."
			},
			"response": [
				{
					"id": "97a095a3-abd0-4859-9770-96aacb4de86b",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `files:write:user`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "ID of file to delete.",
									"key": "file",
									"value": "id Excepteur pariatur fugia"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/files.delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.delete"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "4022a64d-c075-42f5-85c0-c7e69f9fb099",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `files:write:user`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "ID of file to delete.",
									"key": "file",
									"value": "id Excepteur pariatur fugia"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/files.delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.delete"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "files info",
			"id": "590fcdbe-464d-4455-a390-998dc01f7595",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/files.info?token=quis amet commodo&file=quis amet commodo&count=quis amet commodo&page=quis amet commodo&limit=74567849&cursor=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"files.info"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "Authentication token. Requires scope: `files:read`"
						},
						{
							"key": "file",
							"value": "quis amet commodo",
							"description": "Specify a file by providing its ID."
						},
						{
							"key": "count",
							"value": "quis amet commodo"
						},
						{
							"key": "page",
							"value": "quis amet commodo"
						},
						{
							"key": "limit",
							"value": "74567849",
							"description": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the list hasn't been reached."
						},
						{
							"key": "cursor",
							"value": "quis amet commodo",
							"description": "Parameter for pagination. File comments are paginated for a single file. Set `cursor` equal to the `next_cursor` attribute returned by the previous request's `response_metadata`. This parameter is optional, but pagination is mandatory: the default value simply fetches the first \"page\" of the collection of comments. See [pagination](/docs/pagination) for more details."
						}
					]
				},
				"description": "Gets information about a file."
			},
			"response": [
				{
					"id": "d0eaf77a-e01f-49da-bd2a-cfbbe964f4f6",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/files.info?token=quis amet commodo&file=quis amet commodo&count=quis amet commodo&page=quis amet commodo&limit=74567849&cursor=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.info"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "file",
									"value": "quis amet commodo"
								},
								{
									"key": "count",
									"value": "quis amet commodo"
								},
								{
									"key": "page",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"comments\": [],\n  \"file\": {\n    \"channels\": [\n      \"C0T8SE4AU\"\n    ],\n    \"comments_count\": 0,\n    \"created\": 1531763342,\n    \"deanimate_gif\": \"https://.../tedair_deanimate_gif.png\",\n    \"display_as_bot\": false,\n    \"editable\": false,\n    \"external_type\": \"\",\n    \"filetype\": \"gif\",\n    \"groups\": [],\n    \"has_rich_preview\": false,\n    \"id\": \"F0S43PZDF\",\n    \"image_exif_rotation\": 1,\n    \"ims\": [],\n    \"is_external\": false,\n    \"is_public\": true,\n    \"is_starred\": false,\n    \"mimetype\": \"image/gif\",\n    \"mode\": \"hosted\",\n    \"name\": \"tedair.gif\",\n    \"original_h\": 226,\n    \"original_w\": 176,\n    \"permalink\": \"https://.../tedair.gif\",\n    \"permalink_public\": \"https://.../...\",\n    \"pjpeg\": \"https://.../tedair_pjpeg.jpg\",\n    \"pretty_type\": \"GIF\",\n    \"public_url_shared\": false,\n    \"shares\": {\n      \"public\": {\n        \"C0T8SE4AU\": [\n          {\n            \"channel_name\": \"file-under\",\n            \"latest_reply\": \"1531763348.000001\",\n            \"reply_count\": 1,\n            \"reply_users\": [\n              \"U061F7AUR\"\n            ],\n            \"reply_users_count\": 1,\n            \"team_id\": \"T061EG9R6\",\n            \"thread_ts\": \"1531763273.000015\",\n            \"ts\": \"1531763348.000001\"\n          }\n        ]\n      }\n    },\n    \"size\": 137531,\n    \"thumb_160\": \"https://.../tedair_=_160.png\",\n    \"thumb_360\": \"https://.../tedair_360.png\",\n    \"thumb_360_gif\": \"https://.../tedair_360.gif\",\n    \"thumb_360_h\": 226,\n    \"thumb_360_w\": 176,\n    \"thumb_64\": \"https://.../tedair_64.png\",\n    \"thumb_80\": \"https://.../tedair_80.png\",\n    \"timestamp\": 1531763342,\n    \"title\": \"tedair.gif\",\n    \"url_private\": \"https://.../tedair.gif\",\n    \"url_private_download\": \"https://.../tedair.gif\",\n    \"user\": \"U061F7AUR\",\n    \"username\": \"\"\n  },\n  \"ok\": true,\n  \"response_metadata\": {\n    \"next_cursor\": \"dGVhbTpDMUg5UkVTR0w=\"\n  }\n}"
				},
				{
					"id": "e4f50230-419b-47d6-a97b-9cb4a7f64468",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/files.info?token=quis amet commodo&file=quis amet commodo&count=quis amet commodo&page=quis amet commodo&limit=74567849&cursor=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.info"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "file",
									"value": "quis amet commodo"
								},
								{
									"key": "count",
									"value": "quis amet commodo"
								},
								{
									"key": "page",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "files list",
			"id": "a492202f-b241-46a2-8ef4-e8a26f72af46",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/files.list?token=quis amet commodo&user=quis amet commodo&channel=quis amet commodo&ts_from=92688022.54048604&ts_to=92688022.54048604&types=quis amet commodo&count=quis amet commodo&page=quis amet commodo&show_files_hidden_by_limit=true",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"files.list"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "Authentication token. Requires scope: `files:read`"
						},
						{
							"key": "user",
							"value": "quis amet commodo",
							"description": "Filter files created by a single user."
						},
						{
							"key": "channel",
							"value": "quis amet commodo",
							"description": "Filter files appearing in a specific channel, indicated by its ID."
						},
						{
							"key": "ts_from",
							"value": "92688022.54048604",
							"description": "Filter files created after this timestamp (inclusive)."
						},
						{
							"key": "ts_to",
							"value": "92688022.54048604",
							"description": "Filter files created before this timestamp (inclusive)."
						},
						{
							"key": "types",
							"value": "quis amet commodo",
							"description": "Filter files by type ([see below](#file_types)). You can pass multiple values in the types argument, like `types=spaces,snippets`.The default value is `all`, which does not filter the list."
						},
						{
							"key": "count",
							"value": "quis amet commodo"
						},
						{
							"key": "page",
							"value": "quis amet commodo"
						},
						{
							"key": "show_files_hidden_by_limit",
							"value": "true",
							"description": "Show truncated file info for files hidden due to being too old, and the team who owns the file being over the file limit."
						}
					]
				},
				"description": "List for a team, in a channel, or from a user with applied filters."
			},
			"response": [
				{
					"id": "4b1e7c7c-9c09-4d05-8c2f-4bc59bc36744",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/files.list?token=quis amet commodo&user=quis amet commodo&channel=quis amet commodo&ts_from=92688022.54048604&ts_to=92688022.54048604&types=quis amet commodo&count=quis amet commodo&page=quis amet commodo&show_files_hidden_by_limit=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.list"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "user",
									"value": "quis amet commodo"
								},
								{
									"key": "channel",
									"value": "quis amet commodo"
								},
								{
									"key": "ts_from",
									"value": "92688022.54048604"
								},
								{
									"key": "ts_to",
									"value": "92688022.54048604"
								},
								{
									"key": "types",
									"value": "quis amet commodo"
								},
								{
									"key": "count",
									"value": "quis amet commodo"
								},
								{
									"key": "page",
									"value": "quis amet commodo"
								},
								{
									"key": "show_files_hidden_by_limit",
									"value": "true"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"files\": [\n    {\n      \"channels\": [\n        \"C0T8SE4AU\"\n      ],\n      \"comments_count\": 0,\n      \"created\": 1531763254,\n      \"deanimate_gif\": \"https://.../billair_deanimate_gif.png\",\n      \"display_as_bot\": false,\n      \"editable\": false,\n      \"external_type\": \"\",\n      \"filetype\": \"gif\",\n      \"groups\": [],\n      \"id\": \"F0S43P1CZ\",\n      \"image_exif_rotation\": 1,\n      \"ims\": [],\n      \"is_external\": false,\n      \"is_public\": true,\n      \"mimetype\": \"image/gif\",\n      \"mode\": \"hosted\",\n      \"name\": \"billair.gif\",\n      \"original_h\": 226,\n      \"original_w\": 176,\n      \"permalink\": \"https://.../billair.gif\",\n      \"permalink_public\": \"https://.../...\",\n      \"pjpeg\": \"https://.../billair_pjpeg.jpg\",\n      \"pretty_type\": \"GIF\",\n      \"public_url_shared\": false,\n      \"size\": 144538,\n      \"thumb_160\": \"https://.../billair_=_160.png\",\n      \"thumb_360\": \"https://.../billair_360.png\",\n      \"thumb_360_gif\": \"https://.../billair_360.gif\",\n      \"thumb_360_h\": 226,\n      \"thumb_360_w\": 176,\n      \"thumb_64\": \"https://.../billair_64.png\",\n      \"thumb_80\": \"https://.../billair_80.png\",\n      \"timestamp\": 1531763254,\n      \"title\": \"billair.gif\",\n      \"url_private\": \"https://.../billair.gif\",\n      \"url_private_download\": \"https://.../billair.gif\",\n      \"user\": \"U061F7AUR\",\n      \"username\": \"\"\n    },\n    {\n      \"channels\": [\n        \"C0T8SE4AU\"\n      ],\n      \"comments_count\": 0,\n      \"created\": 1531763342,\n      \"deanimate_gif\": \"https://.../tedair_deanimate_gif.png\",\n      \"display_as_bot\": false,\n      \"editable\": false,\n      \"external_type\": \"\",\n      \"filetype\": \"gif\",\n      \"groups\": [],\n      \"id\": \"F0S43PZDF\",\n      \"image_exif_rotation\": 1,\n      \"ims\": [],\n      \"is_external\": false,\n      \"is_public\": true,\n      \"mimetype\": \"image/gif\",\n      \"mode\": \"hosted\",\n      \"name\": \"tedair.gif\",\n      \"original_h\": 226,\n      \"original_w\": 176,\n      \"permalink\": \"https://.../tedair.gif\",\n      \"permalink_public\": \"https://.../...\",\n      \"pjpeg\": \"https://.../tedair_pjpeg.jpg\",\n      \"pretty_type\": \"GIF\",\n      \"public_url_shared\": false,\n      \"size\": 137531,\n      \"thumb_160\": \"https://.../tedair_=_160.png\",\n      \"thumb_360\": \"https://.../tedair_360.png\",\n      \"thumb_360_gif\": \"https://.../tedair_360.gif\",\n      \"thumb_360_h\": 226,\n      \"thumb_360_w\": 176,\n      \"thumb_64\": \"https://.../tedair_64.png\",\n      \"thumb_80\": \"https://.../tedair_80.png\",\n      \"timestamp\": 1531763342,\n      \"title\": \"tedair.gif\",\n      \"url_private\": \"https://.../tedair.gif\",\n      \"url_private_download\": \"https://.../tedair.gif\",\n      \"user\": \"U061F7AUR\",\n      \"username\": \"\"\n    }\n  ],\n  \"ok\": true,\n  \"paging\": {\n    \"count\": 100,\n    \"page\": 1,\n    \"pages\": 1,\n    \"total\": 2\n  }\n}"
				},
				{
					"id": "5c88acb0-000b-4468-a443-08c83cadc2ed",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/files.list?token=quis amet commodo&user=quis amet commodo&channel=quis amet commodo&ts_from=92688022.54048604&ts_to=92688022.54048604&types=quis amet commodo&count=quis amet commodo&page=quis amet commodo&show_files_hidden_by_limit=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.list"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "user",
									"value": "quis amet commodo"
								},
								{
									"key": "channel",
									"value": "quis amet commodo"
								},
								{
									"key": "ts_from",
									"value": "92688022.54048604"
								},
								{
									"key": "ts_to",
									"value": "92688022.54048604"
								},
								{
									"key": "types",
									"value": "quis amet commodo"
								},
								{
									"key": "count",
									"value": "quis amet commodo"
								},
								{
									"key": "page",
									"value": "quis amet commodo"
								},
								{
									"key": "show_files_hidden_by_limit",
									"value": "true"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "files remote add",
			"id": "d21186fa-e62c-40fb-981a-0efe36dce536",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "token",
							"value": "exercitation do occaecat dolor",
							"description": "Authentication token. Requires scope: `remote_files:write`"
						},
						{
							"key": "external_id",
							"value": "aliqua",
							"description": "Creator defined GUID for the file."
						},
						{
							"key": "title",
							"value": "commodo esse eiusmod",
							"description": "Title of the file being shared."
						},
						{
							"key": "filetype",
							"value": "tempor culpa",
							"description": "type of file"
						},
						{
							"key": "external_url",
							"value": "esse in tempor ullamco",
							"description": "URL of the remote file."
						},
						{
							"key": "preview_image",
							"value": "reprehenderit eu",
							"description": "Preview of the document via `multipart/form-data`."
						},
						{
							"key": "indexable_file_contents",
							"value": "non nulla eiusmod",
							"description": "A text file (txt, pdf, doc, etc.) containing textual search terms that are used to improve discovery of the remote file."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/files.remote.add",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"files.remote.add"
					]
				},
				"description": "Adds a file from a remote service"
			},
			"response": [
				{
					"id": "d44442cc-e7ea-4496-80a8-197dd2d08197",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Authentication token. Requires scope: `remote_files:write`",
									"key": "token",
									"value": "exercitation do occaecat dolor"
								},
								{
									"description": "Creator defined GUID for the file.",
									"key": "external_id",
									"value": "aliqua"
								},
								{
									"description": "Title of the file being shared.",
									"key": "title",
									"value": "commodo esse eiusmod"
								},
								{
									"description": "type of file",
									"key": "filetype",
									"value": "tempor culpa"
								},
								{
									"description": "URL of the remote file.",
									"key": "external_url",
									"value": "esse in tempor ullamco"
								},
								{
									"description": "Preview of the document via `multipart/form-data`.",
									"key": "preview_image",
									"value": "reprehenderit eu"
								},
								{
									"description": "A text file (txt, pdf, doc, etc.) containing textual search terms that are used to improve discovery of the remote file.",
									"key": "indexable_file_contents",
									"value": "non nulla eiusmod"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/files.remote.add",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.remote.add"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "0d66085e-271b-4df6-ad2e-abb834f33949",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Authentication token. Requires scope: `remote_files:write`",
									"key": "token",
									"value": "exercitation do occaecat dolor"
								},
								{
									"description": "Creator defined GUID for the file.",
									"key": "external_id",
									"value": "aliqua"
								},
								{
									"description": "Title of the file being shared.",
									"key": "title",
									"value": "commodo esse eiusmod"
								},
								{
									"description": "type of file",
									"key": "filetype",
									"value": "tempor culpa"
								},
								{
									"description": "URL of the remote file.",
									"key": "external_url",
									"value": "esse in tempor ullamco"
								},
								{
									"description": "Preview of the document via `multipart/form-data`.",
									"key": "preview_image",
									"value": "reprehenderit eu"
								},
								{
									"description": "A text file (txt, pdf, doc, etc.) containing textual search terms that are used to improve discovery of the remote file.",
									"key": "indexable_file_contents",
									"value": "non nulla eiusmod"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/files.remote.add",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.remote.add"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "files remote info",
			"id": "b3d8a883-7a52-456a-ae3e-2350652489e8",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/files.remote.info?token=quis amet commodo&file=quis amet commodo&external_id=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"files.remote.info"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "Authentication token. Requires scope: `remote_files:read`"
						},
						{
							"key": "file",
							"value": "quis amet commodo",
							"description": "Specify a file by providing its ID."
						},
						{
							"key": "external_id",
							"value": "quis amet commodo",
							"description": "Creator defined GUID for the file."
						}
					]
				},
				"description": "Retrieve information about a remote file added to Slack"
			},
			"response": [
				{
					"id": "ad44d7e0-a02c-4def-b037-487c97ea03e4",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/files.remote.info?token=quis amet commodo&file=quis amet commodo&external_id=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.remote.info"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "file",
									"value": "quis amet commodo"
								},
								{
									"key": "external_id",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "9a85b2cd-449f-4d00-8cd1-4ed1945c575f",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/files.remote.info?token=quis amet commodo&file=quis amet commodo&external_id=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.remote.info"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "file",
									"value": "quis amet commodo"
								},
								{
									"key": "external_id",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "files remote list",
			"id": "91349e34-f936-4a2c-9b16-30fee57989f1",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/files.remote.list?token=quis amet commodo&channel=quis amet commodo&ts_from=92688022.54048604&ts_to=92688022.54048604&limit=74567849&cursor=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"files.remote.list"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "Authentication token. Requires scope: `remote_files:read`"
						},
						{
							"key": "channel",
							"value": "quis amet commodo",
							"description": "Filter files appearing in a specific channel, indicated by its ID."
						},
						{
							"key": "ts_from",
							"value": "92688022.54048604",
							"description": "Filter files created after this timestamp (inclusive)."
						},
						{
							"key": "ts_to",
							"value": "92688022.54048604",
							"description": "Filter files created before this timestamp (inclusive)."
						},
						{
							"key": "limit",
							"value": "74567849",
							"description": "The maximum number of items to return."
						},
						{
							"key": "cursor",
							"value": "quis amet commodo",
							"description": "Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more detail."
						}
					]
				},
				"description": "Retrieve information about a remote file added to Slack"
			},
			"response": [
				{
					"id": "ff827cf8-c20b-483d-bd94-f5a98e45af1d",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/files.remote.list?token=quis amet commodo&channel=quis amet commodo&ts_from=92688022.54048604&ts_to=92688022.54048604&limit=74567849&cursor=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.remote.list"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "channel",
									"value": "quis amet commodo"
								},
								{
									"key": "ts_from",
									"value": "92688022.54048604"
								},
								{
									"key": "ts_to",
									"value": "92688022.54048604"
								},
								{
									"key": "limit",
									"value": "74567849"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "bdf0bae8-37be-485e-b9d2-843eac1e5188",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/files.remote.list?token=quis amet commodo&channel=quis amet commodo&ts_from=92688022.54048604&ts_to=92688022.54048604&limit=74567849&cursor=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.remote.list"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "channel",
									"value": "quis amet commodo"
								},
								{
									"key": "ts_from",
									"value": "92688022.54048604"
								},
								{
									"key": "ts_to",
									"value": "92688022.54048604"
								},
								{
									"key": "limit",
									"value": "74567849"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "files remote remove",
			"id": "64e55f5e-60a6-4a0d-9136-9bb56990540a",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "token",
							"value": "do esse Ut adipisicing",
							"description": "Authentication token. Requires scope: `remote_files:write`"
						},
						{
							"key": "file",
							"value": "Duis dolore",
							"description": "Specify a file by providing its ID."
						},
						{
							"key": "external_id",
							"value": "in ",
							"description": "Creator defined GUID for the file."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/files.remote.remove",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"files.remote.remove"
					]
				},
				"description": "Remove a remote file."
			},
			"response": [
				{
					"id": "1cfe3859-d781-4a9e-ba0b-5b3cbd66f32b",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Authentication token. Requires scope: `remote_files:write`",
									"key": "token",
									"value": "do esse Ut adipisicing"
								},
								{
									"description": "Specify a file by providing its ID.",
									"key": "file",
									"value": "Duis dolore"
								},
								{
									"description": "Creator defined GUID for the file.",
									"key": "external_id",
									"value": "in "
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/files.remote.remove",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.remote.remove"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "baa1c5c3-ca0e-4792-992d-f39ed9b1ec1e",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Authentication token. Requires scope: `remote_files:write`",
									"key": "token",
									"value": "do esse Ut adipisicing"
								},
								{
									"description": "Specify a file by providing its ID.",
									"key": "file",
									"value": "Duis dolore"
								},
								{
									"description": "Creator defined GUID for the file.",
									"key": "external_id",
									"value": "in "
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/files.remote.remove",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.remote.remove"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "files remote share",
			"id": "daa49c47-38f7-4cf7-a9ae-3696fe0254ae",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/files.remote.share?token=quis amet commodo&file=quis amet commodo&external_id=quis amet commodo&channels=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"files.remote.share"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "Authentication token. Requires scope: `remote_files:share`"
						},
						{
							"key": "file",
							"value": "quis amet commodo",
							"description": "Specify a file registered with Slack by providing its ID. Either this field or `external_id` or both are required."
						},
						{
							"key": "external_id",
							"value": "quis amet commodo",
							"description": "The globally unique identifier (GUID) for the file, as set by the app registering the file with Slack.  Either this field or `file` or both are required."
						},
						{
							"key": "channels",
							"value": "quis amet commodo",
							"description": "Comma-separated list of channel IDs where the file will be shared."
						}
					]
				},
				"description": "Share a remote file into a channel."
			},
			"response": [
				{
					"id": "cb025631-68f3-49e8-b547-23d0afd7dbbc",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/files.remote.share?token=quis amet commodo&file=quis amet commodo&external_id=quis amet commodo&channels=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.remote.share"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "file",
									"value": "quis amet commodo"
								},
								{
									"key": "external_id",
									"value": "quis amet commodo"
								},
								{
									"key": "channels",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "f6a52a03-fe2f-47fc-b422-23b0e3aa3d0e",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/files.remote.share?token=quis amet commodo&file=quis amet commodo&external_id=quis amet commodo&channels=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.remote.share"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "file",
									"value": "quis amet commodo"
								},
								{
									"key": "external_id",
									"value": "quis amet commodo"
								},
								{
									"key": "channels",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "files remote update",
			"id": "769171fc-956c-4c56-b1cb-b4ee2000a7ae",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "token",
							"value": "reprehenderit dolor",
							"description": "Authentication token. Requires scope: `remote_files:write`"
						},
						{
							"key": "file",
							"value": "qui Ut",
							"description": "Specify a file by providing its ID."
						},
						{
							"key": "external_id",
							"value": "amet sunt Lorem incididunt dolor",
							"description": "Creator defined GUID for the file."
						},
						{
							"key": "title",
							"value": "ea Ut pariatur fugiat",
							"description": "Title of the file being shared."
						},
						{
							"key": "filetype",
							"value": "ipsum",
							"description": "type of file"
						},
						{
							"key": "external_url",
							"value": "dolore exercitation sunt",
							"description": "URL of the remote file."
						},
						{
							"key": "preview_image",
							"value": "sint exercitation Lore",
							"description": "Preview of the document via `multipart/form-data`."
						},
						{
							"key": "indexable_file_contents",
							"value": "laborum culpa nulla Lorem sunt",
							"description": "File containing contents that can be used to improve searchability for the remote file."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/files.remote.update",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"files.remote.update"
					]
				},
				"description": "Updates an existing remote file."
			},
			"response": [
				{
					"id": "6b4f8e63-f27a-4bb7-9c0c-626b676605d7",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Authentication token. Requires scope: `remote_files:write`",
									"key": "token",
									"value": "reprehenderit dolor"
								},
								{
									"description": "Specify a file by providing its ID.",
									"key": "file",
									"value": "qui Ut"
								},
								{
									"description": "Creator defined GUID for the file.",
									"key": "external_id",
									"value": "amet sunt Lorem incididunt dolor"
								},
								{
									"description": "Title of the file being shared.",
									"key": "title",
									"value": "ea Ut pariatur fugiat"
								},
								{
									"description": "type of file",
									"key": "filetype",
									"value": "ipsum"
								},
								{
									"description": "URL of the remote file.",
									"key": "external_url",
									"value": "dolore exercitation sunt"
								},
								{
									"description": "Preview of the document via `multipart/form-data`.",
									"key": "preview_image",
									"value": "sint exercitation Lore"
								},
								{
									"description": "File containing contents that can be used to improve searchability for the remote file.",
									"key": "indexable_file_contents",
									"value": "laborum culpa nulla Lorem sunt"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/files.remote.update",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.remote.update"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "4a61725a-7ab8-45fb-b717-6a6f91e6a94e",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Authentication token. Requires scope: `remote_files:write`",
									"key": "token",
									"value": "reprehenderit dolor"
								},
								{
									"description": "Specify a file by providing its ID.",
									"key": "file",
									"value": "qui Ut"
								},
								{
									"description": "Creator defined GUID for the file.",
									"key": "external_id",
									"value": "amet sunt Lorem incididunt dolor"
								},
								{
									"description": "Title of the file being shared.",
									"key": "title",
									"value": "ea Ut pariatur fugiat"
								},
								{
									"description": "type of file",
									"key": "filetype",
									"value": "ipsum"
								},
								{
									"description": "URL of the remote file.",
									"key": "external_url",
									"value": "dolore exercitation sunt"
								},
								{
									"description": "Preview of the document via `multipart/form-data`.",
									"key": "preview_image",
									"value": "sint exercitation Lore"
								},
								{
									"description": "File containing contents that can be used to improve searchability for the remote file.",
									"key": "indexable_file_contents",
									"value": "laborum culpa nulla Lorem sunt"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/files.remote.update",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.remote.update"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "files revoke Public URL",
			"id": "cc101372-122d-4df3-878c-d580f157801b",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `files:write:user`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "file",
							"value": "dolore commodo eu tempor",
							"description": "File to revoke"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/files.revokePublicURL",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"files.revokePublicURL"
					]
				},
				"description": "Revokes public/external sharing access for a file"
			},
			"response": [
				{
					"id": "38085408-a1a3-4445-99ab-0976b1e032d2",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `files:write:user`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "File to revoke",
									"key": "file",
									"value": "dolore commodo eu tempor"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/files.revokePublicURL",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.revokePublicURL"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "60dfc8cf-2238-4081-b32e-4bdd34216e68",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `files:write:user`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "File to revoke",
									"key": "file",
									"value": "dolore commodo eu tempor"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/files.revokePublicURL",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.revokePublicURL"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "files shared Public URL",
			"id": "621bf734-ec34-4d2e-ba74-da494221f5a0",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `files:write:user`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "file",
							"value": "qui",
							"description": "File to share"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/files.sharedPublicURL",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"files.sharedPublicURL"
					]
				},
				"description": "Enables a file for public/external sharing."
			},
			"response": [
				{
					"id": "c58404a6-4f03-4a4e-abf7-9b1a2ea94b53",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `files:write:user`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "File to share",
									"key": "file",
									"value": "qui"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/files.sharedPublicURL",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.sharedPublicURL"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "08cd7e32-1fba-4949-b2cf-9bce1c4c564a",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `files:write:user`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "File to share",
									"key": "file",
									"value": "qui"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/files.sharedPublicURL",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.sharedPublicURL"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "files upload",
			"id": "586f3f2d-3596-4edc-ab1e-200bd6cb1153",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "token",
							"value": "non ex ullamco tempor culpa",
							"description": "Authentication token. Requires scope: `files:write:user`"
						},
						{
							"key": "file",
							"value": "non Duis commodo ullamco exercitat",
							"description": "File contents via `multipart/form-data`. If omitting this parameter, you must submit `content`."
						},
						{
							"key": "content",
							"value": "deserunt elit velit in",
							"description": "File contents via a POST variable. If omitting this parameter, you must provide a `file`."
						},
						{
							"key": "filetype",
							"value": "dolor dolore si",
							"description": "A [file type](/types/file#file_types) identifier."
						},
						{
							"key": "filename",
							"value": "consectetur incididunt fu",
							"description": "Filename of file."
						},
						{
							"key": "title",
							"value": "veniam sunt ea culpa",
							"description": "Title of file."
						},
						{
							"key": "initial_comment",
							"value": "velit des",
							"description": "The message text introducing the file in specified `channels`."
						},
						{
							"key": "channels",
							"value": "in esse",
							"description": "Comma-separated list of channel names or IDs where the file will be shared."
						},
						{
							"key": "thread_ts",
							"value": "25800417.59036775",
							"description": "Provide another message's `ts` value to upload this file as a reply. Never use a reply's `ts` value; use its parent instead."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/files.upload",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"files.upload"
					]
				},
				"description": "Uploads or creates a file."
			},
			"response": [
				{
					"id": "782fcd86-c24a-4ce2-ac36-e170523f8e70",
					"name": "Success response after uploading a file to a channel with an initial message",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Authentication token. Requires scope: `files:write:user`",
									"key": "token",
									"value": "non ex ullamco tempor culpa"
								},
								{
									"description": "File contents via `multipart/form-data`. If omitting this parameter, you must submit `content`.",
									"key": "file",
									"value": "non Duis commodo ullamco exercitat"
								},
								{
									"description": "File contents via a POST variable. If omitting this parameter, you must provide a `file`.",
									"key": "content",
									"value": "deserunt elit velit in"
								},
								{
									"description": "A [file type](/types/file#file_types) identifier.",
									"key": "filetype",
									"value": "dolor dolore si"
								},
								{
									"description": "Filename of file.",
									"key": "filename",
									"value": "consectetur incididunt fu"
								},
								{
									"description": "Title of file.",
									"key": "title",
									"value": "veniam sunt ea culpa"
								},
								{
									"description": "The message text introducing the file in specified `channels`.",
									"key": "initial_comment",
									"value": "velit des"
								},
								{
									"description": "Comma-separated list of channel names or IDs where the file will be shared.",
									"key": "channels",
									"value": "in esse"
								},
								{
									"description": "Provide another message's `ts` value to upload this file as a reply. Never use a reply's `ts` value; use its parent instead.",
									"key": "thread_ts",
									"value": "25800417.59036775"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/files.upload",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.upload"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"file\": {\n    \"channels\": [],\n    \"comments_count\": 0,\n    \"created\": 1532293501,\n    \"display_as_bot\": false,\n    \"editable\": false,\n    \"external_type\": \"\",\n    \"filetype\": \"gif\",\n    \"groups\": [],\n    \"has_rich_preview\": false,\n    \"id\": \"F0TD00400\",\n    \"image_exif_rotation\": 1,\n    \"ims\": [\n      \"D0L4B9P0Q\"\n    ],\n    \"is_external\": false,\n    \"is_public\": false,\n    \"is_starred\": false,\n    \"mimetype\": \"image/jpeg\",\n    \"mode\": \"hosted\",\n    \"name\": \"dramacat.gif\",\n    \"original_h\": 366,\n    \"original_w\": 526,\n    \"permalink\": \"https://.../dramacat.gif\",\n    \"permalink_public\": \"https://.../More-Path-Components\",\n    \"pretty_type\": \"JPEG\",\n    \"public_url_shared\": false,\n    \"shares\": {\n      \"private\": {\n        \"D0L4B9P0Q\": [\n          {\n            \"reply_count\": 0,\n            \"reply_users\": [],\n            \"reply_users_count\": 0,\n            \"ts\": \"1532293503.000001\"\n          }\n        ]\n      }\n    },\n    \"size\": 43518,\n    \"thumb_160\": \"https://.../dramacat_160.gif\",\n    \"thumb_360\": \"https://.../dramacat_360.gif\",\n    \"thumb_360_h\": 250,\n    \"thumb_360_w\": 360,\n    \"thumb_480\": \"https://.../dramacat_480.gif\",\n    \"thumb_480_h\": 334,\n    \"thumb_480_w\": 480,\n    \"thumb_64\": \"https://.../dramacat_64.gif\",\n    \"thumb_80\": \"https://.../dramacat_80.gif\",\n    \"timestamp\": 1532293501,\n    \"title\": \"dramacat\",\n    \"url_private\": \"https://.../dramacat.gif\",\n    \"url_private_download\": \"https://.../dramacat.gif\",\n    \"user\": \"U0L4B9NSU\",\n    \"username\": \"\"\n  },\n  \"ok\": true\n}"
				},
				{
					"id": "9006d2dd-aecf-4ae7-ba2f-f547d33ec23a",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Authentication token. Requires scope: `files:write:user`",
									"key": "token",
									"value": "non ex ullamco tempor culpa"
								},
								{
									"description": "File contents via `multipart/form-data`. If omitting this parameter, you must submit `content`.",
									"key": "file",
									"value": "non Duis commodo ullamco exercitat"
								},
								{
									"description": "File contents via a POST variable. If omitting this parameter, you must provide a `file`.",
									"key": "content",
									"value": "deserunt elit velit in"
								},
								{
									"description": "A [file type](/types/file#file_types) identifier.",
									"key": "filetype",
									"value": "dolor dolore si"
								},
								{
									"description": "Filename of file.",
									"key": "filename",
									"value": "consectetur incididunt fu"
								},
								{
									"description": "Title of file.",
									"key": "title",
									"value": "veniam sunt ea culpa"
								},
								{
									"description": "The message text introducing the file in specified `channels`.",
									"key": "initial_comment",
									"value": "velit des"
								},
								{
									"description": "Comma-separated list of channel names or IDs where the file will be shared.",
									"key": "channels",
									"value": "in esse"
								},
								{
									"description": "Provide another message's `ts` value to upload this file as a reply. Never use a reply's `ts` value; use its parent instead.",
									"key": "thread_ts",
									"value": "25800417.59036775"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/files.upload",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.upload"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "migration exchange",
			"id": "1f63b81d-e2d2-41fb-ac6b-2b8f56376d0a",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/migration.exchange?token=quis amet commodo&users=quis amet commodo&team_id=quis amet commodo&to_old=true",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"migration.exchange"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "(Required) Authentication token. Requires scope: `tokens.basic`"
						},
						{
							"key": "users",
							"value": "quis amet commodo",
							"description": "(Required) A comma-separated list of user ids, up to 400 per request"
						},
						{
							"key": "team_id",
							"value": "quis amet commodo",
							"description": "Specify team_id starts with `T` in case of Org Token"
						},
						{
							"key": "to_old",
							"value": "true",
							"description": "Specify `true` to convert `W` global user IDs to workspace-specific `U` IDs. Defaults to `false`."
						}
					]
				},
				"description": "For Enterprise Grid workspaces, map local user IDs to global user IDs"
			},
			"response": [
				{
					"id": "96196a8a-c469-4393-90ff-a3570879e94b",
					"name": "Typical success response when mappings exist for the specified user IDs",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/migration.exchange?token=quis amet commodo&users=quis amet commodo&team_id=quis amet commodo&to_old=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"migration.exchange"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "users",
									"value": "quis amet commodo"
								},
								{
									"key": "team_id",
									"value": "quis amet commodo"
								},
								{
									"key": "to_old",
									"value": "true"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"enterprise_id\": \"E1KQTNXE1\",\n  \"invalid_user_ids\": [\n    \"U21ABZZXX\"\n  ],\n  \"ok\": true,\n  \"team_id\": \"T1KR7PE1W\",\n  \"user_id_map\": {\n    \"U06UBSUN5\": \"W06M56XJM\",\n    \"U06UBSVB3\": \"W06PUUDLY\",\n    \"U06UBSVDX\": \"W06PUUDMW\",\n    \"U06UEB62U\": \"W06PTT6GH\",\n    \"W06UAZ65Q\": \"W06UAZ65Q\"\n  }\n}"
				},
				{
					"id": "3d53430e-cd8a-49ad-8b70-e8c644c4a2e9",
					"name": "Typical error response when there are no mappings to provide",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/migration.exchange?token=quis amet commodo&users=quis amet commodo&team_id=quis amet commodo&to_old=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"migration.exchange"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "users",
									"value": "quis amet commodo"
								},
								{
									"key": "team_id",
									"value": "quis amet commodo"
								},
								{
									"key": "to_old",
									"value": "true"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"not_enterprise_team\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "oauth access",
			"id": "d769ddc3-a3fb-4212-90e9-d735407e34eb",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/oauth.access?client_id=quis amet commodo&client_secret=quis amet commodo&code=quis amet commodo&redirect_uri=quis amet commodo&single_channel=true",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"oauth.access"
					],
					"query": [
						{
							"key": "client_id",
							"value": "quis amet commodo",
							"description": "Issued when you created your application."
						},
						{
							"key": "client_secret",
							"value": "quis amet commodo",
							"description": "Issued when you created your application."
						},
						{
							"key": "code",
							"value": "quis amet commodo",
							"description": "The `code` param returned via the OAuth callback."
						},
						{
							"key": "redirect_uri",
							"value": "quis amet commodo",
							"description": "This must match the originally submitted URI (if one was sent)."
						},
						{
							"key": "single_channel",
							"value": "true",
							"description": "Request the user to add your app only to a single channel. Only valid with a [legacy workspace app](https://api.slack.com/legacy-workspace-apps)."
						}
					]
				},
				"description": "Exchanges a temporary OAuth verifier code for an access token."
			},
			"response": [
				{
					"id": "962b7cba-b4f0-4a0a-ac0c-faa4fec54df4",
					"name": "Successful user token negotiation for a single scope",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/oauth.access?client_id=quis amet commodo&client_secret=quis amet commodo&code=quis amet commodo&redirect_uri=quis amet commodo&single_channel=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth.access"
							],
							"query": [
								{
									"key": "client_id",
									"value": "quis amet commodo"
								},
								{
									"key": "client_secret",
									"value": "quis amet commodo"
								},
								{
									"key": "code",
									"value": "quis amet commodo"
								},
								{
									"key": "redirect_uri",
									"value": "quis amet commodo"
								},
								{
									"key": "single_channel",
									"value": "true"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"access_token\": \"xoxp-XXXXXXXX-XXXXXXXX-XXXXX\",\n  \"enterprise_id\": null,\n  \"scope\": \"groups:write\",\n  \"team_id\": \"TXXXXXXXXX\",\n  \"team_name\": \"Wyld Stallyns LLC\"\n}"
				},
				{
					"id": "0059c9e0-3d4d-464b-b434-e76b19ef85d0",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/oauth.access?client_id=quis amet commodo&client_secret=quis amet commodo&code=quis amet commodo&redirect_uri=quis amet commodo&single_channel=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth.access"
							],
							"query": [
								{
									"key": "client_id",
									"value": "quis amet commodo"
								},
								{
									"key": "client_secret",
									"value": "quis amet commodo"
								},
								{
									"key": "code",
									"value": "quis amet commodo"
								},
								{
									"key": "redirect_uri",
									"value": "quis amet commodo"
								},
								{
									"key": "single_channel",
									"value": "true"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_client_id\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "oauth token",
			"id": "df9aa47e-d811-4046-8af6-58712d4bfdcb",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/oauth.token?client_id=quis amet commodo&client_secret=quis amet commodo&code=quis amet commodo&redirect_uri=quis amet commodo&single_channel=true",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"oauth.token"
					],
					"query": [
						{
							"key": "client_id",
							"value": "quis amet commodo",
							"description": "Issued when you created your application."
						},
						{
							"key": "client_secret",
							"value": "quis amet commodo",
							"description": "Issued when you created your application."
						},
						{
							"key": "code",
							"value": "quis amet commodo",
							"description": "The `code` param returned via the OAuth callback."
						},
						{
							"key": "redirect_uri",
							"value": "quis amet commodo",
							"description": "This must match the originally submitted URI (if one was sent)."
						},
						{
							"key": "single_channel",
							"value": "true",
							"description": "Request the user to add your app only to a single channel."
						}
					]
				},
				"description": "Exchanges a temporary OAuth verifier code for a workspace token."
			},
			"response": [
				{
					"id": "0af074dc-4b49-4b9b-920f-8082911e75cf",
					"name": "Success example using a workspace app produces a very different kind of response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/oauth.token?client_id=quis amet commodo&client_secret=quis amet commodo&code=quis amet commodo&redirect_uri=quis amet commodo&single_channel=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth.token"
							],
							"query": [
								{
									"key": "client_id",
									"value": "quis amet commodo"
								},
								{
									"key": "client_secret",
									"value": "quis amet commodo"
								},
								{
									"key": "code",
									"value": "quis amet commodo"
								},
								{
									"key": "redirect_uri",
									"value": "quis amet commodo"
								},
								{
									"key": "single_channel",
									"value": "true"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"access_token\": \"xoxa-access-token-string\",\n  \"app_id\": \"A012345678\",\n  \"app_user_id\": \"U0AB12ABC\",\n  \"authorizing_user_id\": \"U0HTT3Q0G\",\n  \"installer_user_id\": \"U061F7AUR\",\n  \"ok\": true,\n  \"permissions\": [\n    {\n      \"resource_id\": 0,\n      \"resource_type\": \"channel\",\n      \"scopes\": [\n        \"channels:read\",\n        \"chat:write:user\"\n      ]\n    }\n  ],\n  \"single_channel_id\": \"C061EG9T2\",\n  \"team_id\": \"T061EG9Z9\",\n  \"team_name\": \"Subarachnoid Workspace\",\n  \"token_type\": \"app\"\n}"
				},
				{
					"id": "2802de9c-40d0-442f-bb29-edfd7f02059b",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/oauth.token?client_id=quis amet commodo&client_secret=quis amet commodo&code=quis amet commodo&redirect_uri=quis amet commodo&single_channel=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth.token"
							],
							"query": [
								{
									"key": "client_id",
									"value": "quis amet commodo"
								},
								{
									"key": "client_secret",
									"value": "quis amet commodo"
								},
								{
									"key": "code",
									"value": "quis amet commodo"
								},
								{
									"key": "redirect_uri",
									"value": "quis amet commodo"
								},
								{
									"key": "single_channel",
									"value": "true"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_client_id\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "oauth v2 access",
			"id": "e892a875-c373-4f66-9034-606537a58afd",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/oauth.v2.access?client_id=quis amet commodo&client_secret=quis amet commodo&code=quis amet commodo&redirect_uri=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"oauth.v2.access"
					],
					"query": [
						{
							"key": "client_id",
							"value": "quis amet commodo",
							"description": "Issued when you created your application."
						},
						{
							"key": "client_secret",
							"value": "quis amet commodo",
							"description": "Issued when you created your application."
						},
						{
							"key": "code",
							"value": "quis amet commodo",
							"description": "(Required) The `code` param returned via the OAuth callback."
						},
						{
							"key": "redirect_uri",
							"value": "quis amet commodo",
							"description": "This must match the originally submitted URI (if one was sent)."
						}
					]
				},
				"description": "Exchanges a temporary OAuth verifier code for an access token."
			},
			"response": [
				{
					"id": "b216b80d-f3e6-4568-9b87-de530672f83a",
					"name": "Successful token request with scopes for both a bot user and a user token",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/oauth.v2.access?client_id=quis amet commodo&client_secret=quis amet commodo&code=quis amet commodo&redirect_uri=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth.v2.access"
							],
							"query": [
								{
									"key": "client_id",
									"value": "quis amet commodo"
								},
								{
									"key": "client_secret",
									"value": "quis amet commodo"
								},
								{
									"key": "code",
									"value": "quis amet commodo"
								},
								{
									"key": "redirect_uri",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"access_token\": \"xoxb-17653672481-19874698323-pdFZKVeTuE8sk7oOcBrzbqgy\",\n  \"app_id\": \"A0KRD7HC3\",\n  \"authed_user\": {\n    \"access_token\": \"xoxp-1234\",\n    \"id\": \"U1234\",\n    \"scope\": \"chat:write\",\n    \"token_type\": \"user\"\n  },\n  \"bot_user_id\": \"U0KRQLJ9H\",\n  \"enterprise\": {\n    \"id\": \"E12345678\",\n    \"name\": \"slack-sports\"\n  },\n  \"ok\": true,\n  \"scope\": \"commands,incoming-webhook\",\n  \"team\": {\n    \"id\": \"T9TK3CUKW\",\n    \"name\": \"Slack Softball Team\"\n  },\n  \"token_type\": \"bot\"\n}"
				},
				{
					"id": "72a31802-705d-42ff-8e48-b3c5861cfe18",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/oauth.v2.access?client_id=quis amet commodo&client_secret=quis amet commodo&code=quis amet commodo&redirect_uri=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth.v2.access"
							],
							"query": [
								{
									"key": "client_id",
									"value": "quis amet commodo"
								},
								{
									"key": "client_secret",
									"value": "quis amet commodo"
								},
								{
									"key": "code",
									"value": "quis amet commodo"
								},
								{
									"key": "redirect_uri",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_client_id\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "pins add",
			"id": "17e43f25-6f77-42d5-8ca6-399e5b197420",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `pins:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "sit velit",
							"description": "(Required) Channel to pin the item in."
						},
						{
							"key": "timestamp",
							"value": "mollit pariatur proident",
							"description": "Timestamp of the message to pin."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/pins.add",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pins.add"
					]
				},
				"description": "Pins an item to a channel."
			},
			"response": [
				{
					"id": "2e2c6518-5de0-485d-9ac7-715c7f7e2d39",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `pins:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Channel to pin the item in.",
									"key": "channel",
									"value": "sit velit"
								},
								{
									"description": "Timestamp of the message to pin.",
									"key": "timestamp",
									"value": "mollit pariatur proident"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/pins.add",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pins.add"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "e255314c-d421-462f-b6bb-c90b0176f04b",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `pins:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Channel to pin the item in.",
									"key": "channel",
									"value": "sit velit"
								},
								{
									"description": "Timestamp of the message to pin.",
									"key": "timestamp",
									"value": "mollit pariatur proident"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/pins.add",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pins.add"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"channel_not_found\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "pins list",
			"id": "b453b796-cb6a-4f11-8d49-0d84bbff5020",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/pins.list?token=quis amet commodo&channel=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pins.list"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "(Required) Authentication token. Requires scope: `pins:read`"
						},
						{
							"key": "channel",
							"value": "quis amet commodo",
							"description": "(Required) Channel to get pinned items for."
						}
					]
				},
				"description": "Lists items pinned to a channel."
			},
			"response": [
				{
					"id": "6ce53010-0833-473b-8813-84799022bbf1",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pins.list?token=quis amet commodo&channel=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pins.list"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "channel",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"items\": [\n    {\n      \"channel\": \"C2U86NC6H\",\n      \"created\": 1508881078,\n      \"created_by\": \"U2U85N1RZ\",\n      \"message\": {\n        \"permalink\": \"https://hitchhikers.slack.com/archives/C2U86NC6H/p1508197641000151\",\n        \"pinned_to\": [\n          \"C2U86NC6H\"\n        ],\n        \"text\": \"What is the meaning of life?\",\n        \"ts\": \"1508197641.000151\",\n        \"type\": \"message\",\n        \"user\": \"U2U85N1RZ\"\n      },\n      \"type\": \"message\"\n    },\n    {\n      \"channel\": \"C2U86NC6H\",\n      \"created\": 1508880991,\n      \"created_by\": \"U2U85N1RZ\",\n      \"message\": {\n        \"permalink\": \"https://hitchhikers.slack.com/archives/C2U86NC6H/p1508284197000015\",\n        \"pinned_to\": [\n          \"C2U86NC6H\"\n        ],\n        \"text\": \"The meaning of life, the universe, and everything is 42.\",\n        \"ts\": \"1503289197.000015\",\n        \"type\": \"message\",\n        \"user\": \"U2U85N1RZ\"\n      },\n      \"type\": \"message\"\n    }\n  ],\n  \"ok\": true\n}"
				},
				{
					"id": "aedd42cf-3bba-4118-bee4-9c1c4c18ebd0",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pins.list?token=quis amet commodo&channel=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pins.list"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "channel",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "pins remove",
			"id": "994b964d-035f-4694-a5d3-ffde8897026c",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `pins:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "",
							"description": "(Required) Channel where the item is pinned to."
						},
						{
							"key": "timestamp",
							"value": "nulla dolore sint mollit Excepteur",
							"description": "Timestamp of the message to un-pin."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/pins.remove",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pins.remove"
					]
				},
				"description": "Un-pins an item from a channel."
			},
			"response": [
				{
					"id": "2ba06cac-a944-42a8-ae4a-35f01963a887",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `pins:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Channel where the item is pinned to.",
									"key": "channel",
									"value": ""
								},
								{
									"description": "Timestamp of the message to un-pin.",
									"key": "timestamp",
									"value": "nulla dolore sint mollit Excepteur"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/pins.remove",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pins.remove"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "355fd147-8088-4899-a798-67c0fe8d6bc4",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `pins:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Channel where the item is pinned to.",
									"key": "channel",
									"value": ""
								},
								{
									"description": "Timestamp of the message to un-pin.",
									"key": "timestamp",
									"value": "nulla dolore sint mollit Excepteur"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/pins.remove",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pins.remove"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"no_pin\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "reactions add",
			"id": "9304804b-8002-4b41-92d9-9d7a604992f4",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `reactions:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "exercitation ut ea eu",
							"description": "(Required) Channel where the message to add reaction to was posted."
						},
						{
							"key": "name",
							"value": "ad aliqua Duis volup",
							"description": "(Required) Reaction (emoji) name."
						},
						{
							"key": "timestamp",
							"value": "do labore",
							"description": "(Required) Timestamp of the message to add reaction to."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/reactions.add",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"reactions.add"
					]
				},
				"description": "Adds a reaction to an item."
			},
			"response": [
				{
					"id": "60c13b1e-e687-4246-abdb-b6a8529c63b6",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `reactions:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Channel where the message to add reaction to was posted.",
									"key": "channel",
									"value": "exercitation ut ea eu"
								},
								{
									"description": "(Required) Reaction (emoji) name.",
									"key": "name",
									"value": "ad aliqua Duis volup"
								},
								{
									"description": "(Required) Timestamp of the message to add reaction to.",
									"key": "timestamp",
									"value": "do labore"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/reactions.add",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reactions.add"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "0582b80c-176f-4458-a7fb-e019dfd8552c",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `reactions:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Channel where the message to add reaction to was posted.",
									"key": "channel",
									"value": "exercitation ut ea eu"
								},
								{
									"description": "(Required) Reaction (emoji) name.",
									"key": "name",
									"value": "ad aliqua Duis volup"
								},
								{
									"description": "(Required) Timestamp of the message to add reaction to.",
									"key": "timestamp",
									"value": "do labore"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/reactions.add",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reactions.add"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"already_reacted\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "reactions get",
			"id": "2d2fef4a-98a4-4442-80b8-137d9629602a",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/reactions.get?token=quis amet commodo&channel=quis amet commodo&file=quis amet commodo&file_comment=quis amet commodo&full=true&timestamp=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"reactions.get"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "(Required) Authentication token. Requires scope: `reactions:read`"
						},
						{
							"key": "channel",
							"value": "quis amet commodo",
							"description": "Channel where the message to get reactions for was posted."
						},
						{
							"key": "file",
							"value": "quis amet commodo",
							"description": "File to get reactions for."
						},
						{
							"key": "file_comment",
							"value": "quis amet commodo",
							"description": "File comment to get reactions for."
						},
						{
							"key": "full",
							"value": "true",
							"description": "If true always return the complete reaction list."
						},
						{
							"key": "timestamp",
							"value": "quis amet commodo",
							"description": "Timestamp of the message to get reactions for."
						}
					]
				},
				"description": "Gets reactions for an item."
			},
			"response": [
				{
					"id": "4d20ce0b-35f6-4111-983d-3c963678fb6e",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/reactions.get?token=quis amet commodo&channel=quis amet commodo&file=quis amet commodo&file_comment=quis amet commodo&full=true&timestamp=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reactions.get"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "channel",
									"value": "quis amet commodo"
								},
								{
									"key": "file",
									"value": "quis amet commodo"
								},
								{
									"key": "file_comment",
									"value": "quis amet commodo"
								},
								{
									"key": "full",
									"value": "true"
								},
								{
									"key": "timestamp",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"file\": {\n    \"channels\": [\n      \"C2U7V2YA2\"\n    ],\n    \"comments_count\": 1,\n    \"created\": 1507850315,\n    \"groups\": [],\n    \"id\": \"F7H0D7ZA4\",\n    \"ims\": [],\n    \"name\": \"computer.gif\",\n    \"reactions\": [\n      {\n        \"count\": 1,\n        \"name\": \"stuck_out_tongue_winking_eye\",\n        \"users\": [\n          \"U2U85N1RV\"\n        ]\n      }\n    ],\n    \"timestamp\": 1507850315,\n    \"title\": \"computer.gif\",\n    \"user\": \"U2U85N1RV\"\n  },\n  \"ok\": true,\n  \"type\": \"file\"\n}"
				},
				{
					"id": "a1b3050b-e147-401c-89c5-5be3694ba907",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/reactions.get?token=quis amet commodo&channel=quis amet commodo&file=quis amet commodo&file_comment=quis amet commodo&full=true&timestamp=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reactions.get"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "channel",
									"value": "quis amet commodo"
								},
								{
									"key": "file",
									"value": "quis amet commodo"
								},
								{
									"key": "file_comment",
									"value": "quis amet commodo"
								},
								{
									"key": "full",
									"value": "true"
								},
								{
									"key": "timestamp",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "reactions list",
			"id": "bf25215a-7cf6-49a3-960d-95c5d22f9337",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/reactions.list?token=quis amet commodo&user=quis amet commodo&full=true&count=74567849&page=74567849&cursor=quis amet commodo&limit=74567849",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"reactions.list"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "(Required) Authentication token. Requires scope: `reactions:read`"
						},
						{
							"key": "user",
							"value": "quis amet commodo",
							"description": "Show reactions made by this user. Defaults to the authed user."
						},
						{
							"key": "full",
							"value": "true",
							"description": "If true always return the complete reaction list."
						},
						{
							"key": "count",
							"value": "74567849"
						},
						{
							"key": "page",
							"value": "74567849"
						},
						{
							"key": "cursor",
							"value": "quis amet commodo",
							"description": "Parameter for pagination. Set `cursor` equal to the `next_cursor` attribute returned by the previous request's `response_metadata`. This parameter is optional, but pagination is mandatory: the default value simply fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more details."
						},
						{
							"key": "limit",
							"value": "74567849",
							"description": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the list hasn't been reached."
						}
					]
				},
				"description": "Lists reactions made by a user."
			},
			"response": [
				{
					"id": "5717c763-f283-460c-a7c7-e51b245176f5",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/reactions.list?token=quis amet commodo&user=quis amet commodo&full=true&count=74567849&page=74567849&cursor=quis amet commodo&limit=74567849",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reactions.list"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "user",
									"value": "quis amet commodo"
								},
								{
									"key": "full",
									"value": "true"
								},
								{
									"key": "count",
									"value": "74567849"
								},
								{
									"key": "page",
									"value": "74567849"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"items\": [\n    {\n      \"channel\": \"C3UKJTQAC\",\n      \"message\": {\n        \"bot_id\": \"B4VLRLMKJ\",\n        \"reactions\": [\n          {\n            \"count\": 1,\n            \"name\": \"robot_face\",\n            \"users\": [\n              \"U2U85N1RV\"\n            ]\n          }\n        ],\n        \"subtype\": \"bot_message\",\n        \"text\": \"Hello from Python! :tada:\",\n        \"ts\": \"1507849573.000090\",\n        \"username\": \"Shipit Notifications\"\n      },\n      \"type\": \"message\"\n    },\n    {\n      \"comment\": {\n        \"comment\": \"This is a file comment\",\n        \"created\": 1508286096,\n        \"id\": \"Fc7LP08P1U\",\n        \"reactions\": [\n          {\n            \"count\": 1,\n            \"name\": \"white_check_mark\",\n            \"users\": [\n              \"U2U85N1RV\"\n            ]\n          }\n        ],\n        \"timestamp\": 1508286096,\n        \"type\": \"file_comment\",\n        \"user\": \"U2U85N1RV\"\n      },\n      \"file\": {\n        \"channels\": [\n          \"C2U7V2YA2\"\n        ],\n        \"comments_count\": 1,\n        \"created\": 1507850315,\n        \"reactions\": [\n          {\n            \"count\": 1,\n            \"name\": \"stuck_out_tongue_winking_eye\",\n            \"users\": [\n              \"U2U85N1RV\"\n            ]\n          }\n        ],\n        \"title\": \"computer.gif\",\n        \"user\": \"U2U85N1RV\",\n        \"username\": \"\"\n      }\n    },\n    {\n      \"file\": {\n        \"channels\": [\n          \"C2U7V2YA2\"\n        ],\n        \"comments_count\": 1,\n        \"created\": 1507850315,\n        \"id\": \"F7H0D7ZA4\",\n        \"name\": \"computer.gif\",\n        \"reactions\": [\n          {\n            \"count\": 1,\n            \"name\": \"stuck_out_tongue_winking_eye\",\n            \"users\": [\n              \"U2U85N1RV\"\n            ]\n          }\n        ],\n        \"size\": 1639034,\n        \"title\": \"computer.gif\",\n        \"user\": \"U2U85N1RV\",\n        \"username\": \"\"\n      },\n      \"type\": \"file\"\n    }\n  ],\n  \"ok\": true,\n  \"response_metadata\": {\n    \"next_cursor\": \"dGVhbTpDMUg5UkVTR0w=\"\n  }\n}"
				},
				{
					"id": "decda0ec-eeed-4e58-ab6d-418aca7677be",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/reactions.list?token=quis amet commodo&user=quis amet commodo&full=true&count=74567849&page=74567849&cursor=quis amet commodo&limit=74567849",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reactions.list"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "user",
									"value": "quis amet commodo"
								},
								{
									"key": "full",
									"value": "true"
								},
								{
									"key": "count",
									"value": "74567849"
								},
								{
									"key": "page",
									"value": "74567849"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "reactions remove",
			"id": "d3316dd6-d03a-4189-92d5-ccbe7921af54",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `reactions:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "name",
							"value": "aliquip nostrud dolor do",
							"description": "(Required) Reaction (emoji) name."
						},
						{
							"key": "file",
							"value": "ut",
							"description": "File to remove reaction from."
						},
						{
							"key": "file_comment",
							"value": "in do",
							"description": "File comment to remove reaction from."
						},
						{
							"key": "channel",
							"value": "dolor veniam sunt cillum",
							"description": "Channel where the message to remove reaction from was posted."
						},
						{
							"key": "timestamp",
							"value": "ea do nisi",
							"description": "Timestamp of the message to remove reaction from."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/reactions.remove",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"reactions.remove"
					]
				},
				"description": "Removes a reaction from an item."
			},
			"response": [
				{
					"id": "5c3bc5bf-3ebe-4b43-944c-6d43f1b5b0ea",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `reactions:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Reaction (emoji) name.",
									"key": "name",
									"value": "aliquip nostrud dolor do"
								},
								{
									"description": "File to remove reaction from.",
									"key": "file",
									"value": "ut"
								},
								{
									"description": "File comment to remove reaction from.",
									"key": "file_comment",
									"value": "in do"
								},
								{
									"description": "Channel where the message to remove reaction from was posted.",
									"key": "channel",
									"value": "dolor veniam sunt cillum"
								},
								{
									"description": "Timestamp of the message to remove reaction from.",
									"key": "timestamp",
									"value": "ea do nisi"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/reactions.remove",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reactions.remove"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "1330207a-a8fb-49ec-b1ec-c598be9b0988",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `reactions:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Reaction (emoji) name.",
									"key": "name",
									"value": "aliquip nostrud dolor do"
								},
								{
									"description": "File to remove reaction from.",
									"key": "file",
									"value": "ut"
								},
								{
									"description": "File comment to remove reaction from.",
									"key": "file_comment",
									"value": "in do"
								},
								{
									"description": "Channel where the message to remove reaction from was posted.",
									"key": "channel",
									"value": "dolor veniam sunt cillum"
								},
								{
									"description": "Timestamp of the message to remove reaction from.",
									"key": "timestamp",
									"value": "ea do nisi"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/reactions.remove",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reactions.remove"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"no_reaction\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "reminders add",
			"id": "a7d3a9ea-4efd-4b16-a134-c14af63f0c4f",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `reminders:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "text",
							"value": "Excepteur sint in aliquip labore",
							"description": "(Required) The content of the reminder"
						},
						{
							"key": "time",
							"value": "Duis aliqua non",
							"description": "(Required) When this reminder should happen: the Unix timestamp (up to five years from now), the number of seconds until the reminder (if within 24 hours), or a natural language description (Ex. \"in 15 minutes,\" or \"every Thursday\")"
						},
						{
							"key": "user",
							"value": "ut Ut dolor tempor in",
							"description": "The user who will receive the reminder. If no user is specified, the reminder will go to user who created it."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/reminders.add",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"reminders.add"
					]
				},
				"description": "Creates a reminder."
			},
			"response": [
				{
					"id": "84d3e497-a6c4-457d-8c7a-2d520ba11e2b",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `reminders:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The content of the reminder",
									"key": "text",
									"value": "Excepteur sint in aliquip labore"
								},
								{
									"description": "(Required) When this reminder should happen: the Unix timestamp (up to five years from now), the number of seconds until the reminder (if within 24 hours), or a natural language description (Ex. \"in 15 minutes,\" or \"every Thursday\")",
									"key": "time",
									"value": "Duis aliqua non"
								},
								{
									"description": "The user who will receive the reminder. If no user is specified, the reminder will go to user who created it.",
									"key": "user",
									"value": "ut Ut dolor tempor in"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/reminders.add",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reminders.add"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "232d5cdd-4659-4d26-affe-ce8b06ce73f5",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `reminders:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The content of the reminder",
									"key": "text",
									"value": "Excepteur sint in aliquip labore"
								},
								{
									"description": "(Required) When this reminder should happen: the Unix timestamp (up to five years from now), the number of seconds until the reminder (if within 24 hours), or a natural language description (Ex. \"in 15 minutes,\" or \"every Thursday\")",
									"key": "time",
									"value": "Duis aliqua non"
								},
								{
									"description": "The user who will receive the reminder. If no user is specified, the reminder will go to user who created it.",
									"key": "user",
									"value": "ut Ut dolor tempor in"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/reminders.add",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reminders.add"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "reminders complete",
			"id": "b5b99a0b-cb33-4e67-a721-0fadd170dddf",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `reminders:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "reminder",
							"value": "sit incididunt in dolore",
							"description": "The ID of the reminder to be marked as complete"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/reminders.complete",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"reminders.complete"
					]
				},
				"description": "Marks a reminder as complete."
			},
			"response": [
				{
					"id": "376e795d-8cc9-4401-bef7-4e79a08dd94c",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `reminders:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "The ID of the reminder to be marked as complete",
									"key": "reminder",
									"value": "sit incididunt in dolore"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/reminders.complete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reminders.complete"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "93dc9d50-00fb-47b6-a9ec-4d676b95c658",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `reminders:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "The ID of the reminder to be marked as complete",
									"key": "reminder",
									"value": "sit incididunt in dolore"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/reminders.complete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reminders.complete"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "reminders delete",
			"id": "4ce2253c-78fc-4951-b2c1-32d0a9820a07",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `reminders:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "reminder",
							"value": "magna aute et",
							"description": "The ID of the reminder"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/reminders.delete",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"reminders.delete"
					]
				},
				"description": "Deletes a reminder."
			},
			"response": [
				{
					"id": "6fa836a2-b3f0-4224-a594-4775b3953644",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `reminders:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "The ID of the reminder",
									"key": "reminder",
									"value": "magna aute et"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/reminders.delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reminders.delete"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "cb84b722-7f99-4b54-8f32-84f818400e77",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `reminders:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "The ID of the reminder",
									"key": "reminder",
									"value": "magna aute et"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/reminders.delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reminders.delete"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "reminders info",
			"id": "e9fdf6a3-0141-4732-b75a-2b60ea175d2f",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/reminders.info?token=quis amet commodo&reminder=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"reminders.info"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "Authentication token. Requires scope: `reminders:read`"
						},
						{
							"key": "reminder",
							"value": "quis amet commodo",
							"description": "The ID of the reminder"
						}
					]
				},
				"description": "Gets information about a reminder."
			},
			"response": [
				{
					"id": "1b8f36e7-540f-4600-bc2f-ea8547293e27",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/reminders.info?token=quis amet commodo&reminder=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reminders.info"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "reminder",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "48adacfe-54ed-4d67-90ac-b78cc2022ffa",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/reminders.info?token=quis amet commodo&reminder=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reminders.info"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "reminder",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "reminders list",
			"id": "d5a82700-7859-4172-9ecf-c789940341ee",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/reminders.list?token=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"reminders.list"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "Authentication token. Requires scope: `reminders:read`"
						}
					]
				},
				"description": "Lists all reminders created by or for a given user."
			},
			"response": [
				{
					"id": "604a10c2-0462-425d-825c-10ef763c7f2c",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/reminders.list?token=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reminders.list"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "1b54a5a9-860d-4cff-b15f-2fb6102f4407",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/reminders.list?token=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reminders.list"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "rtm connect",
			"id": "74c3c481-b388-47ab-ba51-22f7f7538fd1",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/rtm.connect?token=quis amet commodo&batch_presence_aware=true&presence_sub=true",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"rtm.connect"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "(Required) Authentication token. Requires scope: `rtm:stream`"
						},
						{
							"key": "batch_presence_aware",
							"value": "true",
							"description": "Batch presence deliveries via subscription. Enabling changes the shape of `presence_change` events. See [batch presence](/docs/presence-and-status#batching)."
						},
						{
							"key": "presence_sub",
							"value": "true",
							"description": "Only deliver presence events when requested by subscription. See [presence subscriptions](/docs/presence-and-status#subscriptions)."
						}
					]
				},
				"description": "Starts a Real Time Messaging session."
			},
			"response": [
				{
					"id": "41f80640-bbe3-47c1-a136-e40f0ad8ce3a",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/rtm.connect?token=quis amet commodo&batch_presence_aware=true&presence_sub=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rtm.connect"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "batch_presence_aware",
									"value": "true"
								},
								{
									"key": "presence_sub",
									"value": "true"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"self\": {\n    \"id\": \"U4X318ZMZ\",\n    \"name\": \"robotoverlord\"\n  },\n  \"team\": {\n    \"domain\": \"slackdemo\",\n    \"id\": \"T2U81E2FP\",\n    \"name\": \"SlackDemo\"\n  },\n  \"url\": \"wss://...\"\n}"
				},
				{
					"id": "29e11c57-ad0a-4509-a735-84dafa675c78",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/rtm.connect?token=quis amet commodo&batch_presence_aware=true&presence_sub=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rtm.connect"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "batch_presence_aware",
									"value": "true"
								},
								{
									"key": "presence_sub",
									"value": "true"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "search messages",
			"id": "99af0bb6-fa96-4d62-b86b-13f8c1ad14a4",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/search.messages?token=quis amet commodo&count=74567849&highlight=true&page=74567849&query=quis amet commodo&sort=quis amet commodo&sort_dir=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"search.messages"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "(Required) Authentication token. Requires scope: `search:read`"
						},
						{
							"key": "count",
							"value": "74567849",
							"description": "Pass the number of results you want per \"page\". Maximum of `100`."
						},
						{
							"key": "highlight",
							"value": "true",
							"description": "Pass a value of `true` to enable query highlight markers (see below)."
						},
						{
							"key": "page",
							"value": "74567849"
						},
						{
							"key": "query",
							"value": "quis amet commodo",
							"description": "(Required) Search query."
						},
						{
							"key": "sort",
							"value": "quis amet commodo",
							"description": "Return matches sorted by either `score` or `timestamp`."
						},
						{
							"key": "sort_dir",
							"value": "quis amet commodo",
							"description": "Change sort direction to ascending (`asc`) or descending (`desc`)."
						}
					]
				},
				"description": "Searches for messages matching a query."
			},
			"response": [
				{
					"id": "0bee6352-f56a-4a13-a4cd-b7bf8a0bbe65",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/search.messages?token=quis amet commodo&count=74567849&highlight=true&page=74567849&query=quis amet commodo&sort=quis amet commodo&sort_dir=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"search.messages"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "count",
									"value": "74567849"
								},
								{
									"key": "highlight",
									"value": "true"
								},
								{
									"key": "page",
									"value": "74567849"
								},
								{
									"key": "query",
									"value": "quis amet commodo"
								},
								{
									"key": "sort",
									"value": "quis amet commodo"
								},
								{
									"key": "sort_dir",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"messages\": {\n    \"matches\": [\n      {\n        \"channel\": {\n          \"id\": \"C12345678\",\n          \"is_ext_shared\": false,\n          \"is_mpim\": false,\n          \"is_org_shared\": false,\n          \"is_pending_ext_shared\": false,\n          \"is_private\": false,\n          \"is_shared\": false,\n          \"name\": \"general\",\n          \"pending_shared\": []\n        },\n        \"iid\": \"cb64bdaa-c1e8-4631-8a91-0f78080113e9\",\n        \"permalink\": \"https://hitchhikers.slack.com/archives/C12345678/p1508284197000015\",\n        \"team\": \"T12345678\",\n        \"text\": \"The meaning of life the universe and everything is 42.\",\n        \"ts\": \"1508284197.000015\",\n        \"type\": \"message\",\n        \"user\": \"U2U85N1RV\",\n        \"username\": \"roach\"\n      },\n      {\n        \"channel\": {\n          \"id\": \"C12345678\",\n          \"is_ext_shared\": false,\n          \"is_mpim\": false,\n          \"is_org_shared\": false,\n          \"is_pending_ext_shared\": false,\n          \"is_private\": false,\n          \"is_shared\": false,\n          \"name\": \"random\",\n          \"pending_shared\": []\n        },\n        \"iid\": \"9a00d3c9-bd2d-45b0-988b-6cff99ae2a90\",\n        \"permalink\": \"https://hitchhikers.slack.com/archives/C12345678/p1508795665000236\",\n        \"team\": \"T12345678\",\n        \"text\": \"The meaning of life the universe and everything is 101010\",\n        \"ts\": \"1508795665.000236\",\n        \"type\": \"message\",\n        \"user\": \"\",\n        \"username\": \"robot overlord\"\n      }\n    ],\n    \"pagination\": {\n      \"first\": 1,\n      \"last\": 2,\n      \"page\": 1,\n      \"page_count\": 1,\n      \"per_page\": 20,\n      \"total_count\": 2\n    },\n    \"paging\": {\n      \"count\": 20,\n      \"page\": 1,\n      \"pages\": 1,\n      \"total\": 2\n    },\n    \"total\": 2\n  },\n  \"ok\": true,\n  \"query\": \"The meaning of life the universe and everything\"\n}"
				},
				{
					"id": "ee94c2d6-5f26-4b7b-b33b-d4671cd80dc7",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/search.messages?token=quis amet commodo&count=74567849&highlight=true&page=74567849&query=quis amet commodo&sort=quis amet commodo&sort_dir=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"search.messages"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "count",
									"value": "74567849"
								},
								{
									"key": "highlight",
									"value": "true"
								},
								{
									"key": "page",
									"value": "74567849"
								},
								{
									"key": "query",
									"value": "quis amet commodo"
								},
								{
									"key": "sort",
									"value": "quis amet commodo"
								},
								{
									"key": "sort_dir",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"No query passed\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "stars add",
			"id": "a76effb9-3bc7-485a-bab4-51d8b3c6f644",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `stars:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "Lorem veniam",
							"description": "Channel to add star to, or channel where the message to add star to was posted (used with `timestamp`)."
						},
						{
							"key": "file",
							"value": "velit deserunt",
							"description": "File to add star to."
						},
						{
							"key": "file_comment",
							"value": "ea enim",
							"description": "File comment to add star to."
						},
						{
							"key": "timestamp",
							"value": "irure consectetur",
							"description": "Timestamp of the message to add star to."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/stars.add",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stars.add"
					]
				},
				"description": "Adds a star to an item."
			},
			"response": [
				{
					"id": "c2b8f97e-3fca-48f9-add1-2e718ea59313",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `stars:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Channel to add star to, or channel where the message to add star to was posted (used with `timestamp`).",
									"key": "channel",
									"value": "Lorem veniam"
								},
								{
									"description": "File to add star to.",
									"key": "file",
									"value": "velit deserunt"
								},
								{
									"description": "File comment to add star to.",
									"key": "file_comment",
									"value": "ea enim"
								},
								{
									"description": "Timestamp of the message to add star to.",
									"key": "timestamp",
									"value": "irure consectetur"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/stars.add",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stars.add"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "a1ce0227-a0d7-4c93-8ddf-342c9c29d201",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `stars:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Channel to add star to, or channel where the message to add star to was posted (used with `timestamp`).",
									"key": "channel",
									"value": "Lorem veniam"
								},
								{
									"description": "File to add star to.",
									"key": "file",
									"value": "velit deserunt"
								},
								{
									"description": "File comment to add star to.",
									"key": "file_comment",
									"value": "ea enim"
								},
								{
									"description": "Timestamp of the message to add star to.",
									"key": "timestamp",
									"value": "irure consectetur"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/stars.add",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stars.add"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "stars list",
			"id": "33668b49-d7c4-45aa-9b33-1552c97b8b99",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/stars.list?token=quis amet commodo&count=quis amet commodo&page=quis amet commodo&cursor=quis amet commodo&limit=74567849",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stars.list"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "Authentication token. Requires scope: `stars:read`"
						},
						{
							"key": "count",
							"value": "quis amet commodo"
						},
						{
							"key": "page",
							"value": "quis amet commodo"
						},
						{
							"key": "cursor",
							"value": "quis amet commodo",
							"description": "Parameter for pagination. Set `cursor` equal to the `next_cursor` attribute returned by the previous request's `response_metadata`. This parameter is optional, but pagination is mandatory: the default value simply fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more details."
						},
						{
							"key": "limit",
							"value": "74567849",
							"description": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the list hasn't been reached."
						}
					]
				},
				"description": "Lists stars for a user."
			},
			"response": [
				{
					"id": "776d3780-4d8f-48c3-b105-8c94c4121708",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/stars.list?token=quis amet commodo&count=quis amet commodo&page=quis amet commodo&cursor=quis amet commodo&limit=74567849",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stars.list"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "count",
									"value": "quis amet commodo"
								},
								{
									"key": "page",
									"value": "quis amet commodo"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "ea67ba02-7e74-4a32-9da8-269508331d89",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/stars.list?token=quis amet commodo&count=quis amet commodo&page=quis amet commodo&cursor=quis amet commodo&limit=74567849",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stars.list"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "count",
									"value": "quis amet commodo"
								},
								{
									"key": "page",
									"value": "quis amet commodo"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "stars remove",
			"id": "145a15f5-0e34-42bb-bcc4-80a5b837ed15",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `stars:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "cillum quis dolor anim",
							"description": "Channel to remove star from, or channel where the message to remove star from was posted (used with `timestamp`)."
						},
						{
							"key": "file",
							"value": "veniam ullamco ipsum",
							"description": "File to remove star from."
						},
						{
							"key": "file_comment",
							"value": "labore anim Ut",
							"description": "File comment to remove star from."
						},
						{
							"key": "timestamp",
							"value": "quis mollit reprehenderit sunt",
							"description": "Timestamp of the message to remove star from."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/stars.remove",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stars.remove"
					]
				},
				"description": "Removes a star from an item."
			},
			"response": [
				{
					"id": "4cfdf38b-5dc0-42da-b51a-e5609349ddb0",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `stars:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Channel to remove star from, or channel where the message to remove star from was posted (used with `timestamp`).",
									"key": "channel",
									"value": "cillum quis dolor anim"
								},
								{
									"description": "File to remove star from.",
									"key": "file",
									"value": "veniam ullamco ipsum"
								},
								{
									"description": "File comment to remove star from.",
									"key": "file_comment",
									"value": "labore anim Ut"
								},
								{
									"description": "Timestamp of the message to remove star from.",
									"key": "timestamp",
									"value": "quis mollit reprehenderit sunt"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/stars.remove",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stars.remove"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "fccbadc0-3c86-4b7d-aa5a-06655d6db8a9",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `stars:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Channel to remove star from, or channel where the message to remove star from was posted (used with `timestamp`).",
									"key": "channel",
									"value": "cillum quis dolor anim"
								},
								{
									"description": "File to remove star from.",
									"key": "file",
									"value": "veniam ullamco ipsum"
								},
								{
									"description": "File comment to remove star from.",
									"key": "file_comment",
									"value": "labore anim Ut"
								},
								{
									"description": "Timestamp of the message to remove star from.",
									"key": "timestamp",
									"value": "quis mollit reprehenderit sunt"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/stars.remove",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stars.remove"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "team access Logs",
			"id": "59218db0-9853-44f9-a140-e46f8f258cc1",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/team.accessLogs?token=quis amet commodo&before=quis amet commodo&count=quis amet commodo&page=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"team.accessLogs"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "(Required) Authentication token. Requires scope: `admin`"
						},
						{
							"key": "before",
							"value": "quis amet commodo",
							"description": "End of time range of logs to include in results (inclusive)."
						},
						{
							"key": "count",
							"value": "quis amet commodo"
						},
						{
							"key": "page",
							"value": "quis amet commodo"
						}
					]
				},
				"description": "Gets the access logs for the current team."
			},
			"response": [
				{
					"id": "adf6c2b6-8faa-4182-84eb-4a3a50da9381",
					"name": "This response demonstrates pagination and two access log entries.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/team.accessLogs?token=quis amet commodo&before=quis amet commodo&count=quis amet commodo&page=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"team.accessLogs"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "before",
									"value": "quis amet commodo"
								},
								{
									"key": "count",
									"value": "quis amet commodo"
								},
								{
									"key": "page",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"logins\": [\n    {\n      \"count\": 1,\n      \"country\": \"US\",\n      \"date_first\": 1422922864,\n      \"date_last\": 1422922864,\n      \"ip\": \"127.0.0.1\",\n      \"isp\": \"BigCo ISP\",\n      \"region\": \"CA\",\n      \"user_agent\": \"SlackWeb Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2272.35 Safari/537.36\",\n      \"user_id\": \"U45678\",\n      \"username\": \"alice\"\n    },\n    {\n      \"count\": 1,\n      \"country\": \"US\",\n      \"date_first\": 1422922493,\n      \"date_last\": 1422922493,\n      \"ip\": \"127.0.0.1\",\n      \"isp\": \"BigCo ISP\",\n      \"region\": \"CA\",\n      \"user_agent\": \"SlackWeb Mozilla/5.0 (iPhone; CPU iPhone OS 8_1_3 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12B466 Safari/600.1.4\",\n      \"user_id\": \"U12345\",\n      \"username\": \"white_rabbit\"\n    }\n  ],\n  \"ok\": true,\n  \"paging\": {\n    \"count\": 100,\n    \"page\": 1,\n    \"pages\": 1,\n    \"total\": 2\n  }\n}"
				},
				{
					"id": "e7e88785-e7c9-4cdc-91e9-bce14faa46be",
					"name": "A workspace must be on a paid plan to use this method, otherwise the `paid_only` error is thrown:",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/team.accessLogs?token=quis amet commodo&before=quis amet commodo&count=quis amet commodo&page=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"team.accessLogs"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "before",
									"value": "quis amet commodo"
								},
								{
									"key": "count",
									"value": "quis amet commodo"
								},
								{
									"key": "page",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"paid_only\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "team billable Info",
			"id": "6b5caca9-5a7a-4616-836a-7129fdb70c1c",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/team.billableInfo?token=quis amet commodo&user=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"team.billableInfo"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "(Required) Authentication token. Requires scope: `admin`"
						},
						{
							"key": "user",
							"value": "quis amet commodo",
							"description": "A user to retrieve the billable information for. Defaults to all users."
						}
					]
				},
				"description": "Gets billable users information for the current team."
			},
			"response": [
				{
					"id": "77af3daf-bed5-4fa0-8d0f-8a89d4fc6c99",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/team.billableInfo?token=quis amet commodo&user=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"team.billableInfo"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "user",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"billable_info\": {\n    \"U02UCPE1R\": {\n      \"billing_active\": true\n    },\n    \"U02UEBSD2\": {\n      \"billing_active\": true\n    },\n    \"U0632EWRW\": {\n      \"billing_active\": false\n    }\n  },\n  \"ok\": true\n}"
				},
				{
					"id": "05ab41dc-f940-41cc-8c62-abed7ad485ad",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/team.billableInfo?token=quis amet commodo&user=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"team.billableInfo"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "user",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "team info",
			"id": "0efb8a30-f3be-4b67-8f02-81fcb79499d6",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/team.info?token=quis amet commodo&team=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"team.info"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "(Required) Authentication token. Requires scope: `team:read`"
						},
						{
							"key": "team",
							"value": "quis amet commodo",
							"description": "Team to get info on, if omitted, will return information about the current team. Will only return team that the authenticated token is allowed to see through external shared channels"
						}
					]
				},
				"description": "Gets information about the current team."
			},
			"response": [
				{
					"id": "db4e53d8-3b11-4deb-afdb-c3ada4fa9e6a",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/team.info?token=quis amet commodo&team=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"team.info"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "team",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"team\": {\n    \"domain\": \"example\",\n    \"email_domain\": \"example.com\",\n    \"enterprise_id\": \"E1234A12AB\",\n    \"enterprise_name\": \"Umbrella Corporation\",\n    \"icon\": {\n      \"image_102\": \"https://...\",\n      \"image_132\": \"https://...\",\n      \"image_34\": \"https://...\",\n      \"image_44\": \"https://...\",\n      \"image_68\": \"https://...\",\n      \"image_88\": \"https://...\",\n      \"image_default\": true\n    },\n    \"id\": \"T12345\",\n    \"name\": \"My Team\"\n  }\n}"
				},
				{
					"id": "f64bd0be-1b99-4b3a-831c-a894e3dbc02c",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/team.info?token=quis amet commodo&team=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"team.info"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "team",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "team integration Logs",
			"id": "b2c9b255-fefb-426b-ab36-012b936df69e",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/team.integrationLogs?token=quis amet commodo&app_id=quis amet commodo&change_type=quis amet commodo&count=quis amet commodo&page=quis amet commodo&service_id=quis amet commodo&user=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"team.integrationLogs"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "(Required) Authentication token. Requires scope: `admin`"
						},
						{
							"key": "app_id",
							"value": "quis amet commodo",
							"description": "Filter logs to this Slack app. Defaults to all logs."
						},
						{
							"key": "change_type",
							"value": "quis amet commodo",
							"description": "Filter logs with this change type. Defaults to all logs."
						},
						{
							"key": "count",
							"value": "quis amet commodo"
						},
						{
							"key": "page",
							"value": "quis amet commodo"
						},
						{
							"key": "service_id",
							"value": "quis amet commodo",
							"description": "Filter logs to this service. Defaults to all logs."
						},
						{
							"key": "user",
							"value": "quis amet commodo",
							"description": "Filter logs generated by this user’s actions. Defaults to all logs."
						}
					]
				},
				"description": "Gets the integration logs for the current team."
			},
			"response": [
				{
					"id": "431378f6-deba-4ce0-acf1-457660749ccd",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/team.integrationLogs?token=quis amet commodo&app_id=quis amet commodo&change_type=quis amet commodo&count=quis amet commodo&page=quis amet commodo&service_id=quis amet commodo&user=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"team.integrationLogs"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "app_id",
									"value": "quis amet commodo"
								},
								{
									"key": "change_type",
									"value": "quis amet commodo"
								},
								{
									"key": "count",
									"value": "quis amet commodo"
								},
								{
									"key": "page",
									"value": "quis amet commodo"
								},
								{
									"key": "service_id",
									"value": "quis amet commodo"
								},
								{
									"key": "user",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "615a1ca2-6dd2-4cd8-9248-ad22651282f8",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/team.integrationLogs?token=quis amet commodo&app_id=quis amet commodo&change_type=quis amet commodo&count=quis amet commodo&page=quis amet commodo&service_id=quis amet commodo&user=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"team.integrationLogs"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "app_id",
									"value": "quis amet commodo"
								},
								{
									"key": "change_type",
									"value": "quis amet commodo"
								},
								{
									"key": "count",
									"value": "quis amet commodo"
								},
								{
									"key": "page",
									"value": "quis amet commodo"
								},
								{
									"key": "service_id",
									"value": "quis amet commodo"
								},
								{
									"key": "user",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "team profile get",
			"id": "b6d21844-53bc-4d53-a7eb-ff642d6a68d1",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/team.profile.get?token=quis amet commodo&visibility=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"team.profile.get"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "(Required) Authentication token. Requires scope: `users.profile:read`"
						},
						{
							"key": "visibility",
							"value": "quis amet commodo",
							"description": "Filter by visibility."
						}
					]
				},
				"description": "Retrieve a team's profile."
			},
			"response": [
				{
					"id": "0aaf8e85-dd01-40f5-8f93-783c93ec1198",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/team.profile.get?token=quis amet commodo&visibility=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"team.profile.get"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "visibility",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"profile\": {\n    \"fields\": [\n      {\n        \"hint\": \"Enter the extension to reach your desk\",\n        \"id\": \"Xf06054AAA\",\n        \"is_hidden\": 1,\n        \"label\": \"Phone extension\",\n        \"options\": null,\n        \"ordering\": 0,\n        \"possible_values\": null,\n        \"type\": \"text\"\n      },\n      {\n        \"hint\": \"When you were born\",\n        \"id\": \"Xf06054BBB\",\n        \"label\": \"Date of birth\",\n        \"options\": null,\n        \"ordering\": 1,\n        \"possible_values\": null,\n        \"type\": \"date\"\n      },\n      {\n        \"hint\": \"Enter a link to your Facebook profile\",\n        \"id\": \"Xf06054CCC\",\n        \"label\": \"Facebook\",\n        \"options\": null,\n        \"ordering\": 2,\n        \"possible_values\": null,\n        \"type\": \"link\"\n      },\n      {\n        \"hint\": \"Hogwarts, obviously\",\n        \"id\": \"Xf06054DDD\",\n        \"label\": \"House\",\n        \"options\": null,\n        \"ordering\": 3,\n        \"possible_values\": [\n          \"Gryffindor\",\n          \"Hufflepuff\",\n          \"Ravenclaw\",\n          \"Slytherin\"\n        ],\n        \"type\": \"options_list\"\n      },\n      {\n        \"hint\": \"Office location (LDAP)\",\n        \"id\": \"Xf06054EEE\",\n        \"label\": \"Location\",\n        \"options\": {\n          \"is_protected\": 1\n        },\n        \"ordering\": 4,\n        \"possible_values\": null,\n        \"type\": \"text\"\n      },\n      {\n        \"hint\": \"The boss\",\n        \"id\": \"Xf06054FFF\",\n        \"label\": \"Manager\",\n        \"options\": null,\n        \"ordering\": 5,\n        \"possible_values\": null,\n        \"type\": \"user\"\n      }\n    ]\n  }\n}"
				},
				{
					"id": "797da37b-e09c-4bf5-93ea-f1f3570da994",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/team.profile.get?token=quis amet commodo&visibility=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"team.profile.get"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "visibility",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "usergroups create",
			"id": "1bb41188-a0af-4316-a8f3-3e7cd3a054ef",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `usergroups:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "name",
							"value": "do labore",
							"description": "(Required) A name for the User Group. Must be unique among User Groups."
						},
						{
							"key": "channels",
							"value": "e",
							"description": "A comma separated string of encoded channel IDs for which the User Group uses as a default."
						},
						{
							"key": "description",
							"value": "non tempor do",
							"description": "A short description of the User Group."
						},
						{
							"key": "handle",
							"value": "ut",
							"description": "A mention handle. Must be unique among channels, users and User Groups."
						},
						{
							"key": "include_count",
							"value": "true",
							"description": "Include the number of users in each User Group."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/usergroups.create",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usergroups.create"
					]
				},
				"description": "Create a User Group"
			},
			"response": [
				{
					"id": "54d98e7e-475a-4f26-a188-ba10202982d3",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `usergroups:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) A name for the User Group. Must be unique among User Groups.",
									"key": "name",
									"value": "do labore"
								},
								{
									"description": "A comma separated string of encoded channel IDs for which the User Group uses as a default.",
									"key": "channels",
									"value": "e"
								},
								{
									"description": "A short description of the User Group.",
									"key": "description",
									"value": "non tempor do"
								},
								{
									"description": "A mention handle. Must be unique among channels, users and User Groups.",
									"key": "handle",
									"value": "ut"
								},
								{
									"description": "Include the number of users in each User Group.",
									"key": "include_count",
									"value": "true"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/usergroups.create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usergroups.create"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "e887e981-6e94-41bf-8c7e-a31b704ab4e3",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `usergroups:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) A name for the User Group. Must be unique among User Groups.",
									"key": "name",
									"value": "do labore"
								},
								{
									"description": "A comma separated string of encoded channel IDs for which the User Group uses as a default.",
									"key": "channels",
									"value": "e"
								},
								{
									"description": "A short description of the User Group.",
									"key": "description",
									"value": "non tempor do"
								},
								{
									"description": "A mention handle. Must be unique among channels, users and User Groups.",
									"key": "handle",
									"value": "ut"
								},
								{
									"description": "Include the number of users in each User Group.",
									"key": "include_count",
									"value": "true"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/usergroups.create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usergroups.create"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "usergroups disable",
			"id": "7f6bbdbe-a9e5-4ca3-83bc-91b6333c0048",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `usergroups:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "usergroup",
							"value": "Lorem sed laborum fugiat",
							"description": "(Required) The encoded ID of the User Group to disable."
						},
						{
							"key": "include_count",
							"value": "false",
							"description": "Include the number of users in the User Group."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/usergroups.disable",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usergroups.disable"
					]
				},
				"description": "Disable an existing User Group"
			},
			"response": [
				{
					"id": "95ac9822-928b-4266-92ac-c3c7311deb7f",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `usergroups:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The encoded ID of the User Group to disable.",
									"key": "usergroup",
									"value": "Lorem sed laborum fugiat"
								},
								{
									"description": "Include the number of users in the User Group.",
									"key": "include_count",
									"value": "false"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/usergroups.disable",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usergroups.disable"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "29d8da70-d181-46fb-bf25-a387a05f60b5",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `usergroups:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The encoded ID of the User Group to disable.",
									"key": "usergroup",
									"value": "Lorem sed laborum fugiat"
								},
								{
									"description": "Include the number of users in the User Group.",
									"key": "include_count",
									"value": "false"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/usergroups.disable",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usergroups.disable"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "usergroups enable",
			"id": "6ca7888c-f158-4c84-9d2b-02cd70baebda",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `usergroups:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "usergroup",
							"value": "in do elit ad",
							"description": "(Required) The encoded ID of the User Group to enable."
						},
						{
							"key": "include_count",
							"value": "true",
							"description": "Include the number of users in the User Group."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/usergroups.enable",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usergroups.enable"
					]
				},
				"description": "Enable a User Group"
			},
			"response": [
				{
					"id": "31ec188b-7cee-4665-a9e4-0ad70a4cf2ce",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `usergroups:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The encoded ID of the User Group to enable.",
									"key": "usergroup",
									"value": "in do elit ad"
								},
								{
									"description": "Include the number of users in the User Group.",
									"key": "include_count",
									"value": "true"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/usergroups.enable",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usergroups.enable"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "2942b0bd-9b16-4df0-8e38-bb313ac0f7c3",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `usergroups:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The encoded ID of the User Group to enable.",
									"key": "usergroup",
									"value": "in do elit ad"
								},
								{
									"description": "Include the number of users in the User Group.",
									"key": "include_count",
									"value": "true"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/usergroups.enable",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usergroups.enable"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "usergroups list",
			"id": "26a7ab62-dee3-4a7e-916e-c88fc4fa5629",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/usergroups.list?include_users=true&token=quis amet commodo&include_count=true&include_disabled=true",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usergroups.list"
					],
					"query": [
						{
							"key": "include_users",
							"value": "true",
							"description": "Include the list of users for each User Group."
						},
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "(Required) Authentication token. Requires scope: `usergroups:read`"
						},
						{
							"key": "include_count",
							"value": "true",
							"description": "Include the number of users in each User Group."
						},
						{
							"key": "include_disabled",
							"value": "true",
							"description": "Include disabled User Groups."
						}
					]
				},
				"description": "List all User Groups for a team"
			},
			"response": [
				{
					"id": "ab8596e4-c84b-4b38-80df-a779246722df",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/usergroups.list?include_users=true&token=quis amet commodo&include_count=true&include_disabled=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usergroups.list"
							],
							"query": [
								{
									"key": "include_users",
									"value": "true"
								},
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "include_count",
									"value": "true"
								},
								{
									"key": "include_disabled",
									"value": "true"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"usergroups\": [\n    {\n      \"auto_type\": \"admin\",\n      \"created_by\": \"USLACKBOT\",\n      \"date_create\": 1446598059,\n      \"date_delete\": 0,\n      \"date_update\": 1446670362,\n      \"deleted_by\": null,\n      \"description\": \"A group of all Administrators on your team.\",\n      \"handle\": \"admins\",\n      \"id\": \"S0614TZR7\",\n      \"is_external\": false,\n      \"is_usergroup\": true,\n      \"name\": \"Team Admins\",\n      \"prefs\": {\n        \"channels\": [],\n        \"groups\": []\n      },\n      \"team_id\": \"T060RNRCH\",\n      \"updated_by\": \"U060RNRCZ\",\n      \"user_count\": \"2\"\n    },\n    {\n      \"auto_type\": \"owner\",\n      \"created_by\": \"USLACKBOT\",\n      \"date_create\": 1446678371,\n      \"date_delete\": 0,\n      \"date_update\": 1446678371,\n      \"deleted_by\": null,\n      \"description\": \"A group of all Owners on your team.\",\n      \"handle\": \"owners\",\n      \"id\": \"S06158AV7\",\n      \"is_external\": false,\n      \"is_usergroup\": true,\n      \"name\": \"Team Owners\",\n      \"prefs\": {\n        \"channels\": [],\n        \"groups\": []\n      },\n      \"team_id\": \"T060RNRCH\",\n      \"updated_by\": \"USLACKBOT\",\n      \"user_count\": \"1\"\n    },\n    {\n      \"auto_type\": null,\n      \"created_by\": \"U060RNRCZ\",\n      \"date_create\": 1446746793,\n      \"date_delete\": 1446748865,\n      \"date_update\": 1446747767,\n      \"deleted_by\": null,\n      \"description\": \"Marketing gurus, PR experts and product advocates.\",\n      \"handle\": \"marketing-team\",\n      \"id\": \"S0615G0KT\",\n      \"is_external\": false,\n      \"is_usergroup\": true,\n      \"name\": \"Marketing Team\",\n      \"prefs\": {\n        \"channels\": [],\n        \"groups\": []\n      },\n      \"team_id\": \"T060RNRCH\",\n      \"updated_by\": \"U060RNRCZ\",\n      \"user_count\": \"0\"\n    }\n  ]\n}"
				},
				{
					"id": "33300bd3-267c-4d07-917c-e82472189969",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/usergroups.list?include_users=true&token=quis amet commodo&include_count=true&include_disabled=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usergroups.list"
							],
							"query": [
								{
									"key": "include_users",
									"value": "true"
								},
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "include_count",
									"value": "true"
								},
								{
									"key": "include_disabled",
									"value": "true"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "usergroups update",
			"id": "c4269ecd-2308-4b99-a1fd-91d3d841ac68",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `usergroups:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "usergroup",
							"value": "proident magna dolor U",
							"description": "(Required) The encoded ID of the User Group to update."
						},
						{
							"key": "handle",
							"value": "consequat irure Excepteur",
							"description": "A mention handle. Must be unique among channels, users and User Groups."
						},
						{
							"key": "description",
							"value": "qui voluptate in occaecat",
							"description": "A short description of the User Group."
						},
						{
							"key": "channels",
							"value": "fugiat cillum nostrud",
							"description": "A comma separated string of encoded channel IDs for which the User Group uses as a default."
						},
						{
							"key": "include_count",
							"value": "false",
							"description": "Include the number of users in the User Group."
						},
						{
							"key": "name",
							"value": "sed",
							"description": "A name for the User Group. Must be unique among User Groups."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/usergroups.update",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usergroups.update"
					]
				},
				"description": "Update an existing User Group"
			},
			"response": [
				{
					"id": "f2ec0176-83b9-46c1-bd87-d4360df4db62",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `usergroups:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The encoded ID of the User Group to update.",
									"key": "usergroup",
									"value": "proident magna dolor U"
								},
								{
									"description": "A mention handle. Must be unique among channels, users and User Groups.",
									"key": "handle",
									"value": "consequat irure Excepteur"
								},
								{
									"description": "A short description of the User Group.",
									"key": "description",
									"value": "qui voluptate in occaecat"
								},
								{
									"description": "A comma separated string of encoded channel IDs for which the User Group uses as a default.",
									"key": "channels",
									"value": "fugiat cillum nostrud"
								},
								{
									"description": "Include the number of users in the User Group.",
									"key": "include_count",
									"value": "false"
								},
								{
									"description": "A name for the User Group. Must be unique among User Groups.",
									"key": "name",
									"value": "sed"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/usergroups.update",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usergroups.update"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"usergroup\": {\n    \"auto_type\": null,\n    \"created_by\": \"U060R4BJ4\",\n    \"date_create\": 1447096577,\n    \"date_delete\": 0,\n    \"date_update\": 1447102109,\n    \"deleted_by\": null,\n    \"description\": \"Marketing gurus, PR experts and product advocates.\",\n    \"handle\": \"marketing-team\",\n    \"id\": \"S0616NG6M\",\n    \"is_external\": false,\n    \"is_usergroup\": true,\n    \"name\": \"Marketing Team\",\n    \"prefs\": {\n      \"channels\": [],\n      \"groups\": []\n    },\n    \"team_id\": \"T060R4BHN\",\n    \"updated_by\": \"U060R4BJ4\",\n    \"user_count\": 1,\n    \"users\": [\n      \"U060R4BJ4\",\n      \"U060RNRCZ\"\n    ]\n  }\n}"
				},
				{
					"id": "5e50d48e-4e50-4fa8-8a4e-b817d35e27b8",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `usergroups:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The encoded ID of the User Group to update.",
									"key": "usergroup",
									"value": "proident magna dolor U"
								},
								{
									"description": "A mention handle. Must be unique among channels, users and User Groups.",
									"key": "handle",
									"value": "consequat irure Excepteur"
								},
								{
									"description": "A short description of the User Group.",
									"key": "description",
									"value": "qui voluptate in occaecat"
								},
								{
									"description": "A comma separated string of encoded channel IDs for which the User Group uses as a default.",
									"key": "channels",
									"value": "fugiat cillum nostrud"
								},
								{
									"description": "Include the number of users in the User Group.",
									"key": "include_count",
									"value": "false"
								},
								{
									"description": "A name for the User Group. Must be unique among User Groups.",
									"key": "name",
									"value": "sed"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/usergroups.update",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usergroups.update"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "usergroups users list",
			"id": "022d016e-ed05-4c86-8a96-6dfc79b973fa",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/usergroups.users.list?token=quis amet commodo&include_disabled=true&usergroup=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usergroups.users.list"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "(Required) Authentication token. Requires scope: `usergroups:read`"
						},
						{
							"key": "include_disabled",
							"value": "true",
							"description": "Allow results that involve disabled User Groups."
						},
						{
							"key": "usergroup",
							"value": "quis amet commodo",
							"description": "(Required) The encoded ID of the User Group to update."
						}
					]
				},
				"description": "List all users in a User Group"
			},
			"response": [
				{
					"id": "b6074abd-46e6-4281-a67d-d7d143f4f293",
					"name": "Standard success response when used with a user token",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/usergroups.users.list?token=quis amet commodo&include_disabled=true&usergroup=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usergroups.users.list"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "include_disabled",
									"value": "true"
								},
								{
									"key": "usergroup",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"users\": [\n    \"U060R4BJ4\",\n    \"W123A4BC5\"\n  ]\n}"
				},
				{
					"id": "21cdf653-e5ed-40db-ba63-b1973b68c09f",
					"name": "Standard failure response when used with an invalid token",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/usergroups.users.list?token=quis amet commodo&include_disabled=true&usergroup=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usergroups.users.list"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "include_disabled",
									"value": "true"
								},
								{
									"key": "usergroup",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "usergroups users update",
			"id": "552de6fe-e9c9-44f6-826b-8fe545f8ca7e",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `usergroups:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "usergroup",
							"value": "commodo sed sunt irure",
							"description": "(Required) The encoded ID of the User Group to update."
						},
						{
							"key": "users",
							"value": "anim aute",
							"description": "(Required) A comma separated string of encoded user IDs that represent the entire list of users for the User Group."
						},
						{
							"key": "include_count",
							"value": "true",
							"description": "Include the number of users in the User Group."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/usergroups.users.update",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usergroups.users.update"
					]
				},
				"description": "Update the list of users for a User Group"
			},
			"response": [
				{
					"id": "baf20b72-c078-4940-b0a4-50c62804415c",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `usergroups:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The encoded ID of the User Group to update.",
									"key": "usergroup",
									"value": "commodo sed sunt irure"
								},
								{
									"description": "(Required) A comma separated string of encoded user IDs that represent the entire list of users for the User Group.",
									"key": "users",
									"value": "anim aute"
								},
								{
									"description": "Include the number of users in the User Group.",
									"key": "include_count",
									"value": "true"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/usergroups.users.update",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usergroups.users.update"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"usergroup\": {\n    \"auto_type\": null,\n    \"created_by\": \"U060R4BJ4\",\n    \"date_create\": 1447096577,\n    \"date_delete\": 0,\n    \"date_update\": 1447102109,\n    \"deleted_by\": null,\n    \"description\": \"Marketing gurus, PR experts and product advocates.\",\n    \"handle\": \"marketing-team\",\n    \"id\": \"S0616NG6M\",\n    \"is_external\": false,\n    \"is_usergroup\": true,\n    \"name\": \"Marketing Team\",\n    \"prefs\": {\n      \"channels\": [],\n      \"groups\": []\n    },\n    \"team_id\": \"T060R4BHN\",\n    \"updated_by\": \"U060R4BJ4\",\n    \"user_count\": 1,\n    \"users\": [\n      \"U060R4BJ4\",\n      \"U060RNRCZ\"\n    ]\n  }\n}"
				},
				{
					"id": "4be00706-f5ec-4122-b565-a5b2f7312a17",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `usergroups:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The encoded ID of the User Group to update.",
									"key": "usergroup",
									"value": "commodo sed sunt irure"
								},
								{
									"description": "(Required) A comma separated string of encoded user IDs that represent the entire list of users for the User Group.",
									"key": "users",
									"value": "anim aute"
								},
								{
									"description": "Include the number of users in the User Group.",
									"key": "include_count",
									"value": "true"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/usergroups.users.update",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usergroups.users.update"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "users conversations",
			"id": "9a647344-f412-49ab-b981-ba813b827939",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/users.conversations?token=quis amet commodo&user=quis amet commodo&types=quis amet commodo&exclude_archived=true&limit=74567849&cursor=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users.conversations"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "Authentication token. Requires scope: `conversations:read`"
						},
						{
							"key": "user",
							"value": "quis amet commodo",
							"description": "Browse conversations by a specific user ID's membership. Non-public channels are restricted to those where the calling user shares membership."
						},
						{
							"key": "types",
							"value": "quis amet commodo",
							"description": "Mix and match channel types by providing a comma-separated list of any combination of `public_channel`, `private_channel`, `mpim`, `im`"
						},
						{
							"key": "exclude_archived",
							"value": "true",
							"description": "Set to `true` to exclude archived channels from the list"
						},
						{
							"key": "limit",
							"value": "74567849",
							"description": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the list hasn't been reached. Must be an integer no larger than 1000."
						},
						{
							"key": "cursor",
							"value": "quis amet commodo",
							"description": "Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more detail."
						}
					]
				},
				"description": "List conversations the calling user may access."
			},
			"response": [
				{
					"id": "6fbf03bd-7727-45cf-bbbb-c88c1063308b",
					"name": "Typical success response with only public channels. Note how `num_members` and `is_member` are not returned like typical `conversations` objects.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users.conversations?token=quis amet commodo&user=quis amet commodo&types=quis amet commodo&exclude_archived=true&limit=74567849&cursor=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.conversations"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "user",
									"value": "quis amet commodo"
								},
								{
									"key": "types",
									"value": "quis amet commodo"
								},
								{
									"key": "exclude_archived",
									"value": "true"
								},
								{
									"key": "limit",
									"value": "74567849"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"channels\": [\n    {\n      \"created\": 1449252889,\n      \"creator\": \"U012A3CDE\",\n      \"id\": \"C012AB3CD\",\n      \"is_archived\": false,\n      \"is_channel\": true,\n      \"is_ext_shared\": false,\n      \"is_general\": true,\n      \"is_group\": false,\n      \"is_im\": false,\n      \"is_mpim\": false,\n      \"is_org_shared\": false,\n      \"is_pending_ext_shared\": false,\n      \"is_private\": false,\n      \"is_shared\": false,\n      \"name\": \"general\",\n      \"name_normalized\": \"general\",\n      \"pending_shared\": [],\n      \"previous_names\": [],\n      \"purpose\": {\n        \"creator\": \"\",\n        \"last_set\": 0,\n        \"value\": \"This channel is for team-wide communication and announcements. All team members are in this channel.\"\n      },\n      \"topic\": {\n        \"creator\": \"\",\n        \"last_set\": 0,\n        \"value\": \"Company-wide announcements and work-based matters\"\n      },\n      \"unlinked\": 0\n    },\n    {\n      \"created\": 1449252889,\n      \"creator\": \"U061F7AUR\",\n      \"id\": \"C061EG9T2\",\n      \"is_archived\": false,\n      \"is_channel\": true,\n      \"is_ext_shared\": false,\n      \"is_general\": false,\n      \"is_group\": false,\n      \"is_im\": false,\n      \"is_mpim\": false,\n      \"is_org_shared\": false,\n      \"is_pending_ext_shared\": false,\n      \"is_private\": false,\n      \"is_shared\": false,\n      \"name\": \"random\",\n      \"name_normalized\": \"random\",\n      \"pending_shared\": [],\n      \"previous_names\": [],\n      \"purpose\": {\n        \"creator\": \"\",\n        \"last_set\": 0,\n        \"value\": \"A place for non-work-related flimflam, faffing, hodge-podge or jibber-jabber you'd prefer to keep out of more focused work-related channels.\"\n      },\n      \"topic\": {\n        \"creator\": \"\",\n        \"last_set\": 0,\n        \"value\": \"Non-work banter and water cooler conversation\"\n      },\n      \"unlinked\": 0\n    }\n  ],\n  \"ok\": true,\n  \"response_metadata\": {\n    \"next_cursor\": \"dGVhbTpDMDYxRkE1UEI=\"\n  }\n}"
				},
				{
					"id": "33546eae-fb3f-475e-82d2-308826834796",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users.conversations?token=quis amet commodo&user=quis amet commodo&types=quis amet commodo&exclude_archived=true&limit=74567849&cursor=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.conversations"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "user",
									"value": "quis amet commodo"
								},
								{
									"key": "types",
									"value": "quis amet commodo"
								},
								{
									"key": "exclude_archived",
									"value": "true"
								},
								{
									"key": "limit",
									"value": "74567849"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "users delete Photo",
			"id": "6efca480-f559-486b-9629-3ea74b261e16",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "token",
							"value": "anim officia proident",
							"description": "(Required) Authentication token. Requires scope: `users.profile:write`"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/users.deletePhoto",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users.deletePhoto"
					]
				},
				"description": "Delete the user profile photo"
			},
			"response": [
				{
					"id": "c9dd7dbf-87e0-49ea-9590-43825291a5da",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `users.profile:write`",
									"key": "token",
									"value": "anim officia proident"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/users.deletePhoto",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.deletePhoto"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "55e44167-fc44-4be1-88e5-b9e7ab542d81",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `users.profile:write`",
									"key": "token",
									"value": "anim officia proident"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/users.deletePhoto",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.deletePhoto"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "users get Presence",
			"id": "d837a049-c862-405f-ad2a-2f4b1de9dc7c",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/users.getPresence?token=quis amet commodo&user=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users.getPresence"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "(Required) Authentication token. Requires scope: `users:read`"
						},
						{
							"key": "user",
							"value": "quis amet commodo",
							"description": "User to get presence info on. Defaults to the authed user."
						}
					]
				},
				"description": "Gets user presence information."
			},
			"response": [
				{
					"id": "24d1b225-2a28-4087-8361-495acb69744c",
					"name": "When requesting information for a different user, this method just returns the current presence (either `active` or `away`).",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users.getPresence?token=quis amet commodo&user=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.getPresence"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "user",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"presence\": \"active\"\n}"
				},
				{
					"id": "6c6c2014-7f4c-45fe-8970-9cefd88a8359",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users.getPresence?token=quis amet commodo&user=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.getPresence"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "user",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "users identity",
			"id": "7a9235eb-55da-46b4-80ef-416e39afb3df",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/users.identity?token=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users.identity"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "Authentication token. Requires scope: `identity.basic`"
						}
					]
				},
				"description": "Get a user's identity."
			},
			"response": [
				{
					"id": "68de4684-bee5-4673-9a67-fd5646712d45",
					"name": "You will receive at a minimum the following information:",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users.identity?token=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.identity"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"team\": {\n    \"id\": \"T0G9PQBBK\"\n  },\n  \"user\": {\n    \"id\": \"U0G9QF9C6\",\n    \"name\": \"Sonny Whether\"\n  }\n}"
				},
				{
					"id": "a635c61a-e651-47eb-9db6-80183a76684a",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users.identity?token=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.identity"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"account_inactive\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "users info",
			"id": "d341b25b-61b3-4e41-9c7c-b7e63d8d609c",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/users.info?token=quis amet commodo&include_locale=true&user=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users.info"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "(Required) Authentication token. Requires scope: `users:read`"
						},
						{
							"key": "include_locale",
							"value": "true",
							"description": "Set this to `true` to receive the locale for this user. Defaults to `false`"
						},
						{
							"key": "user",
							"value": "quis amet commodo",
							"description": "User to get info on"
						}
					]
				},
				"description": "Gets information about a user."
			},
			"response": [
				{
					"id": "ea6f2c98-a1dc-4db4-99b9-446e92b1ede0",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users.info?token=quis amet commodo&include_locale=true&user=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.info"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "include_locale",
									"value": "true"
								},
								{
									"key": "user",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"user\": {\n    \"color\": \"9f69e7\",\n    \"deleted\": false,\n    \"has_2fa\": false,\n    \"id\": \"W012A3CDE\",\n    \"is_admin\": true,\n    \"is_app_user\": false,\n    \"is_bot\": false,\n    \"is_owner\": false,\n    \"is_primary_owner\": false,\n    \"is_restricted\": false,\n    \"is_ultra_restricted\": false,\n    \"name\": \"spengler\",\n    \"profile\": {\n      \"avatar_hash\": \"ge3b51ca72de\",\n      \"display_name\": \"spengler\",\n      \"display_name_normalized\": \"spengler\",\n      \"email\": \"spengler@ghostbusters.example.com\",\n      \"image_192\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n      \"image_24\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n      \"image_32\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n      \"image_48\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n      \"image_512\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n      \"image_72\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n      \"image_original\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n      \"real_name\": \"Egon Spengler\",\n      \"real_name_normalized\": \"Egon Spengler\",\n      \"status_emoji\": \":books:\",\n      \"status_text\": \"Print is dead\",\n      \"team\": \"T012AB3C4\"\n    },\n    \"real_name\": \"Egon Spengler\",\n    \"team_id\": \"T012AB3C4\",\n    \"tz\": \"America/Los_Angeles\",\n    \"tz_label\": \"Pacific Daylight Time\",\n    \"tz_offset\": -25200,\n    \"updated\": 1502138686\n  }\n}"
				},
				{
					"id": "3aeffc2e-9539-43af-b693-716f5ec3f3ac",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users.info?token=quis amet commodo&include_locale=true&user=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.info"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "include_locale",
									"value": "true"
								},
								{
									"key": "user",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"user_not_found\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "users list",
			"id": "4691f001-53e9-4913-84f6-39238163c72f",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/users.list?token=quis amet commodo&limit=74567849&cursor=quis amet commodo&include_locale=true",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users.list"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "Authentication token. Requires scope: `users:read`"
						},
						{
							"key": "limit",
							"value": "74567849",
							"description": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the users list hasn't been reached. Providing no `limit` value will result in Slack attempting to deliver you the entire result set. If the collection is too large you may experience `limit_required` or HTTP 500 errors."
						},
						{
							"key": "cursor",
							"value": "quis amet commodo",
							"description": "Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more detail."
						},
						{
							"key": "include_locale",
							"value": "true",
							"description": "Set this to `true` to receive the locale for users. Defaults to `false`"
						}
					]
				},
				"description": "Lists all users in a Slack team."
			},
			"response": [
				{
					"id": "b34f5ab0-0bcc-4667-a817-b15e43cd2567",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users.list?token=quis amet commodo&limit=74567849&cursor=quis amet commodo&include_locale=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.list"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								},
								{
									"key": "include_locale",
									"value": "true"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"cache_ts\": 1498777272,\n  \"members\": [\n    {\n      \"color\": \"9f69e7\",\n      \"deleted\": false,\n      \"has_2fa\": false,\n      \"id\": \"W012A3CDE\",\n      \"is_admin\": true,\n      \"is_app_user\": false,\n      \"is_bot\": false,\n      \"is_owner\": false,\n      \"is_primary_owner\": false,\n      \"is_restricted\": false,\n      \"is_ultra_restricted\": false,\n      \"name\": \"spengler\",\n      \"profile\": {\n        \"avatar_hash\": \"ge3b51ca72de\",\n        \"display_name\": \"spengler\",\n        \"display_name_normalized\": \"spengler\",\n        \"email\": \"spengler@ghostbusters.example.com\",\n        \"image_192\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n        \"image_24\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n        \"image_32\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n        \"image_48\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n        \"image_512\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n        \"image_72\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n        \"real_name\": \"Egon Spengler\",\n        \"real_name_normalized\": \"Egon Spengler\",\n        \"status_emoji\": \":books:\",\n        \"status_text\": \"Print is dead\",\n        \"team\": \"T012AB3C4\"\n      },\n      \"real_name\": \"spengler\",\n      \"team_id\": \"T012AB3C4\",\n      \"tz\": \"America/Los_Angeles\",\n      \"tz_label\": \"Pacific Daylight Time\",\n      \"tz_offset\": -25200,\n      \"updated\": 1502138686\n    },\n    {\n      \"color\": \"9f69e7\",\n      \"deleted\": false,\n      \"has_2fa\": false,\n      \"id\": \"W07QCRPA4\",\n      \"is_admin\": true,\n      \"is_bot\": false,\n      \"is_owner\": false,\n      \"is_primary_owner\": false,\n      \"is_restricted\": false,\n      \"is_ultra_restricted\": false,\n      \"name\": \"glinda\",\n      \"profile\": {\n        \"avatar_hash\": \"8fbdd10b41c6\",\n        \"display_name\": \"Glinda the Fairly Good\",\n        \"display_name_normalized\": \"Glinda the Fairly Good\",\n        \"email\": \"glenda@south.oz.coven\",\n        \"first_name\": \"Glinda\",\n        \"image_1024\": \"https://a.slack-edge.com...png\",\n        \"image_192\": \"https://a.slack-edge.com...png\",\n        \"image_24\": \"https://a.slack-edge.com...png\",\n        \"image_32\": \"https://a.slack-edge.com...png\",\n        \"image_48\": \"https://a.slack-edge.com...png\",\n        \"image_512\": \"https://a.slack-edge.com...png\",\n        \"image_72\": \"https://a.slack-edge.com...png\",\n        \"image_original\": \"https://a.slack-edge.com...png\",\n        \"last_name\": \"Southgood\",\n        \"phone\": \"\",\n        \"real_name\": \"Glinda Southgood\",\n        \"real_name_normalized\": \"Glinda Southgood\",\n        \"skype\": \"\",\n        \"title\": \"Glinda the Good\"\n      },\n      \"real_name\": \"Glinda Southgood\",\n      \"team_id\": \"T0G9PQBBK\",\n      \"tz\": \"America/Los_Angeles\",\n      \"tz_label\": \"Pacific Daylight Time\",\n      \"tz_offset\": -25200,\n      \"updated\": 1480527098\n    }\n  ],\n  \"ok\": true,\n  \"response_metadata\": {\n    \"next_cursor\": \"dXNlcjpVMEc5V0ZYTlo=\"\n  }\n}"
				},
				{
					"id": "bd8dc609-7007-4f9b-b3b7-f1427043963e",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users.list?token=quis amet commodo&limit=74567849&cursor=quis amet commodo&include_locale=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.list"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "limit",
									"value": "74567849"
								},
								{
									"key": "cursor",
									"value": "quis amet commodo"
								},
								{
									"key": "include_locale",
									"value": "true"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_cursor\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "users lookup By Email",
			"id": "27c5a201-a868-4243-a655-af2b79374a12",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/users.lookupByEmail?token=quis amet commodo&email=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users.lookupByEmail"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "(Required) Authentication token. Requires scope: `users:read.email`"
						},
						{
							"key": "email",
							"value": "quis amet commodo",
							"description": "(Required) An email address belonging to a user in the workspace"
						}
					]
				},
				"description": "Find a user with an email address."
			},
			"response": [
				{
					"id": "f2b4fa6e-a438-4bd9-8539-16bee74184ec",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users.lookupByEmail?token=quis amet commodo&email=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.lookupByEmail"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "email",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"user\": {\n    \"color\": \"9f69e7\",\n    \"deleted\": false,\n    \"has_2fa\": false,\n    \"id\": \"W012A3CDE\",\n    \"is_admin\": true,\n    \"is_app_user\": false,\n    \"is_bot\": false,\n    \"is_owner\": false,\n    \"is_primary_owner\": false,\n    \"is_restricted\": false,\n    \"is_ultra_restricted\": false,\n    \"name\": \"spengler\",\n    \"profile\": {\n      \"avatar_hash\": \"ge3b51ca72de\",\n      \"display_name\": \"spengler\",\n      \"display_name_normalized\": \"spengler\",\n      \"email\": \"spengler@ghostbusters.example.com\",\n      \"image_192\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n      \"image_24\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n      \"image_32\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n      \"image_48\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n      \"image_512\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n      \"image_72\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n      \"real_name\": \"Egon Spengler\",\n      \"real_name_normalized\": \"Egon Spengler\",\n      \"status_emoji\": \":books:\",\n      \"status_text\": \"Print is dead\",\n      \"team\": \"T012AB3C4\"\n    },\n    \"real_name\": \"Egon Spengler\",\n    \"team_id\": \"T012AB3C4\",\n    \"tz\": \"America/Los_Angeles\",\n    \"tz_label\": \"Pacific Daylight Time\",\n    \"tz_offset\": -25200,\n    \"updated\": 1502138686\n  }\n}"
				},
				{
					"id": "634aca46-daaf-4b21-8a3e-9e0d43254659",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users.lookupByEmail?token=quis amet commodo&email=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.lookupByEmail"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "email",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"users_not_found\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "users profile get",
			"id": "612a895f-684b-4490-b2f1-247c21ad0844",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/users.profile.get?token=quis amet commodo&include_labels=true&user=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users.profile.get"
					],
					"query": [
						{
							"key": "token",
							"value": "quis amet commodo",
							"description": "(Required) Authentication token. Requires scope: `users.profile:read`"
						},
						{
							"key": "include_labels",
							"value": "true",
							"description": "Include labels for each ID in custom profile fields"
						},
						{
							"key": "user",
							"value": "quis amet commodo",
							"description": "User to retrieve profile info for"
						}
					]
				},
				"description": "Retrieves a user's profile information."
			},
			"response": [
				{
					"id": "3301a30f-c4a0-422c-b479-1224ec00494b",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users.profile.get?token=quis amet commodo&include_labels=true&user=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.profile.get"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "include_labels",
									"value": "true"
								},
								{
									"key": "user",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"profile\": {\n    \"avatar_hash\": \"ge3b51ca72de\",\n    \"display_name\": \"spengler\",\n    \"display_name_normalized\": \"spengler\",\n    \"email\": \"spengler@ghostbusters.example.com\",\n    \"image_192\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n    \"image_24\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n    \"image_32\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n    \"image_48\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n    \"image_512\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n    \"image_72\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n    \"image_original\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n    \"real_name\": \"Egon Spengler\",\n    \"real_name_normalized\": \"Egon Spengler\",\n    \"status_emoji\": \":books:\",\n    \"status_expiration\": 0,\n    \"status_text\": \"Print is dead\",\n    \"team\": \"T012AB3C4\"\n  }\n}"
				},
				{
					"id": "11c2efe6-df14-429b-9112-0936edd7a1df",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users.profile.get?token=quis amet commodo&include_labels=true&user=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.profile.get"
							],
							"query": [
								{
									"key": "token",
									"value": "quis amet commodo"
								},
								{
									"key": "include_labels",
									"value": "true"
								},
								{
									"key": "user",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"user_not_found\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "users profile set",
			"id": "b70b1fae-bc80-44ca-afc8-d638964baf1e",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `users.profile:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "name",
							"value": "aliquip aute aliqua",
							"description": "Name of a single key to set. Usable only if `profile` is not passed."
						},
						{
							"key": "profile",
							"value": "consectetur es",
							"description": "Collection of key:value pairs presented as a URL-encoded JSON hash. At most 50 fields may be set. Each field name is limited to 255 characters."
						},
						{
							"key": "user",
							"value": "culpa aute Duis sed",
							"description": "ID of user to change. This argument may only be specified by team admins on paid teams."
						},
						{
							"key": "value",
							"value": "officia ex Ut amet",
							"description": "Value to set a single key to. Usable only if `profile` is not passed."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/users.profile.set",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users.profile.set"
					]
				},
				"description": "Set the profile information for a user."
			},
			"response": [
				{
					"id": "f55d7b02-d23c-44ec-bfc2-b2868466470c",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `users.profile:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Name of a single key to set. Usable only if `profile` is not passed.",
									"key": "name",
									"value": "aliquip aute aliqua"
								},
								{
									"description": "Collection of key:value pairs presented as a URL-encoded JSON hash. At most 50 fields may be set. Each field name is limited to 255 characters.",
									"key": "profile",
									"value": "consectetur es"
								},
								{
									"description": "ID of user to change. This argument may only be specified by team admins on paid teams.",
									"key": "user",
									"value": "culpa aute Duis sed"
								},
								{
									"description": "Value to set a single key to. Usable only if `profile` is not passed.",
									"key": "value",
									"value": "officia ex Ut amet"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/users.profile.set",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.profile.set"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"profile\": {\n    \"avatar_hash\": \"ge3b51ca72de\",\n    \"display_name\": \"spengler\",\n    \"display_name_normalized\": \"spengler\",\n    \"email\": \"spengler@ghostbusters.example.com\",\n    \"image_192\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n    \"image_24\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n    \"image_32\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n    \"image_48\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n    \"image_512\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n    \"image_72\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n    \"real_name\": \"Egon Spengler\",\n    \"real_name_normalized\": \"Egon Spengler\",\n    \"status_emoji\": \":books:\",\n    \"status_expiration\": 0,\n    \"status_text\": \"Print is dead\",\n    \"team\": \"T012AB3C4\"\n  }\n}"
				},
				{
					"id": "8195dd81-0e11-4a7e-9465-174162f4354d",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `users.profile:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Name of a single key to set. Usable only if `profile` is not passed.",
									"key": "name",
									"value": "aliquip aute aliqua"
								},
								{
									"description": "Collection of key:value pairs presented as a URL-encoded JSON hash. At most 50 fields may be set. Each field name is limited to 255 characters.",
									"key": "profile",
									"value": "consectetur es"
								},
								{
									"description": "ID of user to change. This argument may only be specified by team admins on paid teams.",
									"key": "user",
									"value": "culpa aute Duis sed"
								},
								{
									"description": "Value to set a single key to. Usable only if `profile` is not passed.",
									"key": "value",
									"value": "officia ex Ut amet"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/users.profile.set",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.profile.set"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_profile\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "users set Active",
			"id": "12af086b-32f0-4b3b-a951-9a302cbb65f8",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `users:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/users.setActive",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users.setActive"
					]
				},
				"description": "Marked a user as active. Deprecated and non-functional."
			},
			"response": [
				{
					"id": "cd926bf3-c6fc-433a-b9d6-ce28ed2e072a",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `users:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users.setActive",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.setActive"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "f90fdd20-b64d-4aab-8819-e0e0755315db",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `users:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users.setActive",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.setActive"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "users set Photo",
			"id": "1f7436bd-8a8a-4ec9-b169-1921d94b6676",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "token",
							"value": "Duis esse",
							"description": "(Required) Authentication token. Requires scope: `users.profile:write`"
						},
						{
							"key": "crop_w",
							"value": "ullamco consectetur tempor sit",
							"description": "Width/height of crop box (always square)"
						},
						{
							"key": "crop_x",
							"value": "occaecat in",
							"description": "X coordinate of top-left corner of crop box"
						},
						{
							"key": "crop_y",
							"value": "mollit",
							"description": "Y coordinate of top-left corner of crop box"
						},
						{
							"key": "image",
							"value": "ut pariatur ad dolore",
							"description": "File contents via `multipart/form-data`."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/users.setPhoto",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users.setPhoto"
					]
				},
				"description": "Set the user profile photo"
			},
			"response": [
				{
					"id": "94eb0d80-af78-40fb-bd7f-2065db819fa4",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `users.profile:write`",
									"key": "token",
									"value": "Duis esse"
								},
								{
									"description": "Width/height of crop box (always square)",
									"key": "crop_w",
									"value": "ullamco consectetur tempor sit"
								},
								{
									"description": "X coordinate of top-left corner of crop box",
									"key": "crop_x",
									"value": "occaecat in"
								},
								{
									"description": "Y coordinate of top-left corner of crop box",
									"key": "crop_y",
									"value": "mollit"
								},
								{
									"description": "File contents via `multipart/form-data`.",
									"key": "image",
									"value": "ut pariatur ad dolore"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/users.setPhoto",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.setPhoto"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "3657d7d5-78ad-474f-88fe-96d5aec798d2",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `users.profile:write`",
									"key": "token",
									"value": "Duis esse"
								},
								{
									"description": "Width/height of crop box (always square)",
									"key": "crop_w",
									"value": "ullamco consectetur tempor sit"
								},
								{
									"description": "X coordinate of top-left corner of crop box",
									"key": "crop_x",
									"value": "occaecat in"
								},
								{
									"description": "Y coordinate of top-left corner of crop box",
									"key": "crop_y",
									"value": "mollit"
								},
								{
									"description": "File contents via `multipart/form-data`.",
									"key": "image",
									"value": "ut pariatur ad dolore"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/users.setPhoto",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.setPhoto"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "users set Presence",
			"id": "4c7382a8-4069-4858-9a41-6b58b6b9041f",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `users:write`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "presence",
							"value": "Lorem dolore",
							"description": "(Required) Either `auto` or `away`"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/users.setPresence",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users.setPresence"
					]
				},
				"description": "Manually sets user presence."
			},
			"response": [
				{
					"id": "a95368b3-a888-47d0-9b3f-c2e0b4f3b1c8",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `users:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Either `auto` or `away`",
									"key": "presence",
									"value": "Lorem dolore"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/users.setPresence",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.setPresence"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "84a91f79-bda8-433d-80db-fb14e9a85a3b",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `users:write`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Either `auto` or `away`",
									"key": "presence",
									"value": "Lorem dolore"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/users.setPresence",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.setPresence"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "views open",
			"id": "80037d82-b78c-4a7d-bb1e-ffe31c322ad0",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `none`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/views.open?trigger_id=quis amet commodo&view=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"views.open"
					],
					"query": [
						{
							"key": "trigger_id",
							"value": "quis amet commodo",
							"description": "(Required) Exchange a trigger to post to the user."
						},
						{
							"key": "view",
							"value": "quis amet commodo",
							"description": "(Required) A [view payload](/reference/surfaces/views). This must be a JSON-encoded string."
						}
					]
				},
				"description": "Open a view for a user."
			},
			"response": [
				{
					"id": "3e0671fa-e908-40f5-95b9-14f13bec4263",
					"name": "Typical success response includes the opened view payload.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `none`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/views.open?trigger_id=quis amet commodo&view=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"views.open"
							],
							"query": [
								{
									"key": "trigger_id",
									"value": "quis amet commodo"
								},
								{
									"key": "view",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"view\": {\n    \"app_id\": \"AA4928AQ\",\n    \"blocks\": [\n      {\n        \"block_id\": \"a_block_id\",\n        \"element\": {\n          \"action_id\": \"an_action_id\",\n          \"type\": \"plain_text_input\"\n        },\n        \"label\": {\n          \"emoji\": true,\n          \"text\": \"A simple label\",\n          \"type\": \"plain_text\"\n        },\n        \"optional\": false,\n        \"type\": \"input\"\n      }\n    ],\n    \"bot_id\": \"BA13894H\",\n    \"callback_id\": \"identify_your_modals\",\n    \"clear_on_close\": false,\n    \"external_id\": \"\",\n    \"hash\": \"156772938.1827394\",\n    \"id\": \"VMHU10V25\",\n    \"notify_on_close\": false,\n    \"private_metadata\": \"Shh it is a secret\",\n    \"root_view_id\": \"VMHU10V25\",\n    \"state\": {\n      \"values\": {}\n    },\n    \"submit\": {\n      \"text\": \"Create\",\n      \"type\": \"plain_text\"\n    },\n    \"team_id\": \"T8N4K1JN\",\n    \"title\": {\n      \"text\": \"Quite a plain modal\",\n      \"type\": \"plain_text\"\n    },\n    \"type\": \"modal\"\n  }\n}"
				},
				{
					"id": "a21aa916-b506-42f1-b528-cda888362267",
					"name": "Typical error response, before getting to any possible validation errors.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `none`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/views.open?trigger_id=quis amet commodo&view=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"views.open"
							],
							"query": [
								{
									"key": "trigger_id",
									"value": "quis amet commodo"
								},
								{
									"key": "view",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_arguments\",\n  \"ok\": false,\n  \"response_metadata\": {\n    \"messages\": [\n      \"invalid `trigger_id`\"\n    ]\n  }\n}"
				}
			]
		},
		{
			"name": "views publish",
			"id": "c428977e-ddcb-4c02-90c5-99d0f6cbe388",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `none`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/views.publish?user_id=quis amet commodo&view=quis amet commodo&hash=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"views.publish"
					],
					"query": [
						{
							"key": "user_id",
							"value": "quis amet commodo",
							"description": "(Required) `id` of the user you want publish a view to."
						},
						{
							"key": "view",
							"value": "quis amet commodo",
							"description": "(Required) A [view payload](/reference/surfaces/views). This must be a JSON-encoded string."
						},
						{
							"key": "hash",
							"value": "quis amet commodo",
							"description": "A string that represents view state to protect against possible race conditions."
						}
					]
				},
				"description": "Publish a static view for a User."
			},
			"response": [
				{
					"id": "b490af1b-d1da-4feb-b14e-32a5b4696743",
					"name": "Typical success response includes the published view payload.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `none`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/views.publish?user_id=quis amet commodo&view=quis amet commodo&hash=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"views.publish"
							],
							"query": [
								{
									"key": "user_id",
									"value": "quis amet commodo"
								},
								{
									"key": "view",
									"value": "quis amet commodo"
								},
								{
									"key": "hash",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"view\": {\n    \"app_id\": \"AA4928AQ\",\n    \"blocks\": [\n      {\n        \"block_id\": \"2WGp9\",\n        \"text\": {\n          \"text\": \"A simple section with some sample sentence.\",\n          \"type\": \"mrkdwn\",\n          \"verbatim\": false\n        },\n        \"type\": \"section\"\n      }\n    ],\n    \"bot_id\": \"BA13894H\",\n    \"callback_id\": \"identify_your_home_tab\",\n    \"clear_on_close\": false,\n    \"close\": null,\n    \"external_id\": \"\",\n    \"hash\": \"156772938.1827394\",\n    \"id\": \"VMHU10V25\",\n    \"notify_on_close\": false,\n    \"previous_view_id\": null,\n    \"private_metadata\": \"Shh it is a secret\",\n    \"root_view_id\": \"VMHU10V25\",\n    \"state\": {\n      \"values\": {}\n    },\n    \"submit\": null,\n    \"team_id\": \"T8N4K1JN\",\n    \"type\": \"home\"\n  }\n}"
				},
				{
					"id": "1ea2c088-c933-4348-bfd6-efcb7d34ccd4",
					"name": "Typical error response, before getting to any possible validation errors.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `none`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/views.publish?user_id=quis amet commodo&view=quis amet commodo&hash=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"views.publish"
							],
							"query": [
								{
									"key": "user_id",
									"value": "quis amet commodo"
								},
								{
									"key": "view",
									"value": "quis amet commodo"
								},
								{
									"key": "hash",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_arguments\",\n  \"ok\": false,\n  \"response_metadata\": {\n    \"messages\": [\n      \"invalid `user_id`\"\n    ]\n  }\n}"
				}
			]
		},
		{
			"name": "views push",
			"id": "20f8cebd-32e8-4a9c-a7b1-866375e29f74",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `none`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/views.push?trigger_id=quis amet commodo&view=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"views.push"
					],
					"query": [
						{
							"key": "trigger_id",
							"value": "quis amet commodo",
							"description": "(Required) Exchange a trigger to post to the user."
						},
						{
							"key": "view",
							"value": "quis amet commodo",
							"description": "(Required) A [view payload](/reference/surfaces/views). This must be a JSON-encoded string."
						}
					]
				},
				"description": "Push a view onto the stack of a root view."
			},
			"response": [
				{
					"id": "4e620a66-4c11-401c-be9a-7c31b83da43c",
					"name": "Typical success response includes the pushed view payload.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `none`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/views.push?trigger_id=quis amet commodo&view=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"views.push"
							],
							"query": [
								{
									"key": "trigger_id",
									"value": "quis amet commodo"
								},
								{
									"key": "view",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"view\": {\n    \"app_id\": \"AAD3351BQ\",\n    \"blocks\": [\n      {\n        \"block_id\": \"edit_details\",\n        \"element\": {\n          \"action_id\": \"detail_input\",\n          \"type\": \"plain_text_input\"\n        },\n        \"label\": {\n          \"text\": \"Edit details\",\n          \"type\": \"plain_text\"\n        },\n        \"type\": \"input\"\n      }\n    ],\n    \"bot_id\": \"BADF7A34H\",\n    \"callback_id\": \"view_4\",\n    \"clear_on_close\": true,\n    \"close\": {\n      \"emoji\": true,\n      \"text\": \"Back\",\n      \"type\": \"plain_text\"\n    },\n    \"external_id\": \"\",\n    \"hash\": \"1569362015.55b5e41b\",\n    \"id\": \"VNM522E2U\",\n    \"notify_on_close\": false,\n    \"previous_view_id\": null,\n    \"private_metadata\": \"\",\n    \"root_view_id\": \"VNN729E3U\",\n    \"state\": {\n      \"values\": {}\n    },\n    \"submit\": {\n      \"emoji\": true,\n      \"text\": \"Save\",\n      \"type\": \"plain_text\"\n    },\n    \"team_id\": \"T9M4RL1JM\",\n    \"title\": {\n      \"emoji\": true,\n      \"text\": \"Pushed Modal\",\n      \"type\": \"plain_text\"\n    },\n    \"type\": \"modal\"\n  }\n}"
				},
				{
					"id": "2daf2c97-e019-47ff-a411-d56da353b051",
					"name": "Typical error response.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `none`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/views.push?trigger_id=quis amet commodo&view=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"views.push"
							],
							"query": [
								{
									"key": "trigger_id",
									"value": "quis amet commodo"
								},
								{
									"key": "view",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_arguments\",\n  \"ok\": false,\n  \"response_metadata\": {\n    \"messages\": [\n      \"missing required field: title\"\n    ]\n  }\n}"
				}
			]
		},
		{
			"name": "views update",
			"id": "15cbd7f6-d67a-4a6b-a880-e4afc995dd36",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `none`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/views.update?view_id=quis amet commodo&external_id=quis amet commodo&view=quis amet commodo&hash=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"views.update"
					],
					"query": [
						{
							"key": "view_id",
							"value": "quis amet commodo",
							"description": "A unique identifier of the view to be updated. Either `view_id` or `external_id` is required."
						},
						{
							"key": "external_id",
							"value": "quis amet commodo",
							"description": "A unique identifier of the view set by the developer. Must be unique for all views on a team. Max length of 255 characters. Either `view_id` or `external_id` is required."
						},
						{
							"key": "view",
							"value": "quis amet commodo",
							"description": "A [view object](/reference/surfaces/views). This must be a JSON-encoded string."
						},
						{
							"key": "hash",
							"value": "quis amet commodo",
							"description": "A string that represents view state to protect against possible race conditions."
						}
					]
				},
				"description": "Update an existing view."
			},
			"response": [
				{
					"id": "694ffcea-f273-4822-9389-e5ec611fe62d",
					"name": "Typical success response includes the updated view payload.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `none`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/views.update?view_id=quis amet commodo&external_id=quis amet commodo&view=quis amet commodo&hash=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"views.update"
							],
							"query": [
								{
									"key": "view_id",
									"value": "quis amet commodo"
								},
								{
									"key": "external_id",
									"value": "quis amet commodo"
								},
								{
									"key": "view",
									"value": "quis amet commodo"
								},
								{
									"key": "hash",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"view\": {\n    \"app_id\": \"AAD3351BQ\",\n    \"blocks\": [\n      {\n        \"accessory\": {\n          \"action_id\": \"button_4\",\n          \"text\": {\n            \"text\": \"Click me\",\n            \"type\": \"plain_text\"\n          },\n          \"type\": \"button\"\n        },\n        \"block_id\": \"s_block\",\n        \"text\": {\n          \"emoji\": true,\n          \"text\": \"I am but an updated modal\",\n          \"type\": \"plain_text\"\n        },\n        \"type\": \"section\"\n      }\n    ],\n    \"bot_id\": \"BADF7A34H\",\n    \"callback_id\": \"view_2\",\n    \"clear_on_close\": true,\n    \"close\": {\n      \"emoji\": true,\n      \"text\": \"Close\",\n      \"type\": \"plain_text\"\n    },\n    \"external_id\": \"\",\n    \"hash\": \"1569262015.55b5e41b\",\n    \"id\": \"VNM522E2U\",\n    \"notify_on_close\": false,\n    \"previous_view_id\": null,\n    \"private_metadata\": \"\",\n    \"root_view_id\": \"VNN729E3U\",\n    \"state\": {\n      \"values\": {}\n    },\n    \"submit\": null,\n    \"team_id\": \"T9M4RL1JM\",\n    \"title\": {\n      \"emoji\": true,\n      \"text\": \"Updated Modal\",\n      \"type\": \"plain_text\"\n    },\n    \"type\": \"modal\"\n  }\n}"
				},
				{
					"id": "f2e8382d-9722-4efa-841a-f7ee73edf32f",
					"name": "Typical error response.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `none`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/views.update?view_id=quis amet commodo&external_id=quis amet commodo&view=quis amet commodo&hash=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"views.update"
							],
							"query": [
								{
									"key": "view_id",
									"value": "quis amet commodo"
								},
								{
									"key": "external_id",
									"value": "quis amet commodo"
								},
								{
									"key": "view",
									"value": "quis amet commodo"
								},
								{
									"key": "hash",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"not_found\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "workflows step Completed",
			"id": "ef988fb2-840a-4756-b1da-67f48d41ca0b",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `workflow.steps:execute`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/workflows.stepCompleted?workflow_step_execute_id=quis amet commodo&outputs=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"workflows.stepCompleted"
					],
					"query": [
						{
							"key": "workflow_step_execute_id",
							"value": "quis amet commodo",
							"description": "(Required) Context identifier that maps to the correct workflow step execution."
						},
						{
							"key": "outputs",
							"value": "quis amet commodo",
							"description": "Key-value object of outputs from your step. Keys of this object reflect the configured `key` properties of your [`outputs`](/reference/workflows/workflow_step#output) array from your `workflow_step` object."
						}
					]
				},
				"description": "Indicate that an app's step in a workflow completed execution."
			},
			"response": [
				{
					"id": "a891df72-8368-40bf-8a33-bda3ed8f4dbb",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `workflow.steps:execute`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/workflows.stepCompleted?workflow_step_execute_id=quis amet commodo&outputs=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workflows.stepCompleted"
							],
							"query": [
								{
									"key": "workflow_step_execute_id",
									"value": "quis amet commodo"
								},
								{
									"key": "outputs",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "4aa36b7a-8097-49dc-9828-b4678b6374e7",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `workflow.steps:execute`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/workflows.stepCompleted?workflow_step_execute_id=quis amet commodo&outputs=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workflows.stepCompleted"
							],
							"query": [
								{
									"key": "workflow_step_execute_id",
									"value": "quis amet commodo"
								},
								{
									"key": "outputs",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "workflows step Failed",
			"id": "6a146890-6cc3-459f-bbbd-30e2b7ea3f12",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `workflow.steps:execute`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/workflows.stepFailed?workflow_step_execute_id=quis amet commodo&error=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"workflows.stepFailed"
					],
					"query": [
						{
							"key": "workflow_step_execute_id",
							"value": "quis amet commodo",
							"description": "(Required) Context identifier that maps to the correct workflow step execution."
						},
						{
							"key": "error",
							"value": "quis amet commodo",
							"description": "(Required) A JSON-based object with a `message` property that should contain a human readable error message."
						}
					]
				},
				"description": "Indicate that an app's step in a workflow failed to execute."
			},
			"response": [
				{
					"id": "0c1a6752-41e9-4bde-9815-f87afbc05506",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `workflow.steps:execute`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/workflows.stepFailed?workflow_step_execute_id=quis amet commodo&error=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workflows.stepFailed"
							],
							"query": [
								{
									"key": "workflow_step_execute_id",
									"value": "quis amet commodo"
								},
								{
									"key": "error",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "295ee5e6-e817-41f0-ad7f-e6070dcfdf8c",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `workflow.steps:execute`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/workflows.stepFailed?workflow_step_execute_id=quis amet commodo&error=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workflows.stepFailed"
							],
							"query": [
								{
									"key": "workflow_step_execute_id",
									"value": "quis amet commodo"
								},
								{
									"key": "error",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "workflows update Step",
			"id": "d1b5dff0-301c-4940-bca6-147643abf181",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `workflow.steps:execute`",
						"key": "token",
						"value": "quis amet commodo"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/workflows.updateStep?workflow_step_edit_id=quis amet commodo&inputs=quis amet commodo&outputs=quis amet commodo&step_name=quis amet commodo&step_image_url=quis amet commodo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"workflows.updateStep"
					],
					"query": [
						{
							"key": "workflow_step_edit_id",
							"value": "quis amet commodo",
							"description": "(Required) A context identifier provided with `view_submission` payloads used to call back to `workflows.updateStep`."
						},
						{
							"key": "inputs",
							"value": "quis amet commodo",
							"description": "A JSON key-value map of inputs required from a user during configuration. This is the data your app expects to receive when the workflow step starts. **Please note**: the embedded variable format is set and replaced by the workflow system. You cannot create custom variables that will be replaced at runtime. [Read more about variables in workflow steps here](/workflows/steps#variables)."
						},
						{
							"key": "outputs",
							"value": "quis amet commodo",
							"description": "An JSON array of output objects used during step execution. This is the data your app agrees to provide when your workflow step was executed."
						},
						{
							"key": "step_name",
							"value": "quis amet commodo",
							"description": "An optional field that can be used to override the step name that is shown in the Workflow Builder."
						},
						{
							"key": "step_image_url",
							"value": "quis amet commodo",
							"description": "An optional field that can be used to override app image that is shown in the Workflow Builder."
						}
					]
				},
				"description": "Update the configuration for a workflow extension step."
			},
			"response": [
				{
					"id": "d6f4175f-b52a-4e1d-b173-f524fbe7ad30",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `workflow.steps:execute`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/workflows.updateStep?workflow_step_edit_id=quis amet commodo&inputs=quis amet commodo&outputs=quis amet commodo&step_name=quis amet commodo&step_image_url=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workflows.updateStep"
							],
							"query": [
								{
									"key": "workflow_step_edit_id",
									"value": "quis amet commodo"
								},
								{
									"key": "inputs",
									"value": "quis amet commodo"
								},
								{
									"key": "outputs",
									"value": "quis amet commodo"
								},
								{
									"key": "step_name",
									"value": "quis amet commodo"
								},
								{
									"key": "step_image_url",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "568bbf4b-ca52-4c89-b9a3-0101b49f10e4",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `workflow.steps:execute`",
								"key": "token",
								"value": "quis amet commodo"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/workflows.updateStep?workflow_step_edit_id=quis amet commodo&inputs=quis amet commodo&outputs=quis amet commodo&step_name=quis amet commodo&step_image_url=quis amet commodo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workflows.updateStep"
							],
							"query": [
								{
									"key": "workflow_step_edit_id",
									"value": "quis amet commodo"
								},
								{
									"key": "inputs",
									"value": "quis amet commodo"
								},
								{
									"key": "outputs",
									"value": "quis amet commodo"
								},
								{
									"key": "step_name",
									"value": "quis amet commodo"
								},
								{
									"key": "step_image_url",
									"value": "quis amet commodo"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		}
	],
	"variable": [
		{
			"id": "d369f5cd-fd9f-482d-a12c-a2709c22923e",
			"key": "baseUrl",
			"value": "https://slack.com/api",
			"type": "string"
		}
	]
}