{
	"info": {
		"_postman_id": "a2e01ea4-961a-46e7-a019-7d99f5cd2764",
		"name": "Slack Web API",
		"description": "One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.\n\nContact Support:\n Name: Slack developer relations",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "512601-a2e01ea4-961a-46e7-a019-7d99f5cd2764"
	},
	"item": [
		{
			"name": "admin apps approve",
			"id": "b9417758-82f7-4b06-8719-3183ac65598a",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.apps:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "app_id",
							"value": "id irure sit dolor",
							"description": "The id of the app to approve."
						},
						{
							"key": "request_id",
							"value": "ullamco eiusmod id qui quis",
							"description": "The id of the request to approve."
						},
						{
							"key": "team_id",
							"value": "labore sint"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.apps.approve",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.apps.approve"
					]
				},
				"description": "Approve an app for installation on a workspace."
			},
			"response": [
				{
					"id": "51f30b4c-a273-4b96-bf7a-764bda46a143",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.apps:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "The id of the app to approve.",
									"key": "app_id",
									"value": "id irure sit dolor"
								},
								{
									"description": "The id of the request to approve.",
									"key": "request_id",
									"value": "ullamco eiusmod id qui quis"
								},
								{
									"key": "team_id",
									"value": "labore sint"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.apps.approve",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.apps.approve"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "7459d4b9-dba7-4e30-a55f-83bdd227847a",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.apps:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "The id of the app to approve.",
									"key": "app_id",
									"value": "id irure sit dolor"
								},
								{
									"description": "The id of the request to approve.",
									"key": "request_id",
									"value": "ullamco eiusmod id qui quis"
								},
								{
									"key": "team_id",
									"value": "labore sint"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.apps.approve",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.apps.approve"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin apps approved list",
			"id": "ab522ff5-7aba-41b1-b685-ee48da456cd6",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/admin.apps.approved.list?token=amet&limit=-60142516&cursor=amet&team_id=amet&enterprise_id=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.apps.approved.list"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "(Required) Authentication token. Requires scope: `admin.apps:read`"
						},
						{
							"key": "limit",
							"value": "-60142516",
							"description": "The maximum number of items to return. Must be between 1 - 1000 both inclusive."
						},
						{
							"key": "cursor",
							"value": "amet",
							"description": "Set `cursor` to `next_cursor` returned by the previous call to list items in the next page"
						},
						{
							"key": "team_id",
							"value": "amet"
						},
						{
							"key": "enterprise_id",
							"value": "amet"
						}
					]
				},
				"description": "List approved apps for an org or workspace."
			},
			"response": [
				{
					"id": "8dcf5e60-27f2-4fec-a4f9-7cb79995246d",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.apps.approved.list?token=amet&limit=-60142516&cursor=amet&team_id=amet&enterprise_id=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.apps.approved.list"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								},
								{
									"key": "cursor",
									"value": "amet"
								},
								{
									"key": "team_id",
									"value": "amet"
								},
								{
									"key": "enterprise_id",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"approved_apps\": [\n    {\n      \"app\": {\n        \"additional_info\": \"\",\n        \"app_directory_url\": \"https://myteam.enterprise.slack.com/apps/A0W7UKG8E-my-test-app\",\n        \"app_homepage_url\": \"https://www.slack.com\",\n        \"description\": \"test app\",\n        \"help_url\": \"https://www.slack.com\",\n        \"icons\": {\n          \"image_1024\": \"https://3026743124446w96_2bd4ea1ad1f89a23c242_1024.png\",\n          \"image_128\": \"https://30267341249446w6_2bd4ea1ad1f89a23c242_128.png\",\n          \"image_192\": \"https://30267431249446w6_2bd4ea1ad1f89a23c242_192.png\",\n          \"image_32\": \"https://302674312496446w_2bd4ea1ad1f89a23c242_32.png\",\n          \"image_36\": \"https://302674312496446w_2bd4ea1ad1f89a23c242_36.png\",\n          \"image_48\": \"https://302674312496446w_2bd4ea1ad1f89a23c242_48.png\",\n          \"image_512\": \"https://30267431249446w6_2bd4ea1ad1f89a23c242_512.png\",\n          \"image_64\": \"https://302674312496446w_2bd4ea1ad1f89a23c242_64.png\",\n          \"image_72\": \"https://302674312496446w_2bd4ea1ad1f89a23c242_72.png\",\n          \"image_96\": \"https://302674312496446w_2bd4ea1ad1f89a23c242_96.png\",\n          \"image_original\": \"https://302674446w12496_2bd4ea1ad1f89a23c242_original.png\"\n        },\n        \"id\": \"A0W7UKG8E\",\n        \"is_app_directory_approved\": false,\n        \"is_internal\": false,\n        \"name\": \"My Test App\",\n        \"privacy_policy_url\": \"https://www.slack.com\"\n      },\n      \"date_updated\": 1574296707,\n      \"last_resolved_by\": {\n        \"actor_id\": \"W0G82F4FD\",\n        \"actor_type\": \"user\"\n      },\n      \"scopes\": [\n        {\n          \"description\": \"Add the ability for people to direct message or mention @my_test_app\",\n          \"is_sensitive\": true,\n          \"name\": \"bot\",\n          \"token_type\": \"bot\"\n        }\n      ]\n    }\n  ],\n  \"ok\": true,\n  \"response_metadata\": {\n    \"next_cursor\": \"\"\n  }\n}"
				},
				{
					"id": "810599e9-6575-4ae0-b143-96742d24b17d",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.apps.approved.list?token=amet&limit=-60142516&cursor=amet&team_id=amet&enterprise_id=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.apps.approved.list"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								},
								{
									"key": "cursor",
									"value": "amet"
								},
								{
									"key": "team_id",
									"value": "amet"
								},
								{
									"key": "enterprise_id",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin apps requests list",
			"id": "796342d6-e978-45a3-bba4-0113767df215",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/admin.apps.requests.list?token=amet&limit=-60142516&cursor=amet&team_id=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.apps.requests.list"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "(Required) Authentication token. Requires scope: `admin.apps:read`"
						},
						{
							"key": "limit",
							"value": "-60142516",
							"description": "The maximum number of items to return. Must be between 1 - 1000 both inclusive."
						},
						{
							"key": "cursor",
							"value": "amet",
							"description": "Set `cursor` to `next_cursor` returned by the previous call to list items in the next page"
						},
						{
							"key": "team_id",
							"value": "amet"
						}
					]
				},
				"description": "List app requests for a team/workspace."
			},
			"response": [
				{
					"id": "a2d51d3e-fe13-42f4-bd29-b91cd44f8491",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.apps.requests.list?token=amet&limit=-60142516&cursor=amet&team_id=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.apps.requests.list"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								},
								{
									"key": "cursor",
									"value": "amet"
								},
								{
									"key": "team_id",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"app_requests\": [\n    {\n      \"app\": {\n        \"additional_info\": \"\",\n        \"app_directory_url\": \"https://acmecorp.slack.com/apps/A061BL8RQ0-test-app\",\n        \"app_homepage_url\": \"\",\n        \"description\": \"\",\n        \"help_url\": \"\",\n        \"icons\": {\n          \"image_1024\": \"/cdn/15258203/img/testapp/service_1024.png\",\n          \"image_128\": \"/cdn/157258203/img/testapp/service_128.png\",\n          \"image_192\": \"/cdn/157258203/img/testapp/service_192.png\",\n          \"image_32\": \"/cdn/157658203/img/testapp/service_32.png\",\n          \"image_36\": \"/cdn/157658203/img/testapp/service_36.png\",\n          \"image_48\": \"/cdn/157658203/img/testapp/service_48.png\",\n          \"image_512\": \"/cdn/15758203/img/testapp/service_512.png\",\n          \"image_64\": \"/cdn/157658203/img/testapp/service_64.png\",\n          \"image_72\": \"/cdn/157658203/img/testapp/service_72.png\",\n          \"image_96\": \"/cdn/157658203/img/testapp/service_96.png\"\n        },\n        \"id\": \"A061BL8RQ0\",\n        \"is_app_directory_approved\": true,\n        \"is_internal\": false,\n        \"name\": \"Test App\",\n        \"privacy_policy_url\": \"https://testapp.com/privacy\"\n      },\n      \"date_created\": 1578956327,\n      \"id\": \"Ar0XJGFLMLS\",\n      \"message\": \"test test again\",\n      \"previous_resolution\": null,\n      \"scopes\": [\n        {\n          \"description\": \"Post messages to specific channels in Slack\",\n          \"is_sensitive\": false,\n          \"name\": \"incoming-webhook\",\n          \"token_type\": \"user\"\n        }\n      ],\n      \"team\": {\n        \"domain\": \"acmecorp\",\n        \"id\": \"T0M94LNUCR\",\n        \"name\": \"Acme Corp\"\n      },\n      \"user\": {\n        \"email\": \"janedoe@example.com\",\n        \"id\": \"W08RA9G5HR\",\n        \"name\": \"Jane Doe\"\n      }\n    }\n  ],\n  \"ok\": true,\n  \"response_metadata\": {\n    \"next_cursor\": \"\"\n  }\n}"
				},
				{
					"id": "27f28265-f646-44fd-aed9-1a421ce657b8",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.apps.requests.list?token=amet&limit=-60142516&cursor=amet&team_id=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.apps.requests.list"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								},
								{
									"key": "cursor",
									"value": "amet"
								},
								{
									"key": "team_id",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"missing_scope\",\n  \"needed\": \"admin.apps:read\",\n  \"ok\": false,\n  \"provided\": \"read,client,admin,identify,post,apps\"\n}"
				}
			]
		},
		{
			"name": "admin apps restrict",
			"id": "4db64782-b837-4815-83b3-b0d9528c2bfe",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.apps:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "app_id",
							"value": "cillum",
							"description": "The id of the app to restrict."
						},
						{
							"key": "request_id",
							"value": "ipsum adipisicing",
							"description": "The id of the request to restrict."
						},
						{
							"key": "team_id",
							"value": "sit nisi ut nostrud ipsum"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.apps.restrict",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.apps.restrict"
					]
				},
				"description": "Restrict an app for installation on a workspace."
			},
			"response": [
				{
					"id": "4df5ed27-7ff3-4167-bc94-4c7c472025c1",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.apps:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "The id of the app to restrict.",
									"key": "app_id",
									"value": "cillum"
								},
								{
									"description": "The id of the request to restrict.",
									"key": "request_id",
									"value": "ipsum adipisicing"
								},
								{
									"key": "team_id",
									"value": "sit nisi ut nostrud ipsum"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.apps.restrict",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.apps.restrict"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "9be6704c-6bd2-4523-865e-3ed830c4b5cc",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.apps:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "The id of the app to restrict.",
									"key": "app_id",
									"value": "cillum"
								},
								{
									"description": "The id of the request to restrict.",
									"key": "request_id",
									"value": "ipsum adipisicing"
								},
								{
									"key": "team_id",
									"value": "sit nisi ut nostrud ipsum"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.apps.restrict",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.apps.restrict"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin apps restricted list",
			"id": "bfe0814a-b4d7-416c-a803-aa8aa0d84009",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/admin.apps.restricted.list?token=amet&limit=-60142516&cursor=amet&team_id=amet&enterprise_id=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.apps.restricted.list"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "(Required) Authentication token. Requires scope: `admin.apps:read`"
						},
						{
							"key": "limit",
							"value": "-60142516",
							"description": "The maximum number of items to return. Must be between 1 - 1000 both inclusive."
						},
						{
							"key": "cursor",
							"value": "amet",
							"description": "Set `cursor` to `next_cursor` returned by the previous call to list items in the next page"
						},
						{
							"key": "team_id",
							"value": "amet"
						},
						{
							"key": "enterprise_id",
							"value": "amet"
						}
					]
				},
				"description": "List restricted apps for an org or workspace."
			},
			"response": [
				{
					"id": "8a37bc6c-3905-4ebe-b966-b9cbee6b50e9",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.apps.restricted.list?token=amet&limit=-60142516&cursor=amet&team_id=amet&enterprise_id=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.apps.restricted.list"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								},
								{
									"key": "cursor",
									"value": "amet"
								},
								{
									"key": "team_id",
									"value": "amet"
								},
								{
									"key": "enterprise_id",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"response_metadata\": {\n    \"next_cursor\": \"\"\n  },\n  \"restricted_apps\": [\n    {\n      \"app\": {\n        \"additional_info\": \"\",\n        \"app_directory_url\": \"https://myteam.enterprise.slack.com/apps/A0FDLP8M2L-my-test-app\",\n        \"app_homepage_url\": \"https://example.com\",\n        \"description\": \"A fun test app for Slack\",\n        \"help_url\": \"https://example.com\",\n        \"icons\": {\n          \"image_1024\": \"https://1433265338rl878408_eb57dbc818daa4ba15d6_1024.png\",\n          \"image_128\": \"https://4332653438rl87808_eb57dbc818daa4ba15d6_128.png\",\n          \"image_192\": \"https://4332653438rl87808_eb57dbc818daa4ba15d6_192.png\",\n          \"image_32\": \"https://143326534038rl8788_eb57dbc818daa4ba15d6_32.png\",\n          \"image_36\": \"https://143326534038rl8788_eb57dbc818daa4ba15d6_36.png\",\n          \"image_48\": \"https://143326534038rl8788_eb57dbc818daa4ba15d6_48.png\",\n          \"image_512\": \"https://4332653438rl87808_eb57dbc818daa4ba15d6_512.png\",\n          \"image_64\": \"https://143326534038rl8788_eb57dbc818daa4ba15d6_64.png\",\n          \"image_72\": \"https://143326534038rl8788_eb57dbc818daa4ba15d6_72.png\",\n          \"image_96\": \"https://143326534038rl8788_eb57dbc818daa4ba15d6_96.png\",\n          \"image_original\": \"https://143338rl8782653408_eb57dbc818daa4ba15d6_original.png\"\n        },\n        \"id\": \"A0FDLP8M2L\",\n        \"is_app_directory_approved\": true,\n        \"is_internal\": false,\n        \"name\": \"My Test App\",\n        \"privacy_policy_url\": \"https://example.com\"\n      },\n      \"date_updated\": 1574296721,\n      \"last_resolved_by\": {\n        \"actor_id\": \"W0G82LMFD\",\n        \"actor_type\": \"user\"\n      },\n      \"scopes\": [\n        {\n          \"description\": \"Upload, edit, and delete files on the user‟s behalf\",\n          \"is_sensitive\": true,\n          \"name\": \"files:write:user\",\n          \"token_type\": \"user\"\n        }\n      ]\n    }\n  ]\n}"
				},
				{
					"id": "2a8d6244-3521-4d42-ab1f-72fcdb7d7fda",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.apps.restricted.list?token=amet&limit=-60142516&cursor=amet&team_id=amet&enterprise_id=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.apps.restricted.list"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								},
								{
									"key": "cursor",
									"value": "amet"
								},
								{
									"key": "team_id",
									"value": "amet"
								},
								{
									"key": "enterprise_id",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin conversations archive",
			"id": "4863299a-5df9-426a-9cb6-7a31c2cc0910",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel_id",
							"value": "est ad nostrud voluptate",
							"description": "(Required) The channel to archive."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.conversations.archive",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.conversations.archive"
					]
				},
				"description": "Archive a public or private channel."
			},
			"response": [
				{
					"id": "cec0a2c2-3a16-4bea-841f-9d96a79a5bd3",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The channel to archive.",
									"key": "channel_id",
									"value": "est ad nostrud voluptate"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.archive",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.archive"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "9ad11cd9-c891-404a-99b9-4257bb817ae7",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The channel to archive.",
									"key": "channel_id",
									"value": "est ad nostrud voluptate"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.archive",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.archive"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin conversations convert To Private",
			"id": "6b681d9c-1dd9-4985-a0ad-b373e5a7caa4",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel_id",
							"value": "qui adipisicing non commodo",
							"description": "(Required) The channel to convert to private."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.conversations.convertToPrivate",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.conversations.convertToPrivate"
					]
				},
				"description": "Convert a public channel to a private channel."
			},
			"response": [
				{
					"id": "f0d7189d-7333-4187-8c75-f2c0a51491ad",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The channel to convert to private.",
									"key": "channel_id",
									"value": "qui adipisicing non commodo"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.convertToPrivate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.convertToPrivate"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "ed21ec67-07f1-447c-8a6c-c5c26138342b",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The channel to convert to private.",
									"key": "channel_id",
									"value": "qui adipisicing non commodo"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.convertToPrivate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.convertToPrivate"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin conversations create",
			"id": "10dec684-a1e3-4998-8ec3-39953145bbec",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "name",
							"value": "esse in",
							"description": "(Required) Name of the public or private channel to create."
						},
						{
							"key": "is_private",
							"value": "false",
							"description": "(Required) When `true`, creates a private channel instead of a public channel"
						},
						{
							"key": "description",
							"value": "laborum cupidatat",
							"description": "Description of the public or private channel to create."
						},
						{
							"key": "org_wide",
							"value": "false",
							"description": "When `true`, the channel will be available org-wide. Note: if the channel is not `org_wide=true`, you must specify a `team_id` for this channel"
						},
						{
							"key": "team_id",
							"value": "dolor sed elit amet est",
							"description": "The workspace to create the channel in. Note: this argument is required unless you set `org_wide=true`."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.conversations.create",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.conversations.create"
					]
				},
				"description": "Create a public or private channel-based conversation."
			},
			"response": [
				{
					"id": "8b2672ff-556e-463e-b9da-bf6d47b95827",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Name of the public or private channel to create.",
									"key": "name",
									"value": "esse in"
								},
								{
									"description": "(Required) When `true`, creates a private channel instead of a public channel",
									"key": "is_private",
									"value": "false"
								},
								{
									"description": "Description of the public or private channel to create.",
									"key": "description",
									"value": "laborum cupidatat"
								},
								{
									"description": "When `true`, the channel will be available org-wide. Note: if the channel is not `org_wide=true`, you must specify a `team_id` for this channel",
									"key": "org_wide",
									"value": "false"
								},
								{
									"description": "The workspace to create the channel in. Note: this argument is required unless you set `org_wide=true`.",
									"key": "team_id",
									"value": "dolor sed elit amet est"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.create"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"channel_id\": \"C12345\",\n  \"ok\": true\n}"
				},
				{
					"id": "69cb7396-75c7-4c99-b5bd-f3fcba2d03d9",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Name of the public or private channel to create.",
									"key": "name",
									"value": "esse in"
								},
								{
									"description": "(Required) When `true`, creates a private channel instead of a public channel",
									"key": "is_private",
									"value": "false"
								},
								{
									"description": "Description of the public or private channel to create.",
									"key": "description",
									"value": "laborum cupidatat"
								},
								{
									"description": "When `true`, the channel will be available org-wide. Note: if the channel is not `org_wide=true`, you must specify a `team_id` for this channel",
									"key": "org_wide",
									"value": "false"
								},
								{
									"description": "The workspace to create the channel in. Note: this argument is required unless you set `org_wide=true`.",
									"key": "team_id",
									"value": "dolor sed elit amet est"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.create"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin conversations delete",
			"id": "16da4898-3e7d-4ffb-8dad-dbc146182ac4",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel_id",
							"value": "pariatur",
							"description": "(Required) The channel to delete."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.conversations.delete",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.conversations.delete"
					]
				},
				"description": "Delete a public or private channel."
			},
			"response": [
				{
					"id": "05d92997-99d8-4dec-8a28-8910410e0d4f",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The channel to delete.",
									"key": "channel_id",
									"value": "pariatur"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.delete"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "01afacd3-324c-40c8-9248-d7d5c396ed54",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The channel to delete.",
									"key": "channel_id",
									"value": "pariatur"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.delete"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin conversations disconnect Shared",
			"id": "2519b511-2012-4088-b9b9-a4db77494195",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel_id",
							"value": "labore sunt minim",
							"description": "(Required) The channel to be disconnected from some workspaces."
						},
						{
							"key": "leaving_team_ids",
							"value": "dolor nisi Ut",
							"description": "The team to be removed from the channel. Currently only a single team id can be specified."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.conversations.disconnectShared",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.conversations.disconnectShared"
					]
				},
				"description": "Disconnect a connected channel from one or more workspaces."
			},
			"response": [
				{
					"id": "39a4e320-51eb-4ded-b5e0-34c28bd660b0",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The channel to be disconnected from some workspaces.",
									"key": "channel_id",
									"value": "labore sunt minim"
								},
								{
									"description": "The team to be removed from the channel. Currently only a single team id can be specified.",
									"key": "leaving_team_ids",
									"value": "dolor nisi Ut"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.disconnectShared",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.disconnectShared"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "c2781b68-07dc-424e-bb44-f02deedc84fe",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The channel to be disconnected from some workspaces.",
									"key": "channel_id",
									"value": "labore sunt minim"
								},
								{
									"description": "The team to be removed from the channel. Currently only a single team id can be specified.",
									"key": "leaving_team_ids",
									"value": "dolor nisi Ut"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.disconnectShared",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.disconnectShared"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin conversations ekm list Original Connected Channel Info",
			"id": "43e96087-50bf-40d6-b6b8-53be8a4b758b",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/admin.conversations.ekm.listOriginalConnectedChannelInfo?token=amet&channel_ids=amet&team_ids=amet&limit=-60142516&cursor=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.conversations.ekm.listOriginalConnectedChannelInfo"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "(Required) Authentication token. Requires scope: `admin.conversations:read`"
						},
						{
							"key": "channel_ids",
							"value": "amet",
							"description": "A comma-separated list of channels to filter to."
						},
						{
							"key": "team_ids",
							"value": "amet",
							"description": "A comma-separated list of the workspaces to which the channels you would like returned belong."
						},
						{
							"key": "limit",
							"value": "-60142516",
							"description": "The maximum number of items to return. Must be between 1 - 1000 both inclusive."
						},
						{
							"key": "cursor",
							"value": "amet",
							"description": "Set `cursor` to `next_cursor` returned by the previous call to list items in the next page."
						}
					]
				},
				"description": "List all disconnected channels—i.e., channels that were once connected to other workspaces and then disconnected—and the corresponding original channel IDs for key revocation with EKM."
			},
			"response": [
				{
					"id": "4acc30dc-0ac8-4634-b0cb-1b5b1d945211",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.ekm.listOriginalConnectedChannelInfo?token=amet&channel_ids=amet&team_ids=amet&limit=-60142516&cursor=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.ekm.listOriginalConnectedChannelInfo"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "channel_ids",
									"value": "amet"
								},
								{
									"key": "team_ids",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								},
								{
									"key": "cursor",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"channels\": [\n    {\n      \"id\": \"string\",\n      \"internal_team_ids\": \"array\",\n      \"original_connected_channel_id\": \"string\",\n      \"original_connected_host_id\": \"string\"\n    }\n  ],\n  \"ok\": true\n}"
				},
				{
					"id": "a690b458-e0af-4e67-a269-901f76c1fbc0",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.ekm.listOriginalConnectedChannelInfo?token=amet&channel_ids=amet&team_ids=amet&limit=-60142516&cursor=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.ekm.listOriginalConnectedChannelInfo"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "channel_ids",
									"value": "amet"
								},
								{
									"key": "team_ids",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								},
								{
									"key": "cursor",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin conversations get Conversation Prefs",
			"id": "1f627a0f-c2e8-4367-96eb-904ecfb6df5f",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.conversations:read`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/admin.conversations.getConversationPrefs?channel_id=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.conversations.getConversationPrefs"
					],
					"query": [
						{
							"key": "channel_id",
							"value": "amet",
							"description": "(Required) The channel to get preferences for."
						}
					]
				},
				"description": "Get conversation preferences for a public or private channel."
			},
			"response": [
				{
					"id": "990da427-5e4f-4166-a4fe-235e92876bc3",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:read`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.getConversationPrefs?channel_id=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.getConversationPrefs"
							],
							"query": [
								{
									"key": "channel_id",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "52b6aa72-9fee-4e00-984e-9f038f91adc3",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:read`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.getConversationPrefs?channel_id=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.getConversationPrefs"
							],
							"query": [
								{
									"key": "channel_id",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin conversations get Teams",
			"id": "c65cdccb-7761-4eed-a1ab-e7969f21a1d0",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.conversations:read`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/admin.conversations.getTeams?channel_id=amet&cursor=amet&limit=-60142516",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.conversations.getTeams"
					],
					"query": [
						{
							"key": "channel_id",
							"value": "amet",
							"description": "(Required) The channel to determine connected workspaces within the organization for."
						},
						{
							"key": "cursor",
							"value": "amet",
							"description": "Set `cursor` to `next_cursor` returned by the previous call to list items in the next page"
						},
						{
							"key": "limit",
							"value": "-60142516",
							"description": "The maximum number of items to return. Must be between 1 - 1000 both inclusive."
						}
					]
				},
				"description": "Get all the workspaces a given public or private channel is connected to within this Enterprise org."
			},
			"response": [
				{
					"id": "2e864062-072b-4ff6-bd70-8c5f10cf12f5",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:read`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.getTeams?channel_id=amet&cursor=amet&limit=-60142516",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.getTeams"
							],
							"query": [
								{
									"key": "channel_id",
									"value": "amet"
								},
								{
									"key": "cursor",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"teams\": [\n    \"T1234\",\n    \"T5678\"\n  ]\n}"
				},
				{
					"id": "9920e141-3ce9-498e-96d1-9aab5414b1c7",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:read`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.getTeams?channel_id=amet&cursor=amet&limit=-60142516",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.getTeams"
							],
							"query": [
								{
									"key": "channel_id",
									"value": "amet"
								},
								{
									"key": "cursor",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin conversations invite",
			"id": "01c9cb3c-1f9e-494c-a698-df456adb673d",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "user_ids",
							"value": "dolor",
							"description": "(Required) The users to invite."
						},
						{
							"key": "channel_id",
							"value": "cupidatat",
							"description": "(Required) The channel that the users will be invited to."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.conversations.invite",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.conversations.invite"
					]
				},
				"description": "Invite a user to a public or private channel."
			},
			"response": [
				{
					"id": "a3490ac3-afe2-424e-9dee-2f5d7d851c5d",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The users to invite.",
									"key": "user_ids",
									"value": "dolor"
								},
								{
									"description": "(Required) The channel that the users will be invited to.",
									"key": "channel_id",
									"value": "cupidatat"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.invite",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.invite"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "7f33705e-4de8-4522-a9d7-59a2b777df90",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The users to invite.",
									"key": "user_ids",
									"value": "dolor"
								},
								{
									"description": "(Required) The channel that the users will be invited to.",
									"key": "channel_id",
									"value": "cupidatat"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.invite",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.invite"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin conversations rename",
			"id": "12655803-ba1b-4770-9faf-f4b2e0bbb836",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel_id",
							"value": "sit nostrud elit",
							"description": "(Required) The channel to rename."
						},
						{
							"key": "name",
							"value": "eu amet",
							"description": "(Required) "
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.conversations.rename",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.conversations.rename"
					]
				},
				"description": "Rename a public or private channel."
			},
			"response": [
				{
					"id": "4e38a1fa-760b-4c46-a871-daa84b1a6389",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The channel to rename.",
									"key": "channel_id",
									"value": "sit nostrud elit"
								},
								{
									"description": "(Required) ",
									"key": "name",
									"value": "eu amet"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.rename",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.rename"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "d5fad81f-4ef2-4d3f-adac-b4cf0cccbd45",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The channel to rename.",
									"key": "channel_id",
									"value": "sit nostrud elit"
								},
								{
									"description": "(Required) ",
									"key": "name",
									"value": "eu amet"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.rename",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.rename"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin conversations restrict Access add Group",
			"id": "a9ec01b1-4ad1-4310-b825-4bfdb6482eef",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "token",
							"value": "ipsum et elit sint",
							"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`"
						},
						{
							"key": "group_id",
							"value": "cillum consectetur velit voluptate",
							"description": "(Required) The [IDP Group](https://slack.com/help/articles/115001435788-Connect-identity-provider-groups-to-your-Enterprise-Grid-org) ID to be an allowlist for the private channel."
						},
						{
							"key": "channel_id",
							"value": "aliqua",
							"description": "(Required) The channel to link this group to."
						},
						{
							"key": "team_id",
							"value": "aliquip ",
							"description": "The workspace where the channel exists. This argument is required for channels only tied to one workspace, and optional for channels that are shared across an organization."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.conversations.restrictAccess.addGroup",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.conversations.restrictAccess.addGroup"
					]
				},
				"description": "Add an allowlist of IDP groups for accessing a channel"
			},
			"response": [
				{
					"id": "15cd20b0-64eb-4b9e-a900-adabecdb63c2",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
									"key": "token",
									"value": "ipsum et elit sint"
								},
								{
									"description": "(Required) The [IDP Group](https://slack.com/help/articles/115001435788-Connect-identity-provider-groups-to-your-Enterprise-Grid-org) ID to be an allowlist for the private channel.",
									"key": "group_id",
									"value": "cillum consectetur velit voluptate"
								},
								{
									"description": "(Required) The channel to link this group to.",
									"key": "channel_id",
									"value": "aliqua"
								},
								{
									"description": "The workspace where the channel exists. This argument is required for channels only tied to one workspace, and optional for channels that are shared across an organization.",
									"key": "team_id",
									"value": "aliquip "
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.restrictAccess.addGroup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.restrictAccess.addGroup"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "45af5081-94fb-4451-a363-59b6e8359e0c",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
									"key": "token",
									"value": "ipsum et elit sint"
								},
								{
									"description": "(Required) The [IDP Group](https://slack.com/help/articles/115001435788-Connect-identity-provider-groups-to-your-Enterprise-Grid-org) ID to be an allowlist for the private channel.",
									"key": "group_id",
									"value": "cillum consectetur velit voluptate"
								},
								{
									"description": "(Required) The channel to link this group to.",
									"key": "channel_id",
									"value": "aliqua"
								},
								{
									"description": "The workspace where the channel exists. This argument is required for channels only tied to one workspace, and optional for channels that are shared across an organization.",
									"key": "team_id",
									"value": "aliquip "
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.restrictAccess.addGroup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.restrictAccess.addGroup"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin conversations restrict Access list Groups",
			"id": "23b6e224-16e7-4cbb-b3f8-a9d8cdef3ac4",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/admin.conversations.restrictAccess.listGroups?token=amet&channel_id=amet&team_id=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.conversations.restrictAccess.listGroups"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "(Required) Authentication token. Requires scope: `admin.conversations:read`"
						},
						{
							"key": "channel_id",
							"value": "amet",
							"description": "(Required) "
						},
						{
							"key": "team_id",
							"value": "amet",
							"description": "The workspace where the channel exists. This argument is required for channels only tied to one workspace, and optional for channels that are shared across an organization."
						}
					]
				},
				"description": "List all IDP Groups linked to a channel"
			},
			"response": [
				{
					"id": "c769b8eb-bda9-4f46-a5f3-39244975a9eb",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.restrictAccess.listGroups?token=amet&channel_id=amet&team_id=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.restrictAccess.listGroups"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "channel_id",
									"value": "amet"
								},
								{
									"key": "team_id",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"group_ids\": [\n    \"YOUR_GROUP_ID\"\n  ],\n  \"ok\": true\n}"
				},
				{
					"id": "1cef87b1-3214-44d1-be0f-6e3151cb8d89",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.restrictAccess.listGroups?token=amet&channel_id=amet&team_id=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.restrictAccess.listGroups"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "channel_id",
									"value": "amet"
								},
								{
									"key": "team_id",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin conversations restrict Access remove Group",
			"id": "4d484ea4-f1db-4dc3-b091-655f06813064",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "token",
							"value": "dolore",
							"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`"
						},
						{
							"key": "team_id",
							"value": "ea ut do deserunt",
							"description": "(Required) The workspace where the channel exists. This argument is required for channels only tied to one workspace, and optional for channels that are shared across an organization."
						},
						{
							"key": "group_id",
							"value": "elit dolore",
							"description": "(Required) The [IDP Group](https://slack.com/help/articles/115001435788-Connect-identity-provider-groups-to-your-Enterprise-Grid-org) ID to remove from the private channel."
						},
						{
							"key": "channel_id",
							"value": "laboris",
							"description": "(Required) The channel to remove the linked group from."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.conversations.restrictAccess.removeGroup",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.conversations.restrictAccess.removeGroup"
					]
				},
				"description": "Remove a linked IDP group linked from a private channel"
			},
			"response": [
				{
					"id": "7467bd95-f209-4e09-8f1e-fd8d09b31629",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
									"key": "token",
									"value": "dolore"
								},
								{
									"description": "(Required) The workspace where the channel exists. This argument is required for channels only tied to one workspace, and optional for channels that are shared across an organization.",
									"key": "team_id",
									"value": "ea ut do deserunt"
								},
								{
									"description": "(Required) The [IDP Group](https://slack.com/help/articles/115001435788-Connect-identity-provider-groups-to-your-Enterprise-Grid-org) ID to remove from the private channel.",
									"key": "group_id",
									"value": "elit dolore"
								},
								{
									"description": "(Required) The channel to remove the linked group from.",
									"key": "channel_id",
									"value": "laboris"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.restrictAccess.removeGroup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.restrictAccess.removeGroup"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "c8894971-d501-46a7-9708-9abf2cfffc35",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
									"key": "token",
									"value": "dolore"
								},
								{
									"description": "(Required) The workspace where the channel exists. This argument is required for channels only tied to one workspace, and optional for channels that are shared across an organization.",
									"key": "team_id",
									"value": "ea ut do deserunt"
								},
								{
									"description": "(Required) The [IDP Group](https://slack.com/help/articles/115001435788-Connect-identity-provider-groups-to-your-Enterprise-Grid-org) ID to remove from the private channel.",
									"key": "group_id",
									"value": "elit dolore"
								},
								{
									"description": "(Required) The channel to remove the linked group from.",
									"key": "channel_id",
									"value": "laboris"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.restrictAccess.removeGroup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.restrictAccess.removeGroup"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin conversations search",
			"id": "f73666cd-5f7b-4948-b265-c965d178fd8a",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.conversations:read`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/admin.conversations.search?team_ids=amet&query=amet&limit=-60142516&cursor=amet&search_channel_types=amet&sort=amet&sort_dir=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.conversations.search"
					],
					"query": [
						{
							"key": "team_ids",
							"value": "amet",
							"description": "Comma separated string of team IDs, signifying the workspaces to search through."
						},
						{
							"key": "query",
							"value": "amet",
							"description": "Name of the the channel to query by."
						},
						{
							"key": "limit",
							"value": "-60142516",
							"description": "Maximum number of items to be returned. Must be between 1 - 20 both inclusive. Default is 10."
						},
						{
							"key": "cursor",
							"value": "amet",
							"description": "Set `cursor` to `next_cursor` returned by the previous call to list items in the next page."
						},
						{
							"key": "search_channel_types",
							"value": "amet",
							"description": "The type of channel to include or exclude in the search. For example `private` will search private channels, while `private_exclude` will exclude them. For a full list of types, check the [Types section](#types)."
						},
						{
							"key": "sort",
							"value": "amet",
							"description": "Possible values are `relevant` (search ranking based on what we think is closest), `name` (alphabetical), `member_count` (number of users in the channel), and `created` (date channel was created). You can optionally pair this with the `sort_dir` arg to change how it is sorted "
						},
						{
							"key": "sort_dir",
							"value": "amet",
							"description": "Sort direction. Possible values are `asc` for ascending order like (1, 2, 3) or (a, b, c), and `desc` for descending order like (3, 2, 1) or (c, b, a)"
						}
					]
				},
				"description": "Search for public or private channels in an Enterprise organization."
			},
			"response": [
				{
					"id": "f49d88f3-8cbc-444f-b3e8-b4816b30a5dc",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:read`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.search?team_ids=amet&query=amet&limit=-60142516&cursor=amet&search_channel_types=amet&sort=amet&sort_dir=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.search"
							],
							"query": [
								{
									"key": "team_ids",
									"value": "amet"
								},
								{
									"key": "query",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								},
								{
									"key": "cursor",
									"value": "amet"
								},
								{
									"key": "search_channel_types",
									"value": "amet"
								},
								{
									"key": "sort",
									"value": "amet"
								},
								{
									"key": "sort_dir",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"channels\": [\n    {\n      \"created\": 1449252889,\n      \"creator\": \"U012A3CDE\",\n      \"id\": \"C012AB3CD\",\n      \"is_archived\": false,\n      \"is_channel\": true,\n      \"is_ext_shared\": false,\n      \"is_general\": true,\n      \"is_group\": false,\n      \"is_im\": false,\n      \"is_member\": true,\n      \"is_mpim\": false,\n      \"is_org_shared\": false,\n      \"is_pending_ext_shared\": false,\n      \"is_private\": false,\n      \"is_shared\": false,\n      \"name\": \"general\",\n      \"name_normalized\": \"general\",\n      \"num_members\": 4,\n      \"pending_shared\": [],\n      \"previous_names\": [],\n      \"purpose\": {\n        \"creator\": \"\",\n        \"last_set\": 0,\n        \"value\": \"This channel is for team-wide communication and announcements. All team members are in this channel.\"\n      },\n      \"topic\": {\n        \"creator\": \"\",\n        \"last_set\": 0,\n        \"value\": \"Company-wide announcements and work-based matters\"\n      },\n      \"unlinked\": 0\n    }\n  ],\n  \"ok\": true,\n  \"response_metadata\": {\n    \"next_cursor\": \"dGVhbTpDMDYxRkE1UEI=\"\n  }\n}"
				},
				{
					"id": "0951e39e-3a6f-4fdc-a7cc-e3835deb15ff",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:read`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.search?team_ids=amet&query=amet&limit=-60142516&cursor=amet&search_channel_types=amet&sort=amet&sort_dir=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.search"
							],
							"query": [
								{
									"key": "team_ids",
									"value": "amet"
								},
								{
									"key": "query",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								},
								{
									"key": "cursor",
									"value": "amet"
								},
								{
									"key": "search_channel_types",
									"value": "amet"
								},
								{
									"key": "sort",
									"value": "amet"
								},
								{
									"key": "sort_dir",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"not_an_enterprise\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin conversations set Conversation Prefs",
			"id": "24a733b8-e630-483f-a90b-21510f63a743",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel_id",
							"value": "sed incididunt",
							"description": "(Required) The channel to set the prefs for"
						},
						{
							"key": "prefs",
							"value": "ullamco quis dolore",
							"description": "(Required) The prefs for this channel in a stringified JSON format."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.conversations.setConversationPrefs",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.conversations.setConversationPrefs"
					]
				},
				"description": "Set the posting permissions for a public or private channel."
			},
			"response": [
				{
					"id": "e716ef90-0c91-470b-a97d-2c465ca5c44d",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The channel to set the prefs for",
									"key": "channel_id",
									"value": "sed incididunt"
								},
								{
									"description": "(Required) The prefs for this channel in a stringified JSON format.",
									"key": "prefs",
									"value": "ullamco quis dolore"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.setConversationPrefs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.setConversationPrefs"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "bab7b50c-d8d9-488d-985e-4cc38ba1b1f1",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The channel to set the prefs for",
									"key": "channel_id",
									"value": "sed incididunt"
								},
								{
									"description": "(Required) The prefs for this channel in a stringified JSON format.",
									"key": "prefs",
									"value": "ullamco quis dolore"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.setConversationPrefs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.setConversationPrefs"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin conversations set Teams",
			"id": "9324dcea-5248-426f-87c6-06f3e3fbea91",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel_id",
							"value": "aute velit",
							"description": "(Required) The encoded `channel_id` to add or remove to workspaces."
						},
						{
							"key": "team_id",
							"value": "ut dolore qui aute anim",
							"description": "The workspace to which the channel belongs. Omit this argument if the channel is a cross-workspace shared channel."
						},
						{
							"key": "target_team_ids",
							"value": "est",
							"description": "A comma-separated list of workspaces to which the channel should be shared. Not required if the channel is being shared org-wide."
						},
						{
							"key": "org_channel",
							"value": "true",
							"description": "True if channel has to be converted to an org channel"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.conversations.setTeams",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.conversations.setTeams"
					]
				},
				"description": "Set the workspaces in an Enterprise grid org that connect to a public or private channel."
			},
			"response": [
				{
					"id": "0e536756-481a-4692-9554-5bc0a193e791",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The encoded `channel_id` to add or remove to workspaces.",
									"key": "channel_id",
									"value": "aute velit"
								},
								{
									"description": "The workspace to which the channel belongs. Omit this argument if the channel is a cross-workspace shared channel.",
									"key": "team_id",
									"value": "ut dolore qui aute anim"
								},
								{
									"description": "A comma-separated list of workspaces to which the channel should be shared. Not required if the channel is being shared org-wide.",
									"key": "target_team_ids",
									"value": "est"
								},
								{
									"description": "True if channel has to be converted to an org channel",
									"key": "org_channel",
									"value": "true"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.setTeams",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.setTeams"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "c62f460a-35a3-47f8-8bff-5eec630259e3",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The encoded `channel_id` to add or remove to workspaces.",
									"key": "channel_id",
									"value": "aute velit"
								},
								{
									"description": "The workspace to which the channel belongs. Omit this argument if the channel is a cross-workspace shared channel.",
									"key": "team_id",
									"value": "ut dolore qui aute anim"
								},
								{
									"description": "A comma-separated list of workspaces to which the channel should be shared. Not required if the channel is being shared org-wide.",
									"key": "target_team_ids",
									"value": "est"
								},
								{
									"description": "True if channel has to be converted to an org channel",
									"key": "org_channel",
									"value": "true"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.setTeams",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.setTeams"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin conversations unarchive",
			"id": "bfc6cc24-31ab-43a9-9663-e20624a9b7af",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel_id",
							"value": "dolor deserunt dolore",
							"description": "(Required) The channel to unarchive."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.conversations.unarchive",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.conversations.unarchive"
					]
				},
				"description": "Unarchive a public or private channel."
			},
			"response": [
				{
					"id": "f31ab57c-0ab3-4a5a-8fea-2f4b719f153a",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The channel to unarchive.",
									"key": "channel_id",
									"value": "dolor deserunt dolore"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.unarchive",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.unarchive"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "400a31f7-c557-47ec-8a50-496f123bdf1a",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The channel to unarchive.",
									"key": "channel_id",
									"value": "dolor deserunt dolore"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.conversations.unarchive",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.conversations.unarchive"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin emoji add",
			"id": "e9ac191d-563f-48a8-991c-f58dfead7c2a",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "token",
							"value": "sint in in aliquip",
							"description": "(Required) Authentication token. Requires scope: `admin.teams:write`"
						},
						{
							"key": "name",
							"value": "consectetur dolore",
							"description": "(Required) The name of the emoji to be removed. Colons (`:myemoji:`) around the value are not required, although they may be included."
						},
						{
							"key": "url",
							"value": "proident",
							"description": "(Required) The URL of a file to use as an image for the emoji. Square images under 128KB and with transparent backgrounds work best."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.emoji.add",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.emoji.add"
					]
				},
				"description": "Add an emoji."
			},
			"response": [
				{
					"id": "abe6897c-cb2c-4230-acab-30f8c960e0cd",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
									"key": "token",
									"value": "sint in in aliquip"
								},
								{
									"description": "(Required) The name of the emoji to be removed. Colons (`:myemoji:`) around the value are not required, although they may be included.",
									"key": "name",
									"value": "consectetur dolore"
								},
								{
									"description": "(Required) The URL of a file to use as an image for the emoji. Square images under 128KB and with transparent backgrounds work best.",
									"key": "url",
									"value": "proident"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.emoji.add",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.emoji.add"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "5e5763f9-d1e4-422c-a9b1-5c2db28d707b",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
									"key": "token",
									"value": "sint in in aliquip"
								},
								{
									"description": "(Required) The name of the emoji to be removed. Colons (`:myemoji:`) around the value are not required, although they may be included.",
									"key": "name",
									"value": "consectetur dolore"
								},
								{
									"description": "(Required) The URL of a file to use as an image for the emoji. Square images under 128KB and with transparent backgrounds work best.",
									"key": "url",
									"value": "proident"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.emoji.add",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.emoji.add"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin emoji add Alias",
			"id": "a9ad50fc-8a66-40b6-9753-b4081bb6a878",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "token",
							"value": "eiusmod null",
							"description": "(Required) Authentication token. Requires scope: `admin.teams:write`"
						},
						{
							"key": "name",
							"value": "est minim",
							"description": "(Required) The name of the emoji to be aliased. Colons (`:myemoji:`) around the value are not required, although they may be included."
						},
						{
							"key": "alias_for",
							"value": "in ea",
							"description": "(Required) The alias of the emoji."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.emoji.addAlias",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.emoji.addAlias"
					]
				},
				"description": "Add an emoji alias."
			},
			"response": [
				{
					"id": "26cdd775-a8dc-436f-96e2-852e83ea051c",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
									"key": "token",
									"value": "eiusmod null"
								},
								{
									"description": "(Required) The name of the emoji to be aliased. Colons (`:myemoji:`) around the value are not required, although they may be included.",
									"key": "name",
									"value": "est minim"
								},
								{
									"description": "(Required) The alias of the emoji.",
									"key": "alias_for",
									"value": "in ea"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.emoji.addAlias",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.emoji.addAlias"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "80938361-f180-4d72-a4d8-fa5da704e957",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
									"key": "token",
									"value": "eiusmod null"
								},
								{
									"description": "(Required) The name of the emoji to be aliased. Colons (`:myemoji:`) around the value are not required, although they may be included.",
									"key": "name",
									"value": "est minim"
								},
								{
									"description": "(Required) The alias of the emoji.",
									"key": "alias_for",
									"value": "in ea"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.emoji.addAlias",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.emoji.addAlias"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin emoji list",
			"id": "9797fa54-490a-4a52-bd22-83b8e7a8b669",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/admin.emoji.list?token=amet&cursor=amet&limit=-60142516",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.emoji.list"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "(Required) Authentication token. Requires scope: `admin.teams:read`"
						},
						{
							"key": "cursor",
							"value": "amet",
							"description": "Set `cursor` to `next_cursor` returned by the previous call to list items in the next page"
						},
						{
							"key": "limit",
							"value": "-60142516",
							"description": "The maximum number of items to return. Must be between 1 - 1000 both inclusive."
						}
					]
				},
				"description": "List emoji for an Enterprise Grid organization."
			},
			"response": [
				{
					"id": "da867118-da34-4316-af4c-79bccdc15f2d",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.emoji.list?token=amet&cursor=amet&limit=-60142516",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.emoji.list"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "cursor",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"cache_ts\": \"1575283387.000000\",\n  \"categories\": [\n    {\n      \"emoji_names\": [\n        \"grinning\",\n        \"grin\",\n        \"joy\",\n        \"etc etc ...\"\n      ],\n      \"name\": \"Smileys & People\"\n    }\n  ],\n  \"categories_version\": \"5\",\n  \"emoji\": {\n    \"black_square\": \"alias:black_large_square\",\n    \"bowtie\": \"https://emoji.slack-edge.com/T9TK3CUKW/bowtie/f3ec6f2bb0.png\",\n    \"cubimal_chick\": \"https://emoji.slack-edge.com/T9TK3CUKW/cubimal_chick/85961c43d7.png\",\n    \"dusty_stick\": \"https://emoji.slack-edge.com/T9TK3CUKW/dusty_stick/6177a62312.png\",\n    \"glitch_crab\": \"https://emoji.slack-edge.com/T9TK3CUKW/glitch_crab/db049f1f9c.png\",\n    \"piggy\": \"https://emoji.slack-edge.com/T9TK3CUKW/piggy/b7762ee8cd.png\",\n    \"pride\": \"https://emoji.slack-edge.com/T9TK3CUKW/pride/56b1bd3388.png\",\n    \"shipit\": \"alias:squirrel\",\n    \"simple_smile\": {\n      \"apple\": \"https://a.slack-edge.com/80588/img/emoji_2017_12_06/apple/simple_smile.png\",\n      \"google\": \"https://a.slack-edge.com/80588/img/emoji_2017_12_06/google/simple_smile.png\"\n    },\n    \"slack\": \"https://emoji.slack-edge.com/T9TK3CUKW/slack/7d462d2443.png\",\n    \"slack_call\": \"https://emoji.slack-edge.com/T9TK3CUKW/slack_call/b81fffd6dd.png\",\n    \"squirrel\": \"https://emoji.slack-edge.com/T9TK3CUKW/squirrel/465f40c0e0.png\",\n    \"thumbsup_all\": \"https://emoji.slack-edge.com/T9TK3CUKW/thumbsup_all/50096a1020.gif\",\n    \"white_square\": \"alias:white_large_square\"\n  },\n  \"ok\": true\n}"
				},
				{
					"id": "21090ae6-aff0-4b0f-bffa-5ef3890fc5dd",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.emoji.list?token=amet&cursor=amet&limit=-60142516",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.emoji.list"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "cursor",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin emoji remove",
			"id": "f3a6e052-e394-47e8-93fb-c07d9225ac60",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "token",
							"value": "exercitation",
							"description": "(Required) Authentication token. Requires scope: `admin.teams:write`"
						},
						{
							"key": "name",
							"value": "dolore",
							"description": "(Required) The name of the emoji to be removed. Colons (`:myemoji:`) around the value are not required, although they may be included."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.emoji.remove",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.emoji.remove"
					]
				},
				"description": "Remove an emoji across an Enterprise Grid organization"
			},
			"response": [
				{
					"id": "e8bc2a0a-ce1f-459a-9992-39f9ddb2e2b0",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
									"key": "token",
									"value": "exercitation"
								},
								{
									"description": "(Required) The name of the emoji to be removed. Colons (`:myemoji:`) around the value are not required, although they may be included.",
									"key": "name",
									"value": "dolore"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.emoji.remove",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.emoji.remove"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "416ad949-7606-4f95-ba77-6a97997a5b44",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
									"key": "token",
									"value": "exercitation"
								},
								{
									"description": "(Required) The name of the emoji to be removed. Colons (`:myemoji:`) around the value are not required, although they may be included.",
									"key": "name",
									"value": "dolore"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.emoji.remove",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.emoji.remove"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin emoji rename",
			"id": "6050bf38-4de7-479b-9093-2c33750af5e4",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "token",
							"value": "velit magna",
							"description": "(Required) Authentication token. Requires scope: `admin.teams:write`"
						},
						{
							"key": "name",
							"value": "ut dolor",
							"description": "(Required) The name of the emoji to be renamed. Colons (`:myemoji:`) around the value are not required, although they may be included."
						},
						{
							"key": "new_name",
							"value": "ad enim",
							"description": "(Required) The new name of the emoji."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.emoji.rename",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.emoji.rename"
					]
				},
				"description": "Rename an emoji."
			},
			"response": [
				{
					"id": "74a47bf4-4072-4d0f-8449-e013b1cd54fa",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
									"key": "token",
									"value": "velit magna"
								},
								{
									"description": "(Required) The name of the emoji to be renamed. Colons (`:myemoji:`) around the value are not required, although they may be included.",
									"key": "name",
									"value": "ut dolor"
								},
								{
									"description": "(Required) The new name of the emoji.",
									"key": "new_name",
									"value": "ad enim"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.emoji.rename",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.emoji.rename"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "7bd073db-1f3f-42f0-a62c-ad85c7b8fe49",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
									"key": "token",
									"value": "velit magna"
								},
								{
									"description": "(Required) The name of the emoji to be renamed. Colons (`:myemoji:`) around the value are not required, although they may be included.",
									"key": "name",
									"value": "ut dolor"
								},
								{
									"description": "(Required) The new name of the emoji.",
									"key": "new_name",
									"value": "ad enim"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.emoji.rename",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.emoji.rename"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin invite Requests approve",
			"id": "de1d805c-96b2-4a32-aff0-d8997d5612b2",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.invites:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "invite_request_id",
							"value": "Excepteur irure commodo",
							"description": "(Required) ID of the request to invite."
						},
						{
							"key": "team_id",
							"value": "enim qui in",
							"description": "ID for the workspace where the invite request was made."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.inviteRequests.approve",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.inviteRequests.approve"
					]
				},
				"description": "Approve a workspace invite request."
			},
			"response": [
				{
					"id": "ff4ca5c5-997e-4d52-b87c-d6cde035cdc4",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.invites:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.inviteRequests.approve",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.inviteRequests.approve"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "00f0928b-24c3-4936-a545-adcc7b1d3c08",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.invites:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.inviteRequests.approve",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.inviteRequests.approve"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin invite Requests approved list",
			"id": "df769ff3-8d43-4634-a6cf-8a390a0df4ad",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.invites:read`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/admin.inviteRequests.approved.list?team_id=amet&cursor=amet&limit=-60142516",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.inviteRequests.approved.list"
					],
					"query": [
						{
							"key": "team_id",
							"value": "amet",
							"description": "ID for the workspace where the invite requests were made."
						},
						{
							"key": "cursor",
							"value": "amet",
							"description": "Value of the `next_cursor` field sent as part of the previous API response"
						},
						{
							"key": "limit",
							"value": "-60142516",
							"description": "The number of results that will be returned by the API on each invocation. Must be between 1 - 1000, both inclusive"
						}
					]
				},
				"description": "List all approved workspace invite requests."
			},
			"response": [
				{
					"id": "b498d666-9213-4ef0-bd43-57ff543cc081",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.invites:read`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.inviteRequests.approved.list?team_id=amet&cursor=amet&limit=-60142516",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.inviteRequests.approved.list"
							],
							"query": [
								{
									"key": "team_id",
									"value": "amet"
								},
								{
									"key": "cursor",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "809c8c76-d4da-45ff-b453-9d403e0e7c38",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.invites:read`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.inviteRequests.approved.list?team_id=amet&cursor=amet&limit=-60142516",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.inviteRequests.approved.list"
							],
							"query": [
								{
									"key": "team_id",
									"value": "amet"
								},
								{
									"key": "cursor",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin invite Requests denied list",
			"id": "b47a9708-04a6-4669-93b5-c61b123a6ce9",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.invites:read`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/admin.inviteRequests.denied.list?team_id=amet&cursor=amet&limit=-60142516",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.inviteRequests.denied.list"
					],
					"query": [
						{
							"key": "team_id",
							"value": "amet",
							"description": "ID for the workspace where the invite requests were made."
						},
						{
							"key": "cursor",
							"value": "amet",
							"description": "Value of the `next_cursor` field sent as part of the previous api response"
						},
						{
							"key": "limit",
							"value": "-60142516",
							"description": "The number of results that will be returned by the API on each invocation. Must be between 1 - 1000 both inclusive"
						}
					]
				},
				"description": "List all denied workspace invite requests."
			},
			"response": [
				{
					"id": "cd5529f1-86ce-41ad-8dd3-2baae484636c",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.invites:read`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.inviteRequests.denied.list?team_id=amet&cursor=amet&limit=-60142516",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.inviteRequests.denied.list"
							],
							"query": [
								{
									"key": "team_id",
									"value": "amet"
								},
								{
									"key": "cursor",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "0e7ffabf-70f8-4ac9-828f-b40bc91ca24b",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.invites:read`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.inviteRequests.denied.list?team_id=amet&cursor=amet&limit=-60142516",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.inviteRequests.denied.list"
							],
							"query": [
								{
									"key": "team_id",
									"value": "amet"
								},
								{
									"key": "cursor",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin invite Requests deny",
			"id": "db02cce1-ca78-4b38-aa4e-9b37b06ce925",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.invites:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "invite_request_id",
							"value": "Excepteur irure commodo",
							"description": "(Required) ID of the request to invite."
						},
						{
							"key": "team_id",
							"value": "enim qui in",
							"description": "ID for the workspace where the invite request was made."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.inviteRequests.deny",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.inviteRequests.deny"
					]
				},
				"description": "Deny a workspace invite request."
			},
			"response": [
				{
					"id": "8b6906d6-66ac-430c-b24b-c59401a923f5",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.invites:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.inviteRequests.deny",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.inviteRequests.deny"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "388dc698-f163-415c-a218-253f501bcf44",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.invites:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.inviteRequests.deny",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.inviteRequests.deny"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin invite Requests list",
			"id": "50136d17-3759-4c4e-be30-d16afb1cf5a8",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.invites:read`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/admin.inviteRequests.list?team_id=amet&cursor=amet&limit=-60142516",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.inviteRequests.list"
					],
					"query": [
						{
							"key": "team_id",
							"value": "amet",
							"description": "ID for the workspace where the invite requests were made."
						},
						{
							"key": "cursor",
							"value": "amet",
							"description": "Value of the `next_cursor` field sent as part of the previous API response"
						},
						{
							"key": "limit",
							"value": "-60142516",
							"description": "The number of results that will be returned by the API on each invocation. Must be between 1 - 1000, both inclusive"
						}
					]
				},
				"description": "List all pending workspace invite requests."
			},
			"response": [
				{
					"id": "25922681-720d-4ba1-a768-4018d55d19df",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.invites:read`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.inviteRequests.list?team_id=amet&cursor=amet&limit=-60142516",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.inviteRequests.list"
							],
							"query": [
								{
									"key": "team_id",
									"value": "amet"
								},
								{
									"key": "cursor",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "1ec14b3b-543e-4b4a-975e-ae34193ab3b1",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.invites:read`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.inviteRequests.list?team_id=amet&cursor=amet&limit=-60142516",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.inviteRequests.list"
							],
							"query": [
								{
									"key": "team_id",
									"value": "amet"
								},
								{
									"key": "cursor",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin teams admins list",
			"id": "878ed6b3-a724-4c26-885f-ecc607621bed",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/admin.teams.admins.list?token=amet&limit=-60142516&cursor=amet&team_id=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.teams.admins.list"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "(Required) Authentication token. Requires scope: `admin.teams:read`"
						},
						{
							"key": "limit",
							"value": "-60142516",
							"description": "The maximum number of items to return."
						},
						{
							"key": "cursor",
							"value": "amet",
							"description": "Set `cursor` to `next_cursor` returned by the previous call to list items in the next page."
						},
						{
							"key": "team_id",
							"value": "amet",
							"description": "(Required) "
						}
					]
				},
				"description": "List all of the admins on a given workspace."
			},
			"response": [
				{
					"id": "20d64d76-9e62-4820-ae27-d7485340276e",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.teams.admins.list?token=amet&limit=-60142516&cursor=amet&team_id=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.teams.admins.list"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								},
								{
									"key": "cursor",
									"value": "amet"
								},
								{
									"key": "team_id",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"admin_ids\": [\n    \"U1234\"\n  ],\n  \"ok\": true\n}"
				},
				{
					"id": "6c9c3f49-f2d9-4a67-94f5-caff3c9d2fa3",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.teams.admins.list?token=amet&limit=-60142516&cursor=amet&team_id=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.teams.admins.list"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								},
								{
									"key": "cursor",
									"value": "amet"
								},
								{
									"key": "team_id",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin teams create",
			"id": "c76ddcbb-766f-4f49-983f-f4808116bfe0",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "team_domain",
							"value": "in pariatur magna",
							"description": "(Required) Team domain (for example, slacksoftballteam)."
						},
						{
							"key": "team_name",
							"value": "nisi sed officia culpa",
							"description": "(Required) Team name (for example, Slack Softball Team)."
						},
						{
							"key": "team_description",
							"value": "cupidatat enim",
							"description": "Description for the team."
						},
						{
							"key": "team_discoverability",
							"value": "labore in ea",
							"description": "Who can join the team. A team's discoverability can be `open`, `closed`, `invite_only`, or `unlisted`."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.teams.create",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.teams.create"
					]
				},
				"description": "Create an Enterprise team."
			},
			"response": [
				{
					"id": "1bec07aa-d2f6-4f58-859f-e4ee5ca9fc03",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Team domain (for example, slacksoftballteam).",
									"key": "team_domain",
									"value": "in pariatur magna"
								},
								{
									"description": "(Required) Team name (for example, Slack Softball Team).",
									"key": "team_name",
									"value": "nisi sed officia culpa"
								},
								{
									"description": "Description for the team.",
									"key": "team_description",
									"value": "cupidatat enim"
								},
								{
									"description": "Who can join the team. A team's discoverability can be `open`, `closed`, `invite_only`, or `unlisted`.",
									"key": "team_discoverability",
									"value": "labore in ea"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.teams.create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.teams.create"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"team\": \"T12345\"\n}"
				},
				{
					"id": "46813d3c-d72c-4908-8b7b-7c4e07fdd740",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Team domain (for example, slacksoftballteam).",
									"key": "team_domain",
									"value": "in pariatur magna"
								},
								{
									"description": "(Required) Team name (for example, Slack Softball Team).",
									"key": "team_name",
									"value": "nisi sed officia culpa"
								},
								{
									"description": "Description for the team.",
									"key": "team_description",
									"value": "cupidatat enim"
								},
								{
									"description": "Who can join the team. A team's discoverability can be `open`, `closed`, `invite_only`, or `unlisted`.",
									"key": "team_discoverability",
									"value": "labore in ea"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.teams.create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.teams.create"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin teams list",
			"id": "7a1b9ccc-0aec-4701-99cc-ef189abb3161",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.teams:read`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/admin.teams.list?limit=-60142516&cursor=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.teams.list"
					],
					"query": [
						{
							"key": "limit",
							"value": "-60142516",
							"description": "The maximum number of items to return. Must be between 1 - 100 both inclusive."
						},
						{
							"key": "cursor",
							"value": "amet",
							"description": "Set `cursor` to `next_cursor` returned by the previous call to list items in the next page."
						}
					]
				},
				"description": "List all teams on an Enterprise organization"
			},
			"response": [
				{
					"id": "9fe59374-8016-4899-ae79-3e7c6b519d5d",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.teams:read`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.teams.list?limit=-60142516&cursor=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.teams.list"
							],
							"query": [
								{
									"key": "limit",
									"value": "-60142516"
								},
								{
									"key": "cursor",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"teams\": [\n    {\n      \"discoverability\": \"hidden\",\n      \"id\": \"T1234\",\n      \"name\": \"My Team\",\n      \"primary_owner\": {\n        \"email\": \"bront@slack.com\",\n        \"user_id\": \"W1234\"\n      },\n      \"team_url\": \"https://subarachnoid.slack.com/\"\n    }\n  ]\n}"
				},
				{
					"id": "821bd71f-35a4-40ac-8422-304ecf8b4d0e",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.teams:read`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.teams.list?limit=-60142516&cursor=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.teams.list"
							],
							"query": [
								{
									"key": "limit",
									"value": "-60142516"
								},
								{
									"key": "cursor",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin teams owners list",
			"id": "6d398d5c-6752-4697-88d1-9530c9dd7594",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/admin.teams.owners.list?token=amet&team_id=amet&limit=-60142516&cursor=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.teams.owners.list"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "(Required) Authentication token. Requires scope: `admin.teams:read`"
						},
						{
							"key": "team_id",
							"value": "amet",
							"description": "(Required) "
						},
						{
							"key": "limit",
							"value": "-60142516",
							"description": "The maximum number of items to return. Must be between 1 - 1000 both inclusive."
						},
						{
							"key": "cursor",
							"value": "amet",
							"description": "Set `cursor` to `next_cursor` returned by the previous call to list items in the next page."
						}
					]
				},
				"description": "List all of the owners on a given workspace."
			},
			"response": [
				{
					"id": "cb9bcaf0-3745-4869-a7c1-92e2c68da284",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.teams.owners.list?token=amet&team_id=amet&limit=-60142516&cursor=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.teams.owners.list"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "team_id",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								},
								{
									"key": "cursor",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"owner_ids\": [\n    \"U1234\"\n  ]\n}"
				},
				{
					"id": "46a61b13-2c84-4ab0-8c34-c5c17d87e5c6",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.teams.owners.list?token=amet&team_id=amet&limit=-60142516&cursor=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.teams.owners.list"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "team_id",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								},
								{
									"key": "cursor",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin teams settings info",
			"id": "ed3da2c8-0f9e-4707-884e-453c9dc69ec2",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.teams:read`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/admin.teams.settings.info?team_id=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.teams.settings.info"
					],
					"query": [
						{
							"key": "team_id",
							"value": "amet",
							"description": "(Required) "
						}
					]
				},
				"description": "Fetch information about settings in a workspace"
			},
			"response": [
				{
					"id": "b565f726-4105-4fac-a369-e770571520b8",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.teams:read`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.teams.settings.info?team_id=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.teams.settings.info"
							],
							"query": [
								{
									"key": "team_id",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"team\": {\n    \"default_channels\": \"array\",\n    \"domain\": \"string\",\n    \"email_domain\": \"string\",\n    \"enterprise_id\": \"string\",\n    \"enterprise_name\": \"string\",\n    \"icon\": \"array\",\n    \"id\": \"string\",\n    \"name\": \"string\"\n  }\n}"
				},
				{
					"id": "5982b0ea-9ebd-4bdf-9730-612f4d51aea0",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.teams:read`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.teams.settings.info?team_id=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.teams.settings.info"
							],
							"query": [
								{
									"key": "team_id",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin teams settings set Default Channels",
			"id": "fccfdc59-2be1-4ad4-aabc-4653987252b3",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "token",
							"value": "ad voluptate in dolor",
							"description": "(Required) Authentication token. Requires scope: `admin.teams:write`"
						},
						{
							"key": "team_id",
							"value": "sint officia voluptate eiusmod",
							"description": "(Required) ID for the workspace to set the default channel for."
						},
						{
							"key": "channel_ids",
							"value": "fugiat reprehenderit est",
							"description": "(Required) An array of channel IDs."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.teams.settings.setDefaultChannels",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.teams.settings.setDefaultChannels"
					]
				},
				"description": "Set the default channels of a workspace."
			},
			"response": [
				{
					"id": "d7f272c2-d392-4b9d-9619-f2474ba85896",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
									"key": "token",
									"value": "ad voluptate in dolor"
								},
								{
									"description": "(Required) ID for the workspace to set the default channel for.",
									"key": "team_id",
									"value": "sint officia voluptate eiusmod"
								},
								{
									"description": "(Required) An array of channel IDs.",
									"key": "channel_ids",
									"value": "fugiat reprehenderit est"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.teams.settings.setDefaultChannels",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.teams.settings.setDefaultChannels"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "66efc19f-75ff-4bf7-88a9-90c8ef81d887",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
									"key": "token",
									"value": "ad voluptate in dolor"
								},
								{
									"description": "(Required) ID for the workspace to set the default channel for.",
									"key": "team_id",
									"value": "sint officia voluptate eiusmod"
								},
								{
									"description": "(Required) An array of channel IDs.",
									"key": "channel_ids",
									"value": "fugiat reprehenderit est"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.teams.settings.setDefaultChannels",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.teams.settings.setDefaultChannels"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin teams settings set Description",
			"id": "d3e3b8cb-8e78-48e0-a063-39d3e5a59272",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "team_id",
							"value": "eiusmod",
							"description": "(Required) ID for the workspace to set the description for."
						},
						{
							"key": "description",
							"value": "dolor Lorem Ut",
							"description": "(Required) The new description for the workspace."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.teams.settings.setDescription",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.teams.settings.setDescription"
					]
				},
				"description": "Set the description of a given workspace."
			},
			"response": [
				{
					"id": "b753e850-c68d-49c7-a47b-f7e6cfc1a60c",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) ID for the workspace to set the description for.",
									"key": "team_id",
									"value": "eiusmod"
								},
								{
									"description": "(Required) The new description for the workspace.",
									"key": "description",
									"value": "dolor Lorem Ut"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.teams.settings.setDescription",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.teams.settings.setDescription"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "7d764140-83cc-4f49-8c55-c44e9847af4e",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) ID for the workspace to set the description for.",
									"key": "team_id",
									"value": "eiusmod"
								},
								{
									"description": "(Required) The new description for the workspace.",
									"key": "description",
									"value": "dolor Lorem Ut"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.teams.settings.setDescription",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.teams.settings.setDescription"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin teams settings set Discoverability",
			"id": "cac24fac-d606-4ceb-a2f5-5bf0efaaed55",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "team_id",
							"value": "Lorem proident Ut amet",
							"description": "(Required) The ID of the workspace to set discoverability on."
						},
						{
							"key": "discoverability",
							"value": "incididunt Duis amet",
							"description": "(Required) This workspace's discovery setting. It must be set to one of `open`, `invite_only`, `closed`, or `unlisted`."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.teams.settings.setDiscoverability",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.teams.settings.setDiscoverability"
					]
				},
				"description": "An API method that allows admins to set the discoverability of a given workspace"
			},
			"response": [
				{
					"id": "361ed7e9-aeba-441e-8643-76cacc0c3763",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The ID of the workspace to set discoverability on.",
									"key": "team_id",
									"value": "Lorem proident Ut amet"
								},
								{
									"description": "(Required) This workspace's discovery setting. It must be set to one of `open`, `invite_only`, `closed`, or `unlisted`.",
									"key": "discoverability",
									"value": "incididunt Duis amet"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.teams.settings.setDiscoverability",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.teams.settings.setDiscoverability"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "994edd71-aabc-4148-9012-84c7a4510349",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The ID of the workspace to set discoverability on.",
									"key": "team_id",
									"value": "Lorem proident Ut amet"
								},
								{
									"description": "(Required) This workspace's discovery setting. It must be set to one of `open`, `invite_only`, `closed`, or `unlisted`.",
									"key": "discoverability",
									"value": "incididunt Duis amet"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.teams.settings.setDiscoverability",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.teams.settings.setDiscoverability"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin teams settings set Icon",
			"id": "8a080672-ac40-4461-97f7-cdd20117c4c0",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "token",
							"value": "non do tempor voluptate dolor",
							"description": "(Required) Authentication token. Requires scope: `admin.teams:write`"
						},
						{
							"key": "image_url",
							"value": "tempor sunt veniam Lorem enim",
							"description": "(Required) Image URL for the icon"
						},
						{
							"key": "team_id",
							"value": "Duis non",
							"description": "(Required) ID for the workspace to set the icon for."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.teams.settings.setIcon",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.teams.settings.setIcon"
					]
				},
				"description": "Sets the icon of a workspace."
			},
			"response": [
				{
					"id": "4a5c49c0-ace6-4a75-b1a2-3b08b40fae84",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
									"key": "token",
									"value": "non do tempor voluptate dolor"
								},
								{
									"description": "(Required) Image URL for the icon",
									"key": "image_url",
									"value": "tempor sunt veniam Lorem enim"
								},
								{
									"description": "(Required) ID for the workspace to set the icon for.",
									"key": "team_id",
									"value": "Duis non"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.teams.settings.setIcon",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.teams.settings.setIcon"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "adef43b6-0910-4733-aca1-febecb6ab64a",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
									"key": "token",
									"value": "non do tempor voluptate dolor"
								},
								{
									"description": "(Required) Image URL for the icon",
									"key": "image_url",
									"value": "tempor sunt veniam Lorem enim"
								},
								{
									"description": "(Required) ID for the workspace to set the icon for.",
									"key": "team_id",
									"value": "Duis non"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.teams.settings.setIcon",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.teams.settings.setIcon"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin teams settings set Name",
			"id": "0083ebb5-3b6c-4d3c-85af-53342fa44840",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "team_id",
							"value": "quis",
							"description": "(Required) ID for the workspace to set the name for."
						},
						{
							"key": "name",
							"value": "sunt reprehenderit",
							"description": "(Required) The new name of the workspace."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.teams.settings.setName",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.teams.settings.setName"
					]
				},
				"description": "Set the name of a given workspace."
			},
			"response": [
				{
					"id": "31300a6d-5115-4e54-8a0e-ba785efd433b",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) ID for the workspace to set the name for.",
									"key": "team_id",
									"value": "quis"
								},
								{
									"description": "(Required) The new name of the workspace.",
									"key": "name",
									"value": "sunt reprehenderit"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.teams.settings.setName",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.teams.settings.setName"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "09856e24-be6d-4bf2-a6f5-5b4e7da18b36",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) ID for the workspace to set the name for.",
									"key": "team_id",
									"value": "quis"
								},
								{
									"description": "(Required) The new name of the workspace.",
									"key": "name",
									"value": "sunt reprehenderit"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.teams.settings.setName",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.teams.settings.setName"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin usergroups add Channels",
			"id": "ffd117cb-9717-4a98-bf57-6a5162169e25",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.usergroups:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "usergroup_id",
							"value": "officia consectetur",
							"description": "(Required) ID of the IDP group to add default channels for."
						},
						{
							"key": "channel_ids",
							"value": "ad ea nulla et",
							"description": "(Required) Comma separated string of channel IDs."
						},
						{
							"key": "team_id",
							"value": "in cupidatat deserunt",
							"description": "The workspace to add default channels in."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.usergroups.addChannels",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.usergroups.addChannels"
					]
				},
				"description": "Add one or more default channels to an IDP group."
			},
			"response": [
				{
					"id": "ee9241bb-9e06-4a1b-b9bf-baa4e72f8197",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.usergroups:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) ID of the IDP group to add default channels for.",
									"key": "usergroup_id",
									"value": "officia consectetur"
								},
								{
									"description": "(Required) Comma separated string of channel IDs.",
									"key": "channel_ids",
									"value": "ad ea nulla et"
								},
								{
									"description": "The workspace to add default channels in.",
									"key": "team_id",
									"value": "in cupidatat deserunt"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.usergroups.addChannels",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.usergroups.addChannels"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "190c1c83-05b4-4bcd-8bc1-f80b8acc0992",
					"name": "Typical error response if the token provided is not associated with an Org Admin or Owner",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.usergroups:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) ID of the IDP group to add default channels for.",
									"key": "usergroup_id",
									"value": "officia consectetur"
								},
								{
									"description": "(Required) Comma separated string of channel IDs.",
									"key": "channel_ids",
									"value": "ad ea nulla et"
								},
								{
									"description": "The workspace to add default channels in.",
									"key": "team_id",
									"value": "in cupidatat deserunt"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.usergroups.addChannels",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.usergroups.addChannels"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"not_an_admin\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin usergroups add Teams",
			"id": "53a50e46-244f-4ed4-ab6d-73ea1b73d088",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "usergroup_id",
							"value": "Lorem ut eu dolore esse",
							"description": "(Required) An encoded usergroup (IDP Group) ID."
						},
						{
							"key": "team_ids",
							"value": "adipisicing",
							"description": "(Required) A comma separated list of encoded team (workspace) IDs. Each workspace *MUST* belong to the organization associated with the token."
						},
						{
							"key": "auto_provision",
							"value": "true",
							"description": "When `true`, this method automatically creates new workspace accounts for the IDP group members."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.usergroups.addTeams",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.usergroups.addTeams"
					]
				},
				"description": "Associate one or more default workspaces with an organization-wide IDP group."
			},
			"response": [
				{
					"id": "0de8f1df-d9d0-49cb-a9b1-586ab04729b2",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) An encoded usergroup (IDP Group) ID.",
									"key": "usergroup_id",
									"value": "Lorem ut eu dolore esse"
								},
								{
									"description": "(Required) A comma separated list of encoded team (workspace) IDs. Each workspace *MUST* belong to the organization associated with the token.",
									"key": "team_ids",
									"value": "adipisicing"
								},
								{
									"description": "When `true`, this method automatically creates new workspace accounts for the IDP group members.",
									"key": "auto_provision",
									"value": "true"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.usergroups.addTeams",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.usergroups.addTeams"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "42957aab-2384-42d1-b656-d092616b62de",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.teams:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) An encoded usergroup (IDP Group) ID.",
									"key": "usergroup_id",
									"value": "Lorem ut eu dolore esse"
								},
								{
									"description": "(Required) A comma separated list of encoded team (workspace) IDs. Each workspace *MUST* belong to the organization associated with the token.",
									"key": "team_ids",
									"value": "adipisicing"
								},
								{
									"description": "When `true`, this method automatically creates new workspace accounts for the IDP group members.",
									"key": "auto_provision",
									"value": "true"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.usergroups.addTeams",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.usergroups.addTeams"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin usergroups list Channels",
			"id": "396c2df0-f930-4370-b896-a2249e65a4a3",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.usergroups:read`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/admin.usergroups.listChannels?usergroup_id=amet&team_id=amet&include_num_members=false",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.usergroups.listChannels"
					],
					"query": [
						{
							"key": "usergroup_id",
							"value": "amet",
							"description": "(Required) ID of the IDP group to list default channels for."
						},
						{
							"key": "team_id",
							"value": "amet",
							"description": "ID of the the workspace."
						},
						{
							"key": "include_num_members",
							"value": "false",
							"description": "Flag to include or exclude the count of members per channel."
						}
					]
				},
				"description": "List the channels linked to an org-level IDP group (user group)."
			},
			"response": [
				{
					"id": "a11074b4-c7e4-4c2d-a50b-a64cd2c2bc96",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.usergroups:read`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.usergroups.listChannels?usergroup_id=amet&team_id=amet&include_num_members=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.usergroups.listChannels"
							],
							"query": [
								{
									"key": "usergroup_id",
									"value": "amet"
								},
								{
									"key": "team_id",
									"value": "amet"
								},
								{
									"key": "include_num_members",
									"value": "true"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"channels\": [\n    {\n      \"id\": \"C024BE91L\",\n      \"name\": \"fun\",\n      \"num_members\": 34,\n      \"team_id\": \"T024BE911\"\n    },\n    {\n      \"id\": \"C024BE91K\",\n      \"name\": \"more fun\",\n      \"team_id\": \"T024BE912\"\n    },\n    {\n      \"id\": \"C024BE91M\",\n      \"is_redacted\": true,\n      \"name\": \"public-channel\",\n      \"num_members\": 34,\n      \"team_id\": \"T024BE911\"\n    },\n    {\n      \"id\": \"C024BE91N\",\n      \"name\": \"some more fun\",\n      \"team_id\": \"T024BE921\"\n    }\n  ],\n  \"ok\": true\n}"
				},
				{
					"id": "eddc06e8-062d-470f-aeca-4e3d41ad2f8c",
					"name": "Typical error response if the token provided is not associated with an Org Admin or Owner",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.usergroups:read`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.usergroups.listChannels?usergroup_id=amet&team_id=amet&include_num_members=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.usergroups.listChannels"
							],
							"query": [
								{
									"key": "usergroup_id",
									"value": "amet"
								},
								{
									"key": "team_id",
									"value": "amet"
								},
								{
									"key": "include_num_members",
									"value": "true"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"not_an_admin\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin usergroups remove Channels",
			"id": "5e4aa3f8-7a19-4bb2-8f5e-1389edad96f4",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.usergroups:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "usergroup_id",
							"value": "amet exercitation sed",
							"description": "(Required) ID of the IDP Group"
						},
						{
							"key": "channel_ids",
							"value": "laboris minim",
							"description": "(Required) Comma-separated string of channel IDs"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.usergroups.removeChannels",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.usergroups.removeChannels"
					]
				},
				"description": "Remove one or more default channels from an org-level IDP group (user group)."
			},
			"response": [
				{
					"id": "f120095f-aa35-41a2-84ab-b81b9c44bcef",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.usergroups:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) ID of the IDP Group",
									"key": "usergroup_id",
									"value": "amet exercitation sed"
								},
								{
									"description": "(Required) Comma-separated string of channel IDs",
									"key": "channel_ids",
									"value": "laboris minim"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.usergroups.removeChannels",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.usergroups.removeChannels"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "0db64eba-8bdf-4f32-b8b7-8685d30846b0",
					"name": "Typical error response if the token provided is not associated with an Org Admin or Owner",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.usergroups:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) ID of the IDP Group",
									"key": "usergroup_id",
									"value": "amet exercitation sed"
								},
								{
									"description": "(Required) Comma-separated string of channel IDs",
									"key": "channel_ids",
									"value": "laboris minim"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.usergroups.removeChannels",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.usergroups.removeChannels"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"not_an_admin\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin users assign",
			"id": "dc3f27d1-ab2b-4717-8ce3-ef4ee71f6c61",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "team_id",
							"value": "exercitation ea eu nulla nisi",
							"description": "(Required) The ID (`T1234`) of the workspace."
						},
						{
							"key": "user_id",
							"value": "elit nulla deserunt Excepteur officia",
							"description": "(Required) The ID of the user to add to the workspace."
						},
						{
							"key": "is_restricted",
							"value": "false",
							"description": "True if user should be added to the workspace as a guest."
						},
						{
							"key": "is_ultra_restricted",
							"value": "false",
							"description": "True if user should be added to the workspace as a single-channel guest."
						},
						{
							"key": "channel_ids",
							"value": "ipsum ea quis",
							"description": "Comma separated values of channel IDs to add user in the new workspace."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.users.assign",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.users.assign"
					]
				},
				"description": "Add an Enterprise user to a workspace."
			},
			"response": [
				{
					"id": "90683e33-9b53-48ff-ad72-f76012c0def1",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The ID (`T1234`) of the workspace.",
									"key": "team_id",
									"value": "exercitation ea eu nulla nisi"
								},
								{
									"description": "(Required) The ID of the user to add to the workspace.",
									"key": "user_id",
									"value": "elit nulla deserunt Excepteur officia"
								},
								{
									"description": "True if user should be added to the workspace as a guest.",
									"key": "is_restricted",
									"value": "false"
								},
								{
									"description": "True if user should be added to the workspace as a single-channel guest.",
									"key": "is_ultra_restricted",
									"value": "false"
								},
								{
									"description": "Comma separated values of channel IDs to add user in the new workspace.",
									"key": "channel_ids",
									"value": "ipsum ea quis"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.users.assign",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.users.assign"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "7e324e78-f87b-42ec-a97b-b2e37d5e18ea",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The ID (`T1234`) of the workspace.",
									"key": "team_id",
									"value": "exercitation ea eu nulla nisi"
								},
								{
									"description": "(Required) The ID of the user to add to the workspace.",
									"key": "user_id",
									"value": "elit nulla deserunt Excepteur officia"
								},
								{
									"description": "True if user should be added to the workspace as a guest.",
									"key": "is_restricted",
									"value": "false"
								},
								{
									"description": "True if user should be added to the workspace as a single-channel guest.",
									"key": "is_ultra_restricted",
									"value": "false"
								},
								{
									"description": "Comma separated values of channel IDs to add user in the new workspace.",
									"key": "channel_ids",
									"value": "ipsum ea quis"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.users.assign",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.users.assign"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin users invite",
			"id": "2b147749-dba7-4211-8d37-77ed675e4184",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "team_id",
							"value": "anim quis minim cupidatat in",
							"description": "(Required) The ID (`T1234`) of the workspace."
						},
						{
							"key": "email",
							"value": "laboris",
							"description": "(Required) The email address of the person to invite."
						},
						{
							"key": "channel_ids",
							"value": "do ad",
							"description": "(Required) A comma-separated list of `channel_id`s for this user to join. At least one channel is required."
						},
						{
							"key": "custom_message",
							"value": "ipsum dolore non",
							"description": "An optional message to send to the user in the invite email."
						},
						{
							"key": "real_name",
							"value": "est consectetur quis",
							"description": "Full name of the user."
						},
						{
							"key": "resend",
							"value": "false",
							"description": "Allow this invite to be resent in the future if a user has not signed up yet. (default: false)"
						},
						{
							"key": "is_restricted",
							"value": "false",
							"description": "Is this user a multi-channel guest user? (default: false)"
						},
						{
							"key": "is_ultra_restricted",
							"value": "true",
							"description": "Is this user a single channel guest user? (default: false)"
						},
						{
							"key": "guest_expiration_ts",
							"value": "anim in sed eu",
							"description": "Timestamp when guest account should be disabled. Only include this timestamp if you are inviting a guest user and you want their account to expire on a certain date."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.users.invite",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.users.invite"
					]
				},
				"description": "Invite a user to a workspace."
			},
			"response": [
				{
					"id": "d8f76458-1769-461e-8a0e-2448560a3ef3",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The ID (`T1234`) of the workspace.",
									"key": "team_id",
									"value": "anim quis minim cupidatat in"
								},
								{
									"description": "(Required) The email address of the person to invite.",
									"key": "email",
									"value": "laboris"
								},
								{
									"description": "(Required) A comma-separated list of `channel_id`s for this user to join. At least one channel is required.",
									"key": "channel_ids",
									"value": "do ad"
								},
								{
									"description": "An optional message to send to the user in the invite email.",
									"key": "custom_message",
									"value": "ipsum dolore non"
								},
								{
									"description": "Full name of the user.",
									"key": "real_name",
									"value": "est consectetur quis"
								},
								{
									"description": "Allow this invite to be resent in the future if a user has not signed up yet. (default: false)",
									"key": "resend",
									"value": "false"
								},
								{
									"description": "Is this user a multi-channel guest user? (default: false)",
									"key": "is_restricted",
									"value": "false"
								},
								{
									"description": "Is this user a single channel guest user? (default: false)",
									"key": "is_ultra_restricted",
									"value": "true"
								},
								{
									"description": "Timestamp when guest account should be disabled. Only include this timestamp if you are inviting a guest user and you want their account to expire on a certain date.",
									"key": "guest_expiration_ts",
									"value": "anim in sed eu"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.users.invite",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.users.invite"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "df703808-5909-4331-8a73-c6370c57661c",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The ID (`T1234`) of the workspace.",
									"key": "team_id",
									"value": "anim quis minim cupidatat in"
								},
								{
									"description": "(Required) The email address of the person to invite.",
									"key": "email",
									"value": "laboris"
								},
								{
									"description": "(Required) A comma-separated list of `channel_id`s for this user to join. At least one channel is required.",
									"key": "channel_ids",
									"value": "do ad"
								},
								{
									"description": "An optional message to send to the user in the invite email.",
									"key": "custom_message",
									"value": "ipsum dolore non"
								},
								{
									"description": "Full name of the user.",
									"key": "real_name",
									"value": "est consectetur quis"
								},
								{
									"description": "Allow this invite to be resent in the future if a user has not signed up yet. (default: false)",
									"key": "resend",
									"value": "false"
								},
								{
									"description": "Is this user a multi-channel guest user? (default: false)",
									"key": "is_restricted",
									"value": "false"
								},
								{
									"description": "Is this user a single channel guest user? (default: false)",
									"key": "is_ultra_restricted",
									"value": "true"
								},
								{
									"description": "Timestamp when guest account should be disabled. Only include this timestamp if you are inviting a guest user and you want their account to expire on a certain date.",
									"key": "guest_expiration_ts",
									"value": "anim in sed eu"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.users.invite",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.users.invite"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin users list",
			"id": "2558ed79-671c-47ec-aed5-33689af681c4",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.users:read`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/admin.users.list?team_id=amet&cursor=amet&limit=-60142516",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.users.list"
					],
					"query": [
						{
							"key": "team_id",
							"value": "amet",
							"description": "(Required) The ID (`T1234`) of the workspace."
						},
						{
							"key": "cursor",
							"value": "amet",
							"description": "Set `cursor` to `next_cursor` returned by the previous call to list items in the next page."
						},
						{
							"key": "limit",
							"value": "-60142516",
							"description": "Limit for how many users to be retrieved per page"
						}
					]
				},
				"description": "List users on a workspace"
			},
			"response": [
				{
					"id": "491d70a9-f8d8-41dc-a7cc-6adbd2ed72cb",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.users:read`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.users.list?team_id=amet&cursor=amet&limit=-60142516",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.users.list"
							],
							"query": [
								{
									"key": "team_id",
									"value": "amet"
								},
								{
									"key": "cursor",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"users\": [\n    {\n      \"email\": \"bront@slack.com\",\n      \"id\": \"T1234\",\n      \"is_admin\": false,\n      \"is_bot\": false,\n      \"is_owner\": false,\n      \"is_primary_owner\": false,\n      \"is_restricted\": false,\n      \"is_ultra_restricted\": false\n    }\n  ]\n}"
				},
				{
					"id": "1979ceee-c2b5-4ce5-8cd7-2d1444248b10",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.users:read`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin.users.list?team_id=amet&cursor=amet&limit=-60142516",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.users.list"
							],
							"query": [
								{
									"key": "team_id",
									"value": "amet"
								},
								{
									"key": "cursor",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin users remove",
			"id": "bc446829-0944-4aff-bef9-50bbf649f71a",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "team_id",
							"value": "fugiat irure ipsum nostrud",
							"description": "(Required) The ID (`T1234`) of the workspace."
						},
						{
							"key": "user_id",
							"value": "",
							"description": "(Required) The ID of the user to remove."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.users.remove",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.users.remove"
					]
				},
				"description": "Remove a user from a workspace."
			},
			"response": [
				{
					"id": "422bfa8e-9282-47bb-b148-6026f5bc0611",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The ID (`T1234`) of the workspace.",
									"key": "team_id",
									"value": "fugiat irure ipsum nostrud"
								},
								{
									"description": "(Required) The ID of the user to remove.",
									"key": "user_id",
									"value": ""
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.users.remove",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.users.remove"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "a39b9349-64ff-441c-ab96-9c635e34f5e2",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The ID (`T1234`) of the workspace.",
									"key": "team_id",
									"value": "fugiat irure ipsum nostrud"
								},
								{
									"description": "(Required) The ID of the user to remove.",
									"key": "user_id",
									"value": ""
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.users.remove",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.users.remove"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin users session invalidate",
			"id": "545e2024-8d72-4fcd-900d-2da37767d98d",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "team_id",
							"value": "veniam esse",
							"description": "(Required) ID of the team that the session belongs to"
						},
						{
							"key": "session_id",
							"value": "-24796080",
							"description": "(Required) "
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.users.session.invalidate",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.users.session.invalidate"
					]
				},
				"description": "Invalidate a single session for a user by session_id"
			},
			"response": [
				{
					"id": "98019bd2-0097-4d9d-aebb-c0fc8aa5b130",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) ID of the team that the session belongs to",
									"key": "team_id",
									"value": "veniam esse"
								},
								{
									"description": "(Required) ",
									"key": "session_id",
									"value": "-24796080"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.users.session.invalidate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.users.session.invalidate"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "39d502d0-8847-44c6-9285-08ff6b3bcb0a",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) ID of the team that the session belongs to",
									"key": "team_id",
									"value": "veniam esse"
								},
								{
									"description": "(Required) ",
									"key": "session_id",
									"value": "-24796080"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.users.session.invalidate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.users.session.invalidate"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin users session reset",
			"id": "3f34f51c-fa1b-4d92-96ce-3fa6c6b6a2e1",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "user_id",
							"value": "quis amet proident",
							"description": "(Required) The ID of the user to wipe sessions for"
						},
						{
							"key": "mobile_only",
							"value": "true",
							"description": "Only expire mobile sessions (default: false)"
						},
						{
							"key": "web_only",
							"value": "true",
							"description": "Only expire web sessions (default: false)"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.users.session.reset",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.users.session.reset"
					]
				},
				"description": "Wipes all valid sessions on all devices for a given user"
			},
			"response": [
				{
					"id": "8fe365e1-81de-4c8a-8448-d97d81c0a043",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The ID of the user to wipe sessions for",
									"key": "user_id",
									"value": "quis amet proident"
								},
								{
									"description": "Only expire mobile sessions (default: false)",
									"key": "mobile_only",
									"value": "true"
								},
								{
									"description": "Only expire web sessions (default: false)",
									"key": "web_only",
									"value": "true"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.users.session.reset",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.users.session.reset"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "92726469-c3a0-48d5-87e7-52b57b94f5db",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The ID of the user to wipe sessions for",
									"key": "user_id",
									"value": "quis amet proident"
								},
								{
									"description": "Only expire mobile sessions (default: false)",
									"key": "mobile_only",
									"value": "true"
								},
								{
									"description": "Only expire web sessions (default: false)",
									"key": "web_only",
									"value": "true"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.users.session.reset",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.users.session.reset"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin users set Admin",
			"id": "64666701-e8e5-43fa-b447-1986c73ccf6a",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "team_id",
							"value": "veniam dolore ipsum",
							"description": "(Required) The ID (`T1234`) of the workspace."
						},
						{
							"key": "user_id",
							"value": "proident dolore",
							"description": "(Required) The ID of the user to designate as an admin."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.users.setAdmin",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.users.setAdmin"
					]
				},
				"description": "Set an existing guest, regular user, or owner to be an admin user."
			},
			"response": [
				{
					"id": "5786b195-335e-41e7-a7f4-5a1217e80f93",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The ID (`T1234`) of the workspace.",
									"key": "team_id",
									"value": "veniam dolore ipsum"
								},
								{
									"description": "(Required) The ID of the user to designate as an admin.",
									"key": "user_id",
									"value": "proident dolore"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.users.setAdmin",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.users.setAdmin"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "69e374b2-7e82-4fe0-a1d5-07d2d1f5b665",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The ID (`T1234`) of the workspace.",
									"key": "team_id",
									"value": "veniam dolore ipsum"
								},
								{
									"description": "(Required) The ID of the user to designate as an admin.",
									"key": "user_id",
									"value": "proident dolore"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.users.setAdmin",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.users.setAdmin"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin users set Expiration",
			"id": "0aad0ed6-7e45-4d2d-a9e3-74dcb098c0dd",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "team_id",
							"value": "sed occaecat",
							"description": "(Required) The ID (`T1234`) of the workspace."
						},
						{
							"key": "user_id",
							"value": "commodo qui",
							"description": "(Required) The ID of the user to set an expiration for."
						},
						{
							"key": "expiration_ts",
							"value": "-86972646",
							"description": "(Required) Timestamp when guest account should be disabled."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.users.setExpiration",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.users.setExpiration"
					]
				},
				"description": "Set an expiration for a guest user"
			},
			"response": [
				{
					"id": "f638b934-09b3-486c-a7f8-45cfabb2490b",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The ID (`T1234`) of the workspace.",
									"key": "team_id",
									"value": "sed occaecat"
								},
								{
									"description": "(Required) The ID of the user to set an expiration for.",
									"key": "user_id",
									"value": "commodo qui"
								},
								{
									"description": "(Required) Timestamp when guest account should be disabled.",
									"key": "expiration_ts",
									"value": "-86972646"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.users.setExpiration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.users.setExpiration"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "777c9441-f32b-4105-af76-23963b8ab2f6",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The ID (`T1234`) of the workspace.",
									"key": "team_id",
									"value": "sed occaecat"
								},
								{
									"description": "(Required) The ID of the user to set an expiration for.",
									"key": "user_id",
									"value": "commodo qui"
								},
								{
									"description": "(Required) Timestamp when guest account should be disabled.",
									"key": "expiration_ts",
									"value": "-86972646"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.users.setExpiration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.users.setExpiration"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin users set Owner",
			"id": "2761369b-c385-4304-8695-29b2514ab8b6",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "team_id",
							"value": "ipsum in consequat Duis",
							"description": "(Required) The ID (`T1234`) of the workspace."
						},
						{
							"key": "user_id",
							"value": "do adipisicing",
							"description": "(Required) Id of the user to promote to owner."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.users.setOwner",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.users.setOwner"
					]
				},
				"description": "Set an existing guest, regular user, or admin user to be a workspace owner."
			},
			"response": [
				{
					"id": "755379cd-31c4-4182-bc09-82f129a36738",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The ID (`T1234`) of the workspace.",
									"key": "team_id",
									"value": "ipsum in consequat Duis"
								},
								{
									"description": "(Required) Id of the user to promote to owner.",
									"key": "user_id",
									"value": "do adipisicing"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.users.setOwner",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.users.setOwner"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "b0fe6bff-5eba-4846-aba1-ca3d8a48ef38",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The ID (`T1234`) of the workspace.",
									"key": "team_id",
									"value": "ipsum in consequat Duis"
								},
								{
									"description": "(Required) Id of the user to promote to owner.",
									"key": "user_id",
									"value": "do adipisicing"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.users.setOwner",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.users.setOwner"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "admin users set Regular",
			"id": "1f40de1d-ed37-41e3-a49c-fba73ab2f014",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "team_id",
							"value": "eiusmod",
							"description": "(Required) The ID (`T1234`) of the workspace."
						},
						{
							"key": "user_id",
							"value": "nostrud",
							"description": "(Required) The ID of the user to designate as a regular user."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/admin.users.setRegular",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin.users.setRegular"
					]
				},
				"description": "Set an existing guest user, admin user, or owner to be a regular user."
			},
			"response": [
				{
					"id": "68727267-a8fb-4a38-8976-989293df701b",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The ID (`T1234`) of the workspace.",
									"key": "team_id",
									"value": "eiusmod"
								},
								{
									"description": "(Required) The ID of the user to designate as a regular user.",
									"key": "user_id",
									"value": "nostrud"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.users.setRegular",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.users.setRegular"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "e0b0ef4d-a4af-40b5-b3d4-2638ecd7ae26",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `admin.users:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The ID (`T1234`) of the workspace.",
									"key": "team_id",
									"value": "eiusmod"
								},
								{
									"description": "(Required) The ID of the user to designate as a regular user.",
									"key": "user_id",
									"value": "nostrud"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/admin.users.setRegular",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin.users.setRegular"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "api test",
			"id": "96d056ea-344f-4c9e-a8b5-58cf89ef6e66",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api.test?error=amet&foo=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api.test"
					],
					"query": [
						{
							"key": "error",
							"value": "amet",
							"description": "Error response to return"
						},
						{
							"key": "foo",
							"value": "amet",
							"description": "example property to return"
						}
					]
				},
				"description": "Checks API calling code."
			},
			"response": [
				{
					"id": "7ecf0dc7-523a-4d41-8d7d-52db283aac3b",
					"name": "Standard success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api.test?error=amet&foo=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api.test"
							],
							"query": [
								{
									"key": "error",
									"value": "amet"
								},
								{
									"key": "foo",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "6a204dc5-2456-47ff-8134-87d6ffffcd19",
					"name": "Artificial error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api.test?error=amet&foo=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api.test"
							],
							"query": [
								{
									"key": "error",
									"value": "amet"
								},
								{
									"key": "foo",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"args\": {\n    \"error\": \"my_error\"\n  },\n  \"error\": \"my_error\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "apps event authorizations list",
			"id": "1dde0a65-75e3-4372-beeb-655e3bc1556e",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `authorizations:read`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/apps.event.authorizations.list?event_context=amet&cursor=amet&limit=-60142516",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"apps.event.authorizations.list"
					],
					"query": [
						{
							"key": "event_context",
							"value": "amet",
							"description": "(Required) "
						},
						{
							"key": "cursor",
							"value": "amet"
						},
						{
							"key": "limit",
							"value": "-60142516"
						}
					]
				},
				"description": "Get a list of authorizations for the given event context. Each authorization represents an app installation that the event is visible to."
			},
			"response": [
				{
					"id": "d64e6be3-d006-4ae7-a1da-c232fc2027bc",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `authorizations:read`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/apps.event.authorizations.list?event_context=amet&cursor=amet&limit=-60142516",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apps.event.authorizations.list"
							],
							"query": [
								{
									"key": "event_context",
									"value": "amet"
								},
								{
									"key": "cursor",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"authorizations\": {\n    \"enterprise_id\": \"string\",\n    \"is_bot\": \"string\",\n    \"team_id\": \"string\",\n    \"user_id\": \"string\"\n  },\n  \"ok\": true\n}"
				},
				{
					"id": "d6f1a5e1-d510-4033-96bd-ffc6c9b975fd",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `authorizations:read`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/apps.event.authorizations.list?event_context=amet&cursor=amet&limit=-60142516",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apps.event.authorizations.list"
							],
							"query": [
								{
									"key": "event_context",
									"value": "amet"
								},
								{
									"key": "cursor",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "apps permissions info",
			"id": "ba8429bf-f54e-42d0-9e6c-b611b077d807",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/apps.permissions.info?token=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"apps.permissions.info"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "Authentication token. Requires scope: `none`"
						}
					]
				},
				"description": "Returns list of permissions this app has on a team."
			},
			"response": [
				{
					"id": "ca935816-243b-4e18-a09f-c664d47e2e12",
					"name": "Standard success response when used with a user token",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/apps.permissions.info?token=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apps.permissions.info"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"info\": {\n    \"app_home\": {\n      \"resources\": {\n        \"ids\": [\n          \"D0C0NU1Q8\",\n          \"D0BH95DLH\"\n        ]\n      },\n      \"scopes\": [\n        \"chat:write\",\n        \"im:history\",\n        \"im:read\"\n      ]\n    },\n    \"channel\": {\n      \"resources\": {\n        \"excluded_ids\": [],\n        \"ids\": [\n          \"C061FA5PB\"\n        ],\n        \"wildcard\": false\n      },\n      \"scopes\": [\n        \"channels:read\"\n      ]\n    },\n    \"group\": {\n      \"resources\": {\n        \"ids\": []\n      },\n      \"scopes\": []\n    },\n    \"im\": {\n      \"resources\": {\n        \"ids\": []\n      },\n      \"scopes\": []\n    },\n    \"mpim\": {\n      \"resources\": {\n        \"ids\": []\n      },\n      \"scopes\": []\n    },\n    \"team\": {\n      \"resources\": {\n        \"ids\": []\n      },\n      \"scopes\": []\n    }\n  },\n  \"ok\": true\n}"
				},
				{
					"id": "f3fdfb6c-c024-4bb3-be46-7dcd61f607ef",
					"name": "Standard failure response when used with an invalid token",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/apps.permissions.info?token=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apps.permissions.info"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "apps permissions request",
			"id": "f6af3978-a254-44d5-bd7b-0741311c9ca3",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/apps.permissions.request?token=amet&scopes=amet&trigger_id=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"apps.permissions.request"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "(Required) Authentication token. Requires scope: `none`"
						},
						{
							"key": "scopes",
							"value": "amet",
							"description": "(Required) A comma separated list of scopes to request for"
						},
						{
							"key": "trigger_id",
							"value": "amet",
							"description": "(Required) Token used to trigger the permissions API"
						}
					]
				},
				"description": "Allows an app to request additional scopes"
			},
			"response": [
				{
					"id": "3e2583c0-029f-4ccd-a3ac-6ad81a0c7a7c",
					"name": "Standard success response when used with a user token",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/apps.permissions.request?token=amet&scopes=amet&trigger_id=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apps.permissions.request"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "scopes",
									"value": "amet"
								},
								{
									"key": "trigger_id",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "78005ef1-f0d8-49aa-9a2d-f51c1de6173f",
					"name": "Standard failure response when trigger_id is invalid",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/apps.permissions.request?token=amet&scopes=amet&trigger_id=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apps.permissions.request"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "scopes",
									"value": "amet"
								},
								{
									"key": "trigger_id",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_trigger_id\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "apps permissions resources list",
			"id": "0918b587-3184-446b-9a84-168ab7610ac9",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/apps.permissions.resources.list?token=amet&cursor=amet&limit=-60142516",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"apps.permissions.resources.list"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "(Required) Authentication token. Requires scope: `none`"
						},
						{
							"key": "cursor",
							"value": "amet",
							"description": "Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more detail."
						},
						{
							"key": "limit",
							"value": "-60142516",
							"description": "The maximum number of items to return."
						}
					]
				},
				"description": "Returns list of resource grants this app has on a team."
			},
			"response": [
				{
					"id": "278c110d-9d3e-43be-9d72-713d7a04fb92",
					"name": "Typical successful paginated response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/apps.permissions.resources.list?token=amet&cursor=amet&limit=-60142516",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apps.permissions.resources.list"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "cursor",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"resources\": [\n    {\n      \"id\": \"T0DES3UAN\",\n      \"type\": \"team\"\n    },\n    {\n      \"id\": \"D024BFF1M\",\n      \"type\": \"app_home\"\n    },\n    {\n      \"id\": \"C024BE91L\",\n      \"type\": \"channel\"\n    }\n  ],\n  \"response_metadata\": {\n    \"next_cursor\": \"dGVhbTpDMUg5UkVTR0w=\"\n  }\n}"
				},
				{
					"id": "63b03e7e-5cce-4392-84ba-d003aee85b33",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/apps.permissions.resources.list?token=amet&cursor=amet&limit=-60142516",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apps.permissions.resources.list"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "cursor",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_cursor\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "apps permissions scopes list",
			"id": "799da13a-d66e-43a4-a15e-4775e8593b9e",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/apps.permissions.scopes.list?token=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"apps.permissions.scopes.list"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "(Required) Authentication token. Requires scope: `none`"
						}
					]
				},
				"description": "Returns list of scopes this app has on a team."
			},
			"response": [
				{
					"id": "411c348c-7299-48db-a036-518b42612bb7",
					"name": "Typical successful paginated response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/apps.permissions.scopes.list?token=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apps.permissions.scopes.list"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"scopes\": {\n    \"app_home\": [\n      \"chat:write\",\n      \"im:history\",\n      \"im:read\"\n    ],\n    \"channel\": [\n      \"channels:history\",\n      \"chat:write\"\n    ],\n    \"group\": [\n      \"chat:write\"\n    ],\n    \"im\": [\n      \"chat:write\"\n    ],\n    \"mpim\": [\n      \"chat:write\"\n    ],\n    \"team\": [\n      \"users:read\"\n    ],\n    \"user\": []\n  }\n}"
				},
				{
					"id": "fd74b5b3-6e6f-46f4-aeb7-ace50e343f43",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/apps.permissions.scopes.list?token=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apps.permissions.scopes.list"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "apps permissions users list",
			"id": "dcfb2d69-2216-49d0-8c4a-9c1da1ab5a1d",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/apps.permissions.users.list?token=amet&cursor=amet&limit=-60142516",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"apps.permissions.users.list"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "(Required) Authentication token. Requires scope: `none`"
						},
						{
							"key": "cursor",
							"value": "amet",
							"description": "Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more detail."
						},
						{
							"key": "limit",
							"value": "-60142516",
							"description": "The maximum number of items to return."
						}
					]
				},
				"description": "Returns list of user grants and corresponding scopes this app has on a team."
			},
			"response": [
				{
					"id": "bae0c388-4470-4144-98fb-f0713a193dd5",
					"name": "Typical successful paginated response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/apps.permissions.users.list?token=amet&cursor=amet&limit=-60142516",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apps.permissions.users.list"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "cursor",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"resources\": [\n    {\n      \"id\": \"U0DES3UAN\",\n      \"scopes\": [\n        \"dnd:write:user\",\n        \"reminders:write:user\"\n      ]\n    },\n    {\n      \"id\": \"U024BFF1M\",\n      \"scopes\": [\n        \"reminders:write:user\"\n      ]\n    }\n  ],\n  \"response_metadata\": {\n    \"next_cursor\": \"dGVhbTdPMUg5UkFTT0w=\"\n  }\n}"
				},
				{
					"id": "3b165b89-73d2-4590-bfb2-2f6bd364d7f0",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/apps.permissions.users.list?token=amet&cursor=amet&limit=-60142516",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apps.permissions.users.list"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "cursor",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_cursor\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "apps permissions users request",
			"id": "c7f79abd-fc24-4e32-a111-e5b83d31f569",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/apps.permissions.users.request?token=amet&scopes=amet&trigger_id=amet&user=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"apps.permissions.users.request"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "(Required) Authentication token. Requires scope: `none`"
						},
						{
							"key": "scopes",
							"value": "amet",
							"description": "(Required) A comma separated list of user scopes to request for"
						},
						{
							"key": "trigger_id",
							"value": "amet",
							"description": "(Required) Token used to trigger the request"
						},
						{
							"key": "user",
							"value": "amet",
							"description": "(Required) The user this scope is being requested for"
						}
					]
				},
				"description": "Enables an app to trigger a permissions modal to grant an app access to a user access scope."
			},
			"response": [
				{
					"id": "52b04d31-2a91-4e69-bd76-914f46c96fea",
					"name": "Standard success response when used with a user token",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/apps.permissions.users.request?token=amet&scopes=amet&trigger_id=amet&user=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apps.permissions.users.request"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "scopes",
									"value": "amet"
								},
								{
									"key": "trigger_id",
									"value": "amet"
								},
								{
									"key": "user",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "1cadf903-d074-40d0-8d7e-70919f041841",
					"name": "Standard failure response when trigger_id is invalid",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/apps.permissions.users.request?token=amet&scopes=amet&trigger_id=amet&user=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apps.permissions.users.request"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "scopes",
									"value": "amet"
								},
								{
									"key": "trigger_id",
									"value": "amet"
								},
								{
									"key": "user",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_trigger_id\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "apps uninstall",
			"id": "bbcf6b1a-cf85-4321-a57a-8f3cbbdc2623",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/apps.uninstall?token=amet&client_id=amet&client_secret=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"apps.uninstall"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "Authentication token. Requires scope: `none`"
						},
						{
							"key": "client_id",
							"value": "amet",
							"description": "Issued when you created your application."
						},
						{
							"key": "client_secret",
							"value": "amet",
							"description": "Issued when you created your application."
						}
					]
				},
				"description": "Uninstalls your app from a workspace."
			},
			"response": [
				{
					"id": "f82fb20d-fd8d-4e20-8d3c-c55d2a8faafb",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/apps.uninstall?token=amet&client_id=amet&client_secret=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apps.uninstall"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "client_id",
									"value": "amet"
								},
								{
									"key": "client_secret",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "fe0cb89d-b5a8-4553-b6a1-b25311a2f4a1",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/apps.uninstall?token=amet&client_id=amet&client_secret=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apps.uninstall"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "client_id",
									"value": "amet"
								},
								{
									"key": "client_secret",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "auth revoke",
			"id": "7b33e038-3686-42fd-a535-60f2f0dc3ab5",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/auth.revoke?token=amet&test=true",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth.revoke"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "(Required) Authentication token. Requires scope: `none`"
						},
						{
							"key": "test",
							"value": "true",
							"description": "Setting this parameter to `1` triggers a _testing mode_ where the specified token will not actually be revoked."
						}
					]
				},
				"description": "Revokes a token."
			},
			"response": [
				{
					"id": "452e947c-2904-4bcf-8228-64970c9d548b",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/auth.revoke?token=amet&test=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth.revoke"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "test",
									"value": "true"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"revoked\": true\n}"
				},
				{
					"id": "cce5c81a-7b52-4d99-a3e4-e9851f9bd26d",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/auth.revoke?token=amet&test=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth.revoke"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "test",
									"value": "true"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "auth test",
			"id": "753e07fb-f761-4d59-9052-5959f8410754",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `none`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/auth.test",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth.test"
					]
				},
				"description": "Checks authentication & identity."
			},
			"response": [
				{
					"id": "2750f0f5-55f9-4bb7-b075-9a9679e99c4d",
					"name": "Standard success response when used with a user token",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `none`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/auth.test",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth.test"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"team\": \"Subarachnoid Workspace\",\n  \"team_id\": \"T12345678\",\n  \"url\": \"https://subarachnoid.slack.com/\",\n  \"user\": \"grace\",\n  \"user_id\": \"W12345678\"\n}"
				},
				{
					"id": "9c04f525-7ccc-4a97-977d-3efd06a04b3d",
					"name": "Standard failure response when used with an invalid token",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `none`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/auth.test",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth.test"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "bots info",
			"id": "ad1b3bff-d0c4-4424-90f1-701f5438a7b4",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/bots.info?token=amet&bot=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"bots.info"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "(Required) Authentication token. Requires scope: `users:read`"
						},
						{
							"key": "bot",
							"value": "amet",
							"description": "Bot user to get info on"
						}
					]
				},
				"description": "Gets information about a bot user."
			},
			"response": [
				{
					"id": "0091f34c-1879-41fc-a361-6f3a8f80580f",
					"name": "When successful, returns bot info by bot ID.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/bots.info?token=amet&bot=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bots.info"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "bot",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"bot\": {\n    \"app_id\": \"A161CLERW\",\n    \"deleted\": false,\n    \"icons\": {\n      \"image_36\": \"https://...\",\n      \"image_48\": \"https://...\",\n      \"image_72\": \"https://...\"\n    },\n    \"id\": \"B061F7JD2\",\n    \"name\": \"beforebot\",\n    \"updated\": 1449272004,\n    \"user_id\": \"U012ABCDEF\"\n  },\n  \"ok\": true\n}"
				},
				{
					"id": "72d1d124-3660-4d58-a830-773fbcf65a02",
					"name": "When no bot can be found, it returns an error.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/bots.info?token=amet&bot=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"bots.info"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "bot",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"bot_not_found\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "calls add",
			"id": "fd905d5e-1916-4289-bafd-1c00580e662d",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `calls:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "external_unique_id",
							"value": "fugiat eiusmod sed minim aliquip",
							"description": "(Required) An ID supplied by the 3rd-party Call provider. It must be unique across all Calls from that service."
						},
						{
							"key": "join_url",
							"value": "ea minim est nostrud",
							"description": "(Required) The URL required for a client to join the Call."
						},
						{
							"key": "external_display_id",
							"value": "id dolor ex cillum",
							"description": "An optional, human-readable ID supplied by the 3rd-party Call provider. If supplied, this ID will be displayed in the Call object."
						},
						{
							"key": "desktop_app_join_url",
							"value": "sunt Excepteur",
							"description": "When supplied, available Slack clients will attempt to directly launch the 3rd-party Call with this URL."
						},
						{
							"key": "date_start",
							"value": "9980063",
							"description": "Call start time in UTC UNIX timestamp format"
						},
						{
							"key": "title",
							"value": "et in ut sunt",
							"description": "The name of the Call."
						},
						{
							"key": "created_by",
							"value": "ea ullamc",
							"description": "The valid Slack user ID of the user who created this Call. When this method is called with a user token, the `created_by` field is optional and defaults to the authed user of the token. Otherwise, the field is required."
						},
						{
							"key": "users",
							"value": "dolor enim",
							"description": "The list of users to register as participants in the Call. [Read more on how to specify users here](/apis/calls#users)."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/calls.add",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"calls.add"
					]
				},
				"description": "Registers a new Call."
			},
			"response": [
				{
					"id": "c17a9bed-37db-46b7-9180-076e2676ffb1",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `calls:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) An ID supplied by the 3rd-party Call provider. It must be unique across all Calls from that service.",
									"key": "external_unique_id",
									"value": "fugiat eiusmod sed minim aliquip"
								},
								{
									"description": "(Required) The URL required for a client to join the Call.",
									"key": "join_url",
									"value": "ea minim est nostrud"
								},
								{
									"description": "An optional, human-readable ID supplied by the 3rd-party Call provider. If supplied, this ID will be displayed in the Call object.",
									"key": "external_display_id",
									"value": "id dolor ex cillum"
								},
								{
									"description": "When supplied, available Slack clients will attempt to directly launch the 3rd-party Call with this URL.",
									"key": "desktop_app_join_url",
									"value": "sunt Excepteur"
								},
								{
									"description": "Call start time in UTC UNIX timestamp format",
									"key": "date_start",
									"value": "9980063"
								},
								{
									"description": "The name of the Call.",
									"key": "title",
									"value": "et in ut sunt"
								},
								{
									"description": "The valid Slack user ID of the user who created this Call. When this method is called with a user token, the `created_by` field is optional and defaults to the authed user of the token. Otherwise, the field is required.",
									"key": "created_by",
									"value": "ea ullamc"
								},
								{
									"description": "The list of users to register as participants in the Call. [Read more on how to specify users here](/apis/calls#users).",
									"key": "users",
									"value": "dolor enim"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/calls.add",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"calls.add"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "c86433c0-b5dd-4ad9-a1f5-46dd0213c1bf",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `calls:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) An ID supplied by the 3rd-party Call provider. It must be unique across all Calls from that service.",
									"key": "external_unique_id",
									"value": "fugiat eiusmod sed minim aliquip"
								},
								{
									"description": "(Required) The URL required for a client to join the Call.",
									"key": "join_url",
									"value": "ea minim est nostrud"
								},
								{
									"description": "An optional, human-readable ID supplied by the 3rd-party Call provider. If supplied, this ID will be displayed in the Call object.",
									"key": "external_display_id",
									"value": "id dolor ex cillum"
								},
								{
									"description": "When supplied, available Slack clients will attempt to directly launch the 3rd-party Call with this URL.",
									"key": "desktop_app_join_url",
									"value": "sunt Excepteur"
								},
								{
									"description": "Call start time in UTC UNIX timestamp format",
									"key": "date_start",
									"value": "9980063"
								},
								{
									"description": "The name of the Call.",
									"key": "title",
									"value": "et in ut sunt"
								},
								{
									"description": "The valid Slack user ID of the user who created this Call. When this method is called with a user token, the `created_by` field is optional and defaults to the authed user of the token. Otherwise, the field is required.",
									"key": "created_by",
									"value": "ea ullamc"
								},
								{
									"description": "The list of users to register as participants in the Call. [Read more on how to specify users here](/apis/calls#users).",
									"key": "users",
									"value": "dolor enim"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/calls.add",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"calls.add"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "calls end",
			"id": "293b07da-b0f6-40ea-9b39-838bccdf74ff",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `calls:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "id",
							"value": "et",
							"description": "(Required) `id` returned when registering the call using the [`calls.add`](/methods/calls.add) method."
						},
						{
							"key": "duration",
							"value": "78159767",
							"description": "Call duration in seconds"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/calls.end",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"calls.end"
					]
				},
				"description": "Ends a Call."
			},
			"response": [
				{
					"id": "47a161e9-cd08-4b31-b6ab-f2bba10409a9",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `calls:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) `id` returned when registering the call using the [`calls.add`](/methods/calls.add) method.",
									"key": "id",
									"value": "et"
								},
								{
									"description": "Call duration in seconds",
									"key": "duration",
									"value": "78159767"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/calls.end",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"calls.end"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "c370bcca-d0a9-4e27-8207-0bc8c479501d",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `calls:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) `id` returned when registering the call using the [`calls.add`](/methods/calls.add) method.",
									"key": "id",
									"value": "et"
								},
								{
									"description": "Call duration in seconds",
									"key": "duration",
									"value": "78159767"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/calls.end",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"calls.end"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "calls info",
			"id": "3ee8f618-6247-4bea-bad6-6c2741dbcd55",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `calls:read`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/calls.info?id=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"calls.info"
					],
					"query": [
						{
							"key": "id",
							"value": "amet",
							"description": "(Required) `id` of the Call returned by the [`calls.add`](/methods/calls.add) method."
						}
					]
				},
				"description": "Returns information about a Call."
			},
			"response": [
				{
					"id": "ca7b6032-a3bc-4b2c-abb5-64205f3f8712",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `calls:read`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/calls.info?id=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"calls.info"
							],
							"query": [
								{
									"key": "id",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "fb6c8000-2e95-4563-bd72-315871639c98",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `calls:read`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/calls.info?id=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"calls.info"
							],
							"query": [
								{
									"key": "id",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "calls participants add",
			"id": "91a11054-5fc9-4dae-bcf7-3ac713969e87",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `calls:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "id",
							"value": "ullamco tempor fugiat Duis Lorem",
							"description": "(Required) `id` returned by the [`calls.add`](/methods/calls.add) method."
						},
						{
							"key": "users",
							"value": "magna Duis",
							"description": "(Required) The list of users to add as participants in the Call. [Read more on how to specify users here](/apis/calls#users)."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/calls.participants.add",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"calls.participants.add"
					]
				},
				"description": "Registers new participants added to a Call."
			},
			"response": [
				{
					"id": "d167ad8d-55d1-4a02-ad48-e822c299a57a",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `calls:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) `id` returned by the [`calls.add`](/methods/calls.add) method.",
									"key": "id",
									"value": "ullamco tempor fugiat Duis Lorem"
								},
								{
									"description": "(Required) The list of users to add as participants in the Call. [Read more on how to specify users here](/apis/calls#users).",
									"key": "users",
									"value": "magna Duis"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/calls.participants.add",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"calls.participants.add"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "c0d764e9-5325-4729-a2b1-00ea8734e04d",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `calls:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) `id` returned by the [`calls.add`](/methods/calls.add) method.",
									"key": "id",
									"value": "ullamco tempor fugiat Duis Lorem"
								},
								{
									"description": "(Required) The list of users to add as participants in the Call. [Read more on how to specify users here](/apis/calls#users).",
									"key": "users",
									"value": "magna Duis"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/calls.participants.add",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"calls.participants.add"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "calls participants remove",
			"id": "1a2db963-7e3e-44b7-928d-94f84e57f5d6",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `calls:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "id",
							"value": "quis anim",
							"description": "(Required) `id` returned by the [`calls.add`](/methods/calls.add) method."
						},
						{
							"key": "users",
							"value": "pariatur reprehenderit ad",
							"description": "(Required) The list of users to remove as participants in the Call. [Read more on how to specify users here](/apis/calls#users)."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/calls.participants.remove",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"calls.participants.remove"
					]
				},
				"description": "Registers participants removed from a Call."
			},
			"response": [
				{
					"id": "8042ce86-cfb4-4010-ac45-a853897b7b01",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `calls:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) `id` returned by the [`calls.add`](/methods/calls.add) method.",
									"key": "id",
									"value": "quis anim"
								},
								{
									"description": "(Required) The list of users to remove as participants in the Call. [Read more on how to specify users here](/apis/calls#users).",
									"key": "users",
									"value": "pariatur reprehenderit ad"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/calls.participants.remove",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"calls.participants.remove"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "ac74522b-b70a-472e-ab12-e86b8c488c65",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `calls:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) `id` returned by the [`calls.add`](/methods/calls.add) method.",
									"key": "id",
									"value": "quis anim"
								},
								{
									"description": "(Required) The list of users to remove as participants in the Call. [Read more on how to specify users here](/apis/calls#users).",
									"key": "users",
									"value": "pariatur reprehenderit ad"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/calls.participants.remove",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"calls.participants.remove"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "calls update",
			"id": "b8f6a904-07f6-45ca-865f-8fcc11067592",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `calls:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "id",
							"value": "ea in cillum",
							"description": "(Required) `id` returned by the [`calls.add`](/methods/calls.add) method."
						},
						{
							"key": "title",
							"value": "aliquip",
							"description": "The name of the Call."
						},
						{
							"key": "join_url",
							"value": "consequat veniam aute eiusmod Lorem",
							"description": "The URL required for a client to join the Call."
						},
						{
							"key": "desktop_app_join_url",
							"value": "voluptate Excepteur",
							"description": "When supplied, available Slack clients will attempt to directly launch the 3rd-party Call with this URL."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/calls.update",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"calls.update"
					]
				},
				"description": "Updates information about a Call."
			},
			"response": [
				{
					"id": "ede7a627-2abe-49b1-8bf6-45064fa230e1",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `calls:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) `id` returned by the [`calls.add`](/methods/calls.add) method.",
									"key": "id",
									"value": "ea in cillum"
								},
								{
									"description": "The name of the Call.",
									"key": "title",
									"value": "aliquip"
								},
								{
									"description": "The URL required for a client to join the Call.",
									"key": "join_url",
									"value": "consequat veniam aute eiusmod Lorem"
								},
								{
									"description": "When supplied, available Slack clients will attempt to directly launch the 3rd-party Call with this URL.",
									"key": "desktop_app_join_url",
									"value": "voluptate Excepteur"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/calls.update",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"calls.update"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "5934e8e1-1a55-4dc4-a1b8-b2a02f514cfa",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `calls:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) `id` returned by the [`calls.add`](/methods/calls.add) method.",
									"key": "id",
									"value": "ea in cillum"
								},
								{
									"description": "The name of the Call.",
									"key": "title",
									"value": "aliquip"
								},
								{
									"description": "The URL required for a client to join the Call.",
									"key": "join_url",
									"value": "consequat veniam aute eiusmod Lorem"
								},
								{
									"description": "When supplied, available Slack clients will attempt to directly launch the 3rd-party Call with this URL.",
									"key": "desktop_app_join_url",
									"value": "voluptate Excepteur"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/calls.update",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"calls.update"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "chat delete",
			"id": "2fc2df61-b7d2-4e67-aa6f-f6eb77c6cfde",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `chat:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "ts",
							"value": "-58768074.90563882",
							"description": "Timestamp of the message to be deleted."
						},
						{
							"key": "channel",
							"value": "anim qui",
							"description": "Channel containing the message to be deleted."
						},
						{
							"key": "as_user",
							"value": "false",
							"description": "Pass true to delete the message as the authed user with `chat:write:user` scope. [Bot users](/bot-users) in this context are considered authed users. If unused or false, the message will be deleted with `chat:write:bot` scope."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/chat.delete",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"chat.delete"
					]
				},
				"description": "Deletes a message."
			},
			"response": [
				{
					"id": "83536a96-d3c9-4054-b62a-61492fd9e684",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `chat:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Timestamp of the message to be deleted.",
									"key": "ts",
									"value": "-58768074.90563882"
								},
								{
									"description": "Channel containing the message to be deleted.",
									"key": "channel",
									"value": "anim qui"
								},
								{
									"description": "Pass true to delete the message as the authed user with `chat:write:user` scope. [Bot users](/bot-users) in this context are considered authed users. If unused or false, the message will be deleted with `chat:write:bot` scope.",
									"key": "as_user",
									"value": "false"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/chat.delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chat.delete"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"channel\": \"C024BE91L\",\n  \"ok\": true,\n  \"ts\": \"1401383885.000061\"\n}"
				},
				{
					"id": "d7dffef6-4e00-400a-87a9-82055d3c6e5a",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `chat:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Timestamp of the message to be deleted.",
									"key": "ts",
									"value": "-58768074.90563882"
								},
								{
									"description": "Channel containing the message to be deleted.",
									"key": "channel",
									"value": "anim qui"
								},
								{
									"description": "Pass true to delete the message as the authed user with `chat:write:user` scope. [Bot users](/bot-users) in this context are considered authed users. If unused or false, the message will be deleted with `chat:write:bot` scope.",
									"key": "as_user",
									"value": "false"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/chat.delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chat.delete"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"message_not_found\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "chat delete Scheduled Message",
			"id": "b02a40c0-ec07-428a-9840-b2ffc0068543",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `chat:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "aliqua commodo in in",
							"description": "(Required) The channel the scheduled_message is posting to"
						},
						{
							"key": "scheduled_message_id",
							"value": "reprehenderit sit",
							"description": "(Required) `scheduled_message_id` returned from call to chat.scheduleMessage"
						},
						{
							"key": "as_user",
							"value": "true",
							"description": "Pass true to delete the message as the authed user with `chat:write:user` scope. [Bot users](/bot-users) in this context are considered authed users. If unused or false, the message will be deleted with `chat:write:bot` scope."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/chat.deleteScheduledMessage",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"chat.deleteScheduledMessage"
					]
				},
				"description": "Deletes a pending scheduled message from the queue."
			},
			"response": [
				{
					"id": "e18be731-ba61-4da6-b83a-faaf2ffcab12",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `chat:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The channel the scheduled_message is posting to",
									"key": "channel",
									"value": "aliqua commodo in in"
								},
								{
									"description": "(Required) `scheduled_message_id` returned from call to chat.scheduleMessage",
									"key": "scheduled_message_id",
									"value": "reprehenderit sit"
								},
								{
									"description": "Pass true to delete the message as the authed user with `chat:write:user` scope. [Bot users](/bot-users) in this context are considered authed users. If unused or false, the message will be deleted with `chat:write:bot` scope.",
									"key": "as_user",
									"value": "true"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/chat.deleteScheduledMessage",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chat.deleteScheduledMessage"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "5e8c18a2-c660-4c3f-97e8-f2b30e73c47e",
					"name": "Typical error response if no message is found",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `chat:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The channel the scheduled_message is posting to",
									"key": "channel",
									"value": "aliqua commodo in in"
								},
								{
									"description": "(Required) `scheduled_message_id` returned from call to chat.scheduleMessage",
									"key": "scheduled_message_id",
									"value": "reprehenderit sit"
								},
								{
									"description": "Pass true to delete the message as the authed user with `chat:write:user` scope. [Bot users](/bot-users) in this context are considered authed users. If unused or false, the message will be deleted with `chat:write:bot` scope.",
									"key": "as_user",
									"value": "true"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/chat.deleteScheduledMessage",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chat.deleteScheduledMessage"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_scheduled_message_id\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "chat get Permalink",
			"id": "87ef066e-f30e-49b9-9464-dded948d28bb",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/chat.getPermalink?token=amet&channel=amet&message_ts=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"chat.getPermalink"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "(Required) Authentication token. Requires scope: `none`"
						},
						{
							"key": "channel",
							"value": "amet",
							"description": "(Required) The ID of the conversation or channel containing the message"
						},
						{
							"key": "message_ts",
							"value": "amet",
							"description": "(Required) A message's `ts` value, uniquely identifying it within a channel"
						}
					]
				},
				"description": "Retrieve a permalink URL for a specific extant message"
			},
			"response": [
				{
					"id": "3e6076e5-5134-4c97-bc2a-10594362947e",
					"name": "Standard success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/chat.getPermalink?token=amet&channel=amet&message_ts=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chat.getPermalink"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "channel",
									"value": "amet"
								},
								{
									"key": "message_ts",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"channel\": \"C1H9RESGA\",\n  \"ok\": true,\n  \"permalink\": \"https://ghostbusters.slack.com/archives/C1H9RESGA/p135854651500008\"\n}"
				},
				{
					"id": "a3b2c746-a875-4b7e-a8a0-28570c9abc80",
					"name": "Error response when channel cannot be found",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/chat.getPermalink?token=amet&channel=amet&message_ts=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chat.getPermalink"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "channel",
									"value": "amet"
								},
								{
									"key": "message_ts",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"channel_not_found\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "chat me Message",
			"id": "07e52ce0-74ca-485b-945a-b3ccd2423bba",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `chat:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "nul",
							"description": "Channel to send message to. Can be a public channel, private group or IM channel. Can be an encoded ID, or a name."
						},
						{
							"key": "text",
							"value": "aliqua aliquip eiusmod",
							"description": "Text of the message to send."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/chat.meMessage",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"chat.meMessage"
					]
				},
				"description": "Share a me message into a channel."
			},
			"response": [
				{
					"id": "b8e9322d-0ade-4e51-b4f4-4e4ffcc1b814",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `chat:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Channel to send message to. Can be a public channel, private group or IM channel. Can be an encoded ID, or a name.",
									"key": "channel",
									"value": "nul"
								},
								{
									"description": "Text of the message to send.",
									"key": "text",
									"value": "aliqua aliquip eiusmod"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/chat.meMessage",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chat.meMessage"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"channel\": \"C024BE7LR\",\n  \"ok\": true,\n  \"ts\": \"1417671948.000006\"\n}"
				},
				{
					"id": "4e240161-a16b-46e8-94ce-da7134820f0a",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `chat:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Channel to send message to. Can be a public channel, private group or IM channel. Can be an encoded ID, or a name.",
									"key": "channel",
									"value": "nul"
								},
								{
									"description": "Text of the message to send.",
									"key": "text",
									"value": "aliqua aliquip eiusmod"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/chat.meMessage",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chat.meMessage"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "chat post Ephemeral",
			"id": "1b821d3d-cd07-4c16-877c-e0f9cb98ac4c",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `chat:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "labore",
							"description": "(Required) Channel, private group, or IM channel to send message to. Can be an encoded ID, or a name."
						},
						{
							"key": "user",
							"value": "Duis sint et",
							"description": "(Required) `id` of the user who will receive the ephemeral message. The user should be in the channel specified by the `channel` argument."
						},
						{
							"key": "as_user",
							"value": "true",
							"description": "Pass true to post the message as the authed user. Defaults to true if the chat:write:bot scope is not included. Otherwise, defaults to false."
						},
						{
							"key": "attachments",
							"value": "enim ullam",
							"description": "A JSON-based array of structured attachments, presented as a URL-encoded string."
						},
						{
							"key": "blocks",
							"value": "qui aliqua ut proident",
							"description": "A JSON-based array of structured blocks, presented as a URL-encoded string."
						},
						{
							"key": "icon_emoji",
							"value": "labore deserunt pariatur est",
							"description": "Emoji to use as the icon for this message. Overrides `icon_url`. Must be used in conjunction with `as_user` set to `false`, otherwise ignored. See [authorship](#authorship) below."
						},
						{
							"key": "icon_url",
							"value": "proident id sint",
							"description": "URL to an image to use as the icon for this message. Must be used in conjunction with `as_user` set to false, otherwise ignored. See [authorship](#authorship) below."
						},
						{
							"key": "link_names",
							"value": "false",
							"description": "Find and link channel names and usernames."
						},
						{
							"key": "parse",
							"value": "veniam voluptate reprehenderit dolor",
							"description": "Change how messages are treated. Defaults to `none`. See [below](#formatting)."
						},
						{
							"key": "text",
							"value": "ea dolor sed",
							"description": "How this field works and whether it is required depends on other fields you use in your API call. [See below](#text_usage) for more detail."
						},
						{
							"key": "thread_ts",
							"value": "laboris qui in commodo",
							"description": "Provide another message's `ts` value to post this message in a thread. Avoid using a reply's `ts` value; use its parent's value instead. Ephemeral messages in threads are only shown if there is already an active thread."
						},
						{
							"key": "username",
							"value": "dolore minim adipisicing commodo",
							"description": "Set your bot's user name. Must be used in conjunction with `as_user` set to false, otherwise ignored. See [authorship](#authorship) below."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/chat.postEphemeral",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"chat.postEphemeral"
					]
				},
				"description": "Sends an ephemeral message to a user in a channel."
			},
			"response": [
				{
					"id": "fbae963d-89f4-41d9-86f1-48db9ccc323c",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `chat:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Channel, private group, or IM channel to send message to. Can be an encoded ID, or a name.",
									"key": "channel",
									"value": "labore"
								},
								{
									"description": "(Required) `id` of the user who will receive the ephemeral message. The user should be in the channel specified by the `channel` argument.",
									"key": "user",
									"value": "Duis sint et"
								},
								{
									"description": "Pass true to post the message as the authed user. Defaults to true if the chat:write:bot scope is not included. Otherwise, defaults to false.",
									"key": "as_user",
									"value": "true"
								},
								{
									"description": "A JSON-based array of structured attachments, presented as a URL-encoded string.",
									"key": "attachments",
									"value": "enim ullam"
								},
								{
									"description": "A JSON-based array of structured blocks, presented as a URL-encoded string.",
									"key": "blocks",
									"value": "qui aliqua ut proident"
								},
								{
									"description": "Emoji to use as the icon for this message. Overrides `icon_url`. Must be used in conjunction with `as_user` set to `false`, otherwise ignored. See [authorship](#authorship) below.",
									"key": "icon_emoji",
									"value": "labore deserunt pariatur est"
								},
								{
									"description": "URL to an image to use as the icon for this message. Must be used in conjunction with `as_user` set to false, otherwise ignored. See [authorship](#authorship) below.",
									"key": "icon_url",
									"value": "proident id sint"
								},
								{
									"description": "Find and link channel names and usernames.",
									"key": "link_names",
									"value": "false"
								},
								{
									"description": "Change how messages are treated. Defaults to `none`. See [below](#formatting).",
									"key": "parse",
									"value": "veniam voluptate reprehenderit dolor"
								},
								{
									"description": "How this field works and whether it is required depends on other fields you use in your API call. [See below](#text_usage) for more detail.",
									"key": "text",
									"value": "ea dolor sed"
								},
								{
									"description": "Provide another message's `ts` value to post this message in a thread. Avoid using a reply's `ts` value; use its parent's value instead. Ephemeral messages in threads are only shown if there is already an active thread.",
									"key": "thread_ts",
									"value": "laboris qui in commodo"
								},
								{
									"description": "Set your bot's user name. Must be used in conjunction with `as_user` set to false, otherwise ignored. See [authorship](#authorship) below.",
									"key": "username",
									"value": "dolore minim adipisicing commodo"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/chat.postEphemeral",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chat.postEphemeral"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message_ts\": \"1502210682.580145\",\n  \"ok\": true\n}"
				},
				{
					"id": "fbea4150-30d7-46e3-b287-dbb76e04ba94",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `chat:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Channel, private group, or IM channel to send message to. Can be an encoded ID, or a name.",
									"key": "channel",
									"value": "labore"
								},
								{
									"description": "(Required) `id` of the user who will receive the ephemeral message. The user should be in the channel specified by the `channel` argument.",
									"key": "user",
									"value": "Duis sint et"
								},
								{
									"description": "Pass true to post the message as the authed user. Defaults to true if the chat:write:bot scope is not included. Otherwise, defaults to false.",
									"key": "as_user",
									"value": "true"
								},
								{
									"description": "A JSON-based array of structured attachments, presented as a URL-encoded string.",
									"key": "attachments",
									"value": "enim ullam"
								},
								{
									"description": "A JSON-based array of structured blocks, presented as a URL-encoded string.",
									"key": "blocks",
									"value": "qui aliqua ut proident"
								},
								{
									"description": "Emoji to use as the icon for this message. Overrides `icon_url`. Must be used in conjunction with `as_user` set to `false`, otherwise ignored. See [authorship](#authorship) below.",
									"key": "icon_emoji",
									"value": "labore deserunt pariatur est"
								},
								{
									"description": "URL to an image to use as the icon for this message. Must be used in conjunction with `as_user` set to false, otherwise ignored. See [authorship](#authorship) below.",
									"key": "icon_url",
									"value": "proident id sint"
								},
								{
									"description": "Find and link channel names and usernames.",
									"key": "link_names",
									"value": "false"
								},
								{
									"description": "Change how messages are treated. Defaults to `none`. See [below](#formatting).",
									"key": "parse",
									"value": "veniam voluptate reprehenderit dolor"
								},
								{
									"description": "How this field works and whether it is required depends on other fields you use in your API call. [See below](#text_usage) for more detail.",
									"key": "text",
									"value": "ea dolor sed"
								},
								{
									"description": "Provide another message's `ts` value to post this message in a thread. Avoid using a reply's `ts` value; use its parent's value instead. Ephemeral messages in threads are only shown if there is already an active thread.",
									"key": "thread_ts",
									"value": "laboris qui in commodo"
								},
								{
									"description": "Set your bot's user name. Must be used in conjunction with `as_user` set to false, otherwise ignored. See [authorship](#authorship) below.",
									"key": "username",
									"value": "dolore minim adipisicing commodo"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/chat.postEphemeral",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chat.postEphemeral"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"user_not_in_channel\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "chat post Message",
			"id": "c4ba1fbf-ed67-4a1d-8ce2-437441a892ae",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `chat:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "Excepteur incididunt ex ipsum",
							"description": "(Required) Channel, private group, or IM channel to send message to. Can be an encoded ID, or a name. See [below](#channels) for more details."
						},
						{
							"key": "as_user",
							"value": "sunt cupidatat adipisicing magna",
							"description": "Pass true to post the message as the authed user, instead of as a bot. Defaults to false. See [authorship](#authorship) below."
						},
						{
							"key": "attachments",
							"value": "quis sed nisi esse",
							"description": "A JSON-based array of structured attachments, presented as a URL-encoded string."
						},
						{
							"key": "blocks",
							"value": "eu ullamco",
							"description": "A JSON-based array of structured blocks, presented as a URL-encoded string."
						},
						{
							"key": "icon_emoji",
							"value": "laborum ut id officia",
							"description": "Emoji to use as the icon for this message. Overrides `icon_url`. Must be used in conjunction with `as_user` set to `false`, otherwise ignored. See [authorship](#authorship) below."
						},
						{
							"key": "icon_url",
							"value": "Ut veniam",
							"description": "URL to an image to use as the icon for this message. Must be used in conjunction with `as_user` set to false, otherwise ignored. See [authorship](#authorship) below."
						},
						{
							"key": "link_names",
							"value": "false",
							"description": "Find and link channel names and usernames."
						},
						{
							"key": "mrkdwn",
							"value": "true",
							"description": "Disable Slack markup parsing by setting to `false`. Enabled by default."
						},
						{
							"key": "parse",
							"value": "minim dolor incididunt",
							"description": "Change how messages are treated. Defaults to `none`. See [below](#formatting)."
						},
						{
							"key": "reply_broadcast",
							"value": "true",
							"description": "Used in conjunction with `thread_ts` and indicates whether reply should be made visible to everyone in the channel or conversation. Defaults to `false`."
						},
						{
							"key": "text",
							"value": "sint proident Lorem Ut consectetur",
							"description": "How this field works and whether it is required depends on other fields you use in your API call. [See below](#text_usage) for more detail."
						},
						{
							"key": "thread_ts",
							"value": "ut Lorem",
							"description": "Provide another message's `ts` value to make this message a reply. Avoid using a reply's `ts` value; use its parent instead."
						},
						{
							"key": "unfurl_links",
							"value": "false",
							"description": "Pass true to enable unfurling of primarily text-based content."
						},
						{
							"key": "unfurl_media",
							"value": "true",
							"description": "Pass false to disable unfurling of media content."
						},
						{
							"key": "username",
							"value": "laborum ex",
							"description": "Set your bot's user name. Must be used in conjunction with `as_user` set to false, otherwise ignored. See [authorship](#authorship) below."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/chat.postMessage",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"chat.postMessage"
					]
				},
				"description": "Sends a message to a channel."
			},
			"response": [
				{
					"id": "6b6d6827-8363-43ed-8902-9792e250e699",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `chat:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Channel, private group, or IM channel to send message to. Can be an encoded ID, or a name. See [below](#channels) for more details.",
									"key": "channel",
									"value": "Excepteur incididunt ex ipsum"
								},
								{
									"description": "Pass true to post the message as the authed user, instead of as a bot. Defaults to false. See [authorship](#authorship) below.",
									"key": "as_user",
									"value": "sunt cupidatat adipisicing magna"
								},
								{
									"description": "A JSON-based array of structured attachments, presented as a URL-encoded string.",
									"key": "attachments",
									"value": "quis sed nisi esse"
								},
								{
									"description": "A JSON-based array of structured blocks, presented as a URL-encoded string.",
									"key": "blocks",
									"value": "eu ullamco"
								},
								{
									"description": "Emoji to use as the icon for this message. Overrides `icon_url`. Must be used in conjunction with `as_user` set to `false`, otherwise ignored. See [authorship](#authorship) below.",
									"key": "icon_emoji",
									"value": "laborum ut id officia"
								},
								{
									"description": "URL to an image to use as the icon for this message. Must be used in conjunction with `as_user` set to false, otherwise ignored. See [authorship](#authorship) below.",
									"key": "icon_url",
									"value": "Ut veniam"
								},
								{
									"description": "Find and link channel names and usernames.",
									"key": "link_names",
									"value": "false"
								},
								{
									"description": "Disable Slack markup parsing by setting to `false`. Enabled by default.",
									"key": "mrkdwn",
									"value": "true"
								},
								{
									"description": "Change how messages are treated. Defaults to `none`. See [below](#formatting).",
									"key": "parse",
									"value": "minim dolor incididunt"
								},
								{
									"description": "Used in conjunction with `thread_ts` and indicates whether reply should be made visible to everyone in the channel or conversation. Defaults to `false`.",
									"key": "reply_broadcast",
									"value": "true"
								},
								{
									"description": "How this field works and whether it is required depends on other fields you use in your API call. [See below](#text_usage) for more detail.",
									"key": "text",
									"value": "sint proident Lorem Ut consectetur"
								},
								{
									"description": "Provide another message's `ts` value to make this message a reply. Avoid using a reply's `ts` value; use its parent instead.",
									"key": "thread_ts",
									"value": "ut Lorem"
								},
								{
									"description": "Pass true to enable unfurling of primarily text-based content.",
									"key": "unfurl_links",
									"value": "false"
								},
								{
									"description": "Pass false to disable unfurling of media content.",
									"key": "unfurl_media",
									"value": "true"
								},
								{
									"description": "Set your bot's user name. Must be used in conjunction with `as_user` set to false, otherwise ignored. See [authorship](#authorship) below.",
									"key": "username",
									"value": "laborum ex"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/chat.postMessage",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chat.postMessage"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"channel\": \"C1H9RESGL\",\n  \"message\": {\n    \"attachments\": [\n      {\n        \"fallback\": \"This is an attachment's fallback\",\n        \"id\": 1,\n        \"text\": \"This is an attachment\"\n      }\n    ],\n    \"bot_id\": \"B19LU7CSY\",\n    \"subtype\": \"bot_message\",\n    \"text\": \"Here's a message for you\",\n    \"ts\": \"1503435956.000247\",\n    \"type\": \"message\",\n    \"username\": \"ecto1\"\n  },\n  \"ok\": true,\n  \"ts\": \"1503435956.000247\"\n}"
				},
				{
					"id": "7384676e-13c2-4cfd-a633-eb3658028f76",
					"name": "Typical error response if too many attachments are included",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `chat:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Channel, private group, or IM channel to send message to. Can be an encoded ID, or a name. See [below](#channels) for more details.",
									"key": "channel",
									"value": "Excepteur incididunt ex ipsum"
								},
								{
									"description": "Pass true to post the message as the authed user, instead of as a bot. Defaults to false. See [authorship](#authorship) below.",
									"key": "as_user",
									"value": "sunt cupidatat adipisicing magna"
								},
								{
									"description": "A JSON-based array of structured attachments, presented as a URL-encoded string.",
									"key": "attachments",
									"value": "quis sed nisi esse"
								},
								{
									"description": "A JSON-based array of structured blocks, presented as a URL-encoded string.",
									"key": "blocks",
									"value": "eu ullamco"
								},
								{
									"description": "Emoji to use as the icon for this message. Overrides `icon_url`. Must be used in conjunction with `as_user` set to `false`, otherwise ignored. See [authorship](#authorship) below.",
									"key": "icon_emoji",
									"value": "laborum ut id officia"
								},
								{
									"description": "URL to an image to use as the icon for this message. Must be used in conjunction with `as_user` set to false, otherwise ignored. See [authorship](#authorship) below.",
									"key": "icon_url",
									"value": "Ut veniam"
								},
								{
									"description": "Find and link channel names and usernames.",
									"key": "link_names",
									"value": "false"
								},
								{
									"description": "Disable Slack markup parsing by setting to `false`. Enabled by default.",
									"key": "mrkdwn",
									"value": "true"
								},
								{
									"description": "Change how messages are treated. Defaults to `none`. See [below](#formatting).",
									"key": "parse",
									"value": "minim dolor incididunt"
								},
								{
									"description": "Used in conjunction with `thread_ts` and indicates whether reply should be made visible to everyone in the channel or conversation. Defaults to `false`.",
									"key": "reply_broadcast",
									"value": "true"
								},
								{
									"description": "How this field works and whether it is required depends on other fields you use in your API call. [See below](#text_usage) for more detail.",
									"key": "text",
									"value": "sint proident Lorem Ut consectetur"
								},
								{
									"description": "Provide another message's `ts` value to make this message a reply. Avoid using a reply's `ts` value; use its parent instead.",
									"key": "thread_ts",
									"value": "ut Lorem"
								},
								{
									"description": "Pass true to enable unfurling of primarily text-based content.",
									"key": "unfurl_links",
									"value": "false"
								},
								{
									"description": "Pass false to disable unfurling of media content.",
									"key": "unfurl_media",
									"value": "true"
								},
								{
									"description": "Set your bot's user name. Must be used in conjunction with `as_user` set to false, otherwise ignored. See [authorship](#authorship) below.",
									"key": "username",
									"value": "laborum ex"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/chat.postMessage",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chat.postMessage"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"too_many_attachments\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "chat schedule Message",
			"id": "f15eb5ae-54e1-40a8-9c1d-da165553b017",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `chat:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "nostrud ut laborum",
							"description": "Channel, private group, or DM channel to send message to. Can be an encoded ID, or a name. See [below](#channels) for more details."
						},
						{
							"key": "text",
							"value": "velit sit sunt ",
							"description": "How this field works and whether it is required depends on other fields you use in your API call. [See below](#text_usage) for more detail."
						},
						{
							"key": "post_at",
							"value": "commodo cupidatat in sed",
							"description": "Unix EPOCH timestamp of time in future to send the message."
						},
						{
							"key": "parse",
							"value": "eiusmod enim aliquip",
							"description": "Change how messages are treated. Defaults to `none`. See [chat.postMessage](chat.postMessage#formatting)."
						},
						{
							"key": "as_user",
							"value": "false",
							"description": "Pass true to post the message as the authed user, instead of as a bot. Defaults to false. See [chat.postMessage](chat.postMessage#authorship)."
						},
						{
							"key": "link_names",
							"value": "true",
							"description": "Find and link channel names and usernames."
						},
						{
							"key": "attachments",
							"value": "in",
							"description": "A JSON-based array of structured attachments, presented as a URL-encoded string."
						},
						{
							"key": "blocks",
							"value": "voluptate esse",
							"description": "A JSON-based array of structured blocks, presented as a URL-encoded string."
						},
						{
							"key": "unfurl_links",
							"value": "false",
							"description": "Pass true to enable unfurling of primarily text-based content."
						},
						{
							"key": "unfurl_media",
							"value": "false",
							"description": "Pass false to disable unfurling of media content."
						},
						{
							"key": "thread_ts",
							"value": "-94784448.17577586",
							"description": "Provide another message's `ts` value to make this message a reply. Avoid using a reply's `ts` value; use its parent instead."
						},
						{
							"key": "reply_broadcast",
							"value": "false",
							"description": "Used in conjunction with `thread_ts` and indicates whether reply should be made visible to everyone in the channel or conversation. Defaults to `false`."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/chat.scheduleMessage",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"chat.scheduleMessage"
					]
				},
				"description": "Schedules a message to be sent to a channel."
			},
			"response": [
				{
					"id": "7cc0e527-719f-4e1a-84ec-975563a253cf",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `chat:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Channel, private group, or DM channel to send message to. Can be an encoded ID, or a name. See [below](#channels) for more details.",
									"key": "channel",
									"value": "nostrud ut laborum"
								},
								{
									"description": "How this field works and whether it is required depends on other fields you use in your API call. [See below](#text_usage) for more detail.",
									"key": "text",
									"value": "velit sit sunt "
								},
								{
									"description": "Unix EPOCH timestamp of time in future to send the message.",
									"key": "post_at",
									"value": "commodo cupidatat in sed"
								},
								{
									"description": "Change how messages are treated. Defaults to `none`. See [chat.postMessage](chat.postMessage#formatting).",
									"key": "parse",
									"value": "eiusmod enim aliquip"
								},
								{
									"description": "Pass true to post the message as the authed user, instead of as a bot. Defaults to false. See [chat.postMessage](chat.postMessage#authorship).",
									"key": "as_user",
									"value": "false"
								},
								{
									"description": "Find and link channel names and usernames.",
									"key": "link_names",
									"value": "true"
								},
								{
									"description": "A JSON-based array of structured attachments, presented as a URL-encoded string.",
									"key": "attachments",
									"value": "in"
								},
								{
									"description": "A JSON-based array of structured blocks, presented as a URL-encoded string.",
									"key": "blocks",
									"value": "voluptate esse"
								},
								{
									"description": "Pass true to enable unfurling of primarily text-based content.",
									"key": "unfurl_links",
									"value": "false"
								},
								{
									"description": "Pass false to disable unfurling of media content.",
									"key": "unfurl_media",
									"value": "false"
								},
								{
									"description": "Provide another message's `ts` value to make this message a reply. Avoid using a reply's `ts` value; use its parent instead.",
									"key": "thread_ts",
									"value": "-94784448.17577586"
								},
								{
									"description": "Used in conjunction with `thread_ts` and indicates whether reply should be made visible to everyone in the channel or conversation. Defaults to `false`.",
									"key": "reply_broadcast",
									"value": "false"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/chat.scheduleMessage",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chat.scheduleMessage"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"channel\": \"C1H9RESGL\",\n  \"message\": {\n    \"attachments\": [\n      {\n        \"fallback\": \"This is an attachment's fallback\",\n        \"id\": 1,\n        \"text\": \"This is an attachment\"\n      }\n    ],\n    \"bot_id\": \"B19LU7CSY\",\n    \"subtype\": \"bot_message\",\n    \"text\": \"Here's a message for you in the future\",\n    \"type\": \"delayed_message\",\n    \"username\": \"ecto1\"\n  },\n  \"ok\": true,\n  \"post_at\": \"1562180400\",\n  \"scheduled_message_id\": \"Q1298393284\"\n}"
				},
				{
					"id": "c00fa8fd-3605-49cf-997b-7b41414d1147",
					"name": "Typical error response if the `post_at` is invalid (ex. in the past or too far into the future)",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `chat:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Channel, private group, or DM channel to send message to. Can be an encoded ID, or a name. See [below](#channels) for more details.",
									"key": "channel",
									"value": "nostrud ut laborum"
								},
								{
									"description": "How this field works and whether it is required depends on other fields you use in your API call. [See below](#text_usage) for more detail.",
									"key": "text",
									"value": "velit sit sunt "
								},
								{
									"description": "Unix EPOCH timestamp of time in future to send the message.",
									"key": "post_at",
									"value": "commodo cupidatat in sed"
								},
								{
									"description": "Change how messages are treated. Defaults to `none`. See [chat.postMessage](chat.postMessage#formatting).",
									"key": "parse",
									"value": "eiusmod enim aliquip"
								},
								{
									"description": "Pass true to post the message as the authed user, instead of as a bot. Defaults to false. See [chat.postMessage](chat.postMessage#authorship).",
									"key": "as_user",
									"value": "false"
								},
								{
									"description": "Find and link channel names and usernames.",
									"key": "link_names",
									"value": "true"
								},
								{
									"description": "A JSON-based array of structured attachments, presented as a URL-encoded string.",
									"key": "attachments",
									"value": "in"
								},
								{
									"description": "A JSON-based array of structured blocks, presented as a URL-encoded string.",
									"key": "blocks",
									"value": "voluptate esse"
								},
								{
									"description": "Pass true to enable unfurling of primarily text-based content.",
									"key": "unfurl_links",
									"value": "false"
								},
								{
									"description": "Pass false to disable unfurling of media content.",
									"key": "unfurl_media",
									"value": "false"
								},
								{
									"description": "Provide another message's `ts` value to make this message a reply. Avoid using a reply's `ts` value; use its parent instead.",
									"key": "thread_ts",
									"value": "-94784448.17577586"
								},
								{
									"description": "Used in conjunction with `thread_ts` and indicates whether reply should be made visible to everyone in the channel or conversation. Defaults to `false`.",
									"key": "reply_broadcast",
									"value": "false"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/chat.scheduleMessage",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chat.scheduleMessage"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"time_in_past\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "chat scheduled Messages list",
			"id": "de75ddd4-f1a7-4171-ba1d-ce37403f7811",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "Authentication token. Requires scope: `none`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/chat.scheduledMessages.list?channel=amet&latest=53722643.01050994&oldest=53722643.01050994&limit=-60142516&cursor=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"chat.scheduledMessages.list"
					],
					"query": [
						{
							"key": "channel",
							"value": "amet",
							"description": "The channel of the scheduled messages"
						},
						{
							"key": "latest",
							"value": "53722643.01050994",
							"description": "A UNIX timestamp of the latest value in the time range"
						},
						{
							"key": "oldest",
							"value": "53722643.01050994",
							"description": "A UNIX timestamp of the oldest value in the time range"
						},
						{
							"key": "limit",
							"value": "-60142516",
							"description": "Maximum number of original entries to return."
						},
						{
							"key": "cursor",
							"value": "amet",
							"description": "For pagination purposes, this is the `cursor` value returned from a previous call to `chat.scheduledmessages.list` indicating where you want to start this call from."
						}
					]
				},
				"description": "Returns a list of scheduled messages."
			},
			"response": [
				{
					"id": "8fd2f980-79c8-49ea-8753-c873579d7de7",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `none`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/chat.scheduledMessages.list?channel=amet&latest=53722643.01050994&oldest=53722643.01050994&limit=-60142516&cursor=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chat.scheduledMessages.list"
							],
							"query": [
								{
									"key": "channel",
									"value": "amet"
								},
								{
									"key": "latest",
									"value": "53722643.01050994"
								},
								{
									"key": "oldest",
									"value": "53722643.01050994"
								},
								{
									"key": "limit",
									"value": "-60142516"
								},
								{
									"key": "cursor",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"response_metadata\": {\n    \"next_cursor\": \"\"\n  },\n  \"scheduled_messages\": [\n    {\n      \"channel_id\": \"C1H9RESGL\",\n      \"date_created\": 1551891734,\n      \"id\": 1298393284,\n      \"post_at\": 1551991428,\n      \"text\": \"Here's a message for you in the future\"\n    }\n  ]\n}"
				},
				{
					"id": "ad11bb44-fd84-4db6-9d7d-b80c7ffd389e",
					"name": "Typical error response if the channel passed is invalid",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `none`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/chat.scheduledMessages.list?channel=amet&latest=53722643.01050994&oldest=53722643.01050994&limit=-60142516&cursor=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chat.scheduledMessages.list"
							],
							"query": [
								{
									"key": "channel",
									"value": "amet"
								},
								{
									"key": "latest",
									"value": "53722643.01050994"
								},
								{
									"key": "oldest",
									"value": "53722643.01050994"
								},
								{
									"key": "limit",
									"value": "-60142516"
								},
								{
									"key": "cursor",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_channel\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "chat unfurl",
			"id": "77fc46d3-dafc-459c-adf1-910c432cac97",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `links:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "sint",
							"description": "(Required) Channel ID of the message"
						},
						{
							"key": "ts",
							"value": "irure",
							"description": "(Required) Timestamp of the message to add unfurl behavior to."
						},
						{
							"key": "unfurls",
							"value": "dolore irure magna",
							"description": "URL-encoded JSON map with keys set to URLs featured in the the message, pointing to their unfurl blocks or message attachments."
						},
						{
							"key": "user_auth_message",
							"value": "aliqua",
							"description": "Provide a simply-formatted string to send as an ephemeral message to the user as invitation to authenticate further and enable full unfurling behavior"
						},
						{
							"key": "user_auth_required",
							"value": "true",
							"description": "Set to `true` or `1` to indicate the user must install your Slack app to trigger unfurls for this domain"
						},
						{
							"key": "user_auth_url",
							"value": "fugiat Ut amet",
							"description": "Send users to this custom URL where they will complete authentication in your app to fully trigger unfurling. Value should be properly URL-encoded."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/chat.unfurl",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"chat.unfurl"
					]
				},
				"description": "Provide custom unfurl behavior for user-posted URLs"
			},
			"response": [
				{
					"id": "671ec54c-f1b3-4565-8a35-04507743641c",
					"name": "Typical, minimal success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `links:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Channel ID of the message",
									"key": "channel",
									"value": "sint"
								},
								{
									"description": "(Required) Timestamp of the message to add unfurl behavior to.",
									"key": "ts",
									"value": "irure"
								},
								{
									"description": "URL-encoded JSON map with keys set to URLs featured in the the message, pointing to their unfurl blocks or message attachments.",
									"key": "unfurls",
									"value": "dolore irure magna"
								},
								{
									"description": "Provide a simply-formatted string to send as an ephemeral message to the user as invitation to authenticate further and enable full unfurling behavior",
									"key": "user_auth_message",
									"value": "aliqua"
								},
								{
									"description": "Set to `true` or `1` to indicate the user must install your Slack app to trigger unfurls for this domain",
									"key": "user_auth_required",
									"value": "true"
								},
								{
									"description": "Send users to this custom URL where they will complete authentication in your app to fully trigger unfurling. Value should be properly URL-encoded.",
									"key": "user_auth_url",
									"value": "fugiat Ut amet"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/chat.unfurl",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chat.unfurl"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "07c24ef5-cbb2-419f-a304-31d5561224ac",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `links:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Channel ID of the message",
									"key": "channel",
									"value": "sint"
								},
								{
									"description": "(Required) Timestamp of the message to add unfurl behavior to.",
									"key": "ts",
									"value": "irure"
								},
								{
									"description": "URL-encoded JSON map with keys set to URLs featured in the the message, pointing to their unfurl blocks or message attachments.",
									"key": "unfurls",
									"value": "dolore irure magna"
								},
								{
									"description": "Provide a simply-formatted string to send as an ephemeral message to the user as invitation to authenticate further and enable full unfurling behavior",
									"key": "user_auth_message",
									"value": "aliqua"
								},
								{
									"description": "Set to `true` or `1` to indicate the user must install your Slack app to trigger unfurls for this domain",
									"key": "user_auth_required",
									"value": "true"
								},
								{
									"description": "Send users to this custom URL where they will complete authentication in your app to fully trigger unfurling. Value should be properly URL-encoded.",
									"key": "user_auth_url",
									"value": "fugiat Ut amet"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/chat.unfurl",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chat.unfurl"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"cannot_unfurl_url\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "chat update",
			"id": "1e43e5a1-9721-4a1b-82f6-aa17958b7093",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `chat:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "aliquip amet in enim ut",
							"description": "(Required) Channel containing the message to be updated."
						},
						{
							"key": "ts",
							"value": "sed",
							"description": "(Required) Timestamp of the message to be updated."
						},
						{
							"key": "as_user",
							"value": "laborum ex sint voluptate",
							"description": "Pass true to update the message as the authed user. [Bot users](/bot-users) in this context are considered authed users."
						},
						{
							"key": "attachments",
							"value": "ea qui pariatur dolor",
							"description": "A JSON-based array of structured attachments, presented as a URL-encoded string. This field is required when not presenting `text`. If you don't include this field, the message's previous `attachments` will be retained. To remove previous `attachments`, include an empty array for this field."
						},
						{
							"key": "blocks",
							"value": "fugia",
							"description": "A JSON-based array of [structured blocks](/block-kit/building), presented as a URL-encoded string. If you don't include this field, the message's previous `blocks` will be retained. To remove previous `blocks`, include an empty array for this field."
						},
						{
							"key": "link_names",
							"value": "Duis Lorem velit sint",
							"description": "Find and link channel names and usernames. Defaults to `none`. If you do not specify a value for this field, the original value set for the message will be overwritten with the default, `none`."
						},
						{
							"key": "parse",
							"value": "occaecat nulla qui est",
							"description": "Change how messages are treated. Defaults to `client`, unlike `chat.postMessage`. Accepts either `none` or `full`. If you do not specify a value for this field, the original value set for the message will be overwritten with the default, `client`."
						},
						{
							"key": "text",
							"value": "sunt cillum adipisicing nostrud dolore",
							"description": "New text for the message, using the [default formatting rules](/reference/surfaces/formatting). It's not required when presenting `blocks` or `attachments`."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/chat.update",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"chat.update"
					]
				},
				"description": "Updates a message."
			},
			"response": [
				{
					"id": "83d9ba17-e018-4c3d-9531-4799a90c6a34",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `chat:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Channel containing the message to be updated.",
									"key": "channel",
									"value": "aliquip amet in enim ut"
								},
								{
									"description": "(Required) Timestamp of the message to be updated.",
									"key": "ts",
									"value": "sed"
								},
								{
									"description": "Pass true to update the message as the authed user. [Bot users](/bot-users) in this context are considered authed users.",
									"key": "as_user",
									"value": "laborum ex sint voluptate"
								},
								{
									"description": "A JSON-based array of structured attachments, presented as a URL-encoded string. This field is required when not presenting `text`. If you don't include this field, the message's previous `attachments` will be retained. To remove previous `attachments`, include an empty array for this field.",
									"key": "attachments",
									"value": "ea qui pariatur dolor"
								},
								{
									"description": "A JSON-based array of [structured blocks](/block-kit/building), presented as a URL-encoded string. If you don't include this field, the message's previous `blocks` will be retained. To remove previous `blocks`, include an empty array for this field.",
									"key": "blocks",
									"value": "fugia"
								},
								{
									"description": "Find and link channel names and usernames. Defaults to `none`. If you do not specify a value for this field, the original value set for the message will be overwritten with the default, `none`.",
									"key": "link_names",
									"value": "Duis Lorem velit sint"
								},
								{
									"description": "Change how messages are treated. Defaults to `client`, unlike `chat.postMessage`. Accepts either `none` or `full`. If you do not specify a value for this field, the original value set for the message will be overwritten with the default, `client`.",
									"key": "parse",
									"value": "occaecat nulla qui est"
								},
								{
									"description": "New text for the message, using the [default formatting rules](/reference/surfaces/formatting). It's not required when presenting `blocks` or `attachments`.",
									"key": "text",
									"value": "sunt cillum adipisicing nostrud dolore"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/chat.update",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chat.update"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"channel\": \"C024BE91L\",\n  \"message\": {\n    \"text\": \"Updated text you carefully authored\",\n    \"user\": \"U34567890\"\n  },\n  \"ok\": true,\n  \"text\": \"Updated text you carefully authored\",\n  \"ts\": \"1401383885.000061\"\n}"
				},
				{
					"id": "a83548fb-679a-43c6-a8b1-e99adef27a28",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `chat:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Channel containing the message to be updated.",
									"key": "channel",
									"value": "aliquip amet in enim ut"
								},
								{
									"description": "(Required) Timestamp of the message to be updated.",
									"key": "ts",
									"value": "sed"
								},
								{
									"description": "Pass true to update the message as the authed user. [Bot users](/bot-users) in this context are considered authed users.",
									"key": "as_user",
									"value": "laborum ex sint voluptate"
								},
								{
									"description": "A JSON-based array of structured attachments, presented as a URL-encoded string. This field is required when not presenting `text`. If you don't include this field, the message's previous `attachments` will be retained. To remove previous `attachments`, include an empty array for this field.",
									"key": "attachments",
									"value": "ea qui pariatur dolor"
								},
								{
									"description": "A JSON-based array of [structured blocks](/block-kit/building), presented as a URL-encoded string. If you don't include this field, the message's previous `blocks` will be retained. To remove previous `blocks`, include an empty array for this field.",
									"key": "blocks",
									"value": "fugia"
								},
								{
									"description": "Find and link channel names and usernames. Defaults to `none`. If you do not specify a value for this field, the original value set for the message will be overwritten with the default, `none`.",
									"key": "link_names",
									"value": "Duis Lorem velit sint"
								},
								{
									"description": "Change how messages are treated. Defaults to `client`, unlike `chat.postMessage`. Accepts either `none` or `full`. If you do not specify a value for this field, the original value set for the message will be overwritten with the default, `client`.",
									"key": "parse",
									"value": "occaecat nulla qui est"
								},
								{
									"description": "New text for the message, using the [default formatting rules](/reference/surfaces/formatting). It's not required when presenting `blocks` or `attachments`.",
									"key": "text",
									"value": "sunt cillum adipisicing nostrud dolore"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/chat.update",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"chat.update"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"cant_update_message\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "conversations archive",
			"id": "87e2b94f-84b6-4e7b-813b-1f88697d9fd2",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `conversations:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "proident tempor",
							"description": "ID of conversation to archive"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/conversations.archive",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"conversations.archive"
					]
				},
				"description": "Archives a conversation."
			},
			"response": [
				{
					"id": "65994cfc-b339-4afc-902e-9ef0c7a7fa15",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "ID of conversation to archive",
									"key": "channel",
									"value": "proident tempor"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.archive",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.archive"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "22cb7cef-2598-4179-8870-bbec6e4c9080",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "ID of conversation to archive",
									"key": "channel",
									"value": "proident tempor"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.archive",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.archive"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"channel_not_found\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "conversations close",
			"id": "84b10771-0c74-4b44-b78d-5b5f8921079f",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `conversations:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "nisi",
							"description": "Conversation to close."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/conversations.close",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"conversations.close"
					]
				},
				"description": "Closes a direct message or multi-person direct message."
			},
			"response": [
				{
					"id": "3b51c5ca-9f7a-4f43-91e4-251fe7b83991",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Conversation to close.",
									"key": "channel",
									"value": "nisi"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.close",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.close"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "ad8ff19a-a8a1-461f-9d4c-d896d282d235",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Conversation to close.",
									"key": "channel",
									"value": "nisi"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.close",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.close"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"channel_not_found\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "conversations create",
			"id": "b291e520-cb81-4805-a35c-dd2c25f70a35",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `conversations:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "name",
							"value": "anim",
							"description": "Name of the public or private channel to create"
						},
						{
							"key": "is_private",
							"value": "true",
							"description": "Create a private channel instead of a public one"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/conversations.create",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"conversations.create"
					]
				},
				"description": "Initiates a public or private channel-based conversation"
			},
			"response": [
				{
					"id": "d2662c85-1f1f-43a1-935e-52d01ac81256",
					"name": "If successful, the command returns a rather stark [conversation object](/types/conversation)",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Name of the public or private channel to create",
									"key": "name",
									"value": "anim"
								},
								{
									"description": "Create a private channel instead of a public one",
									"key": "is_private",
									"value": "true"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.create"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"channel\": {\n    \"created\": 1504554479,\n    \"creator\": \"U0123456\",\n    \"id\": \"C0EAQDV4Z\",\n    \"is_archived\": false,\n    \"is_channel\": true,\n    \"is_ext_shared\": false,\n    \"is_general\": false,\n    \"is_group\": false,\n    \"is_im\": false,\n    \"is_member\": true,\n    \"is_mpim\": false,\n    \"is_org_shared\": false,\n    \"is_pending_ext_shared\": false,\n    \"is_private\": false,\n    \"is_shared\": false,\n    \"last_read\": \"0000000000.000000\",\n    \"latest\": null,\n    \"name\": \"endeavor\",\n    \"name_normalized\": \"endeavor\",\n    \"pending_shared\": [],\n    \"previous_names\": [],\n    \"priority\": 0,\n    \"purpose\": {\n      \"creator\": \"\",\n      \"last_set\": 0,\n      \"value\": \"\"\n    },\n    \"topic\": {\n      \"creator\": \"\",\n      \"last_set\": 0,\n      \"value\": \"\"\n    },\n    \"unlinked\": 0,\n    \"unread_count\": 0,\n    \"unread_count_display\": 0\n  },\n  \"ok\": true\n}"
				},
				{
					"id": "bcf3e1d6-6b63-4dae-b494-3f27be8a6b9d",
					"name": "Typical error response when name already in use",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Name of the public or private channel to create",
									"key": "name",
									"value": "anim"
								},
								{
									"description": "Create a private channel instead of a public one",
									"key": "is_private",
									"value": "true"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.create"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"name_taken\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "conversations history",
			"id": "dc75bd82-ea0c-4fd3-b2eb-3c5f75131387",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/conversations.history?token=amet&channel=amet&latest=53722643.01050994&oldest=53722643.01050994&inclusive=true&limit=-60142516&cursor=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"conversations.history"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "Authentication token. Requires scope: `conversations:history`"
						},
						{
							"key": "channel",
							"value": "amet",
							"description": "Conversation ID to fetch history for."
						},
						{
							"key": "latest",
							"value": "53722643.01050994",
							"description": "End of time range of messages to include in results."
						},
						{
							"key": "oldest",
							"value": "53722643.01050994",
							"description": "Start of time range of messages to include in results."
						},
						{
							"key": "inclusive",
							"value": "true",
							"description": "Include messages with latest or oldest timestamp in results only when either timestamp is specified."
						},
						{
							"key": "limit",
							"value": "-60142516",
							"description": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the users list hasn't been reached."
						},
						{
							"key": "cursor",
							"value": "amet",
							"description": "Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more detail."
						}
					]
				},
				"description": "Fetches a conversation's history of messages and events."
			},
			"response": [
				{
					"id": "19685fdc-197b-4139-80be-891e731321a3",
					"name": "Typical success response containing a channel's messages",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/conversations.history?token=amet&channel=amet&latest=53722643.01050994&oldest=53722643.01050994&inclusive=true&limit=-60142516&cursor=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.history"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "channel",
									"value": "amet"
								},
								{
									"key": "latest",
									"value": "53722643.01050994"
								},
								{
									"key": "oldest",
									"value": "53722643.01050994"
								},
								{
									"key": "inclusive",
									"value": "true"
								},
								{
									"key": "limit",
									"value": "-60142516"
								},
								{
									"key": "cursor",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"has_more\": true,\n  \"messages\": [\n    {\n      \"text\": \"I find you punny and would like to smell your nose letter\",\n      \"ts\": \"1512085950.000216\",\n      \"type\": \"message\",\n      \"user\": \"U012AB3CDE\"\n    },\n    {\n      \"text\": \"What, you want to smell my shoes better?\",\n      \"ts\": \"1512104434.000490\",\n      \"type\": \"message\",\n      \"user\": \"U061F7AUR\"\n    }\n  ],\n  \"ok\": true,\n  \"pin_count\": 0,\n  \"response_metadata\": {\n    \"next_cursor\": \"bmV4dF90czoxNTEyMDg1ODYxMDAwNTQz\"\n  }\n}"
				},
				{
					"id": "6a488b1a-6e74-4b12-873d-2289f5cdf2e6",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/conversations.history?token=amet&channel=amet&latest=53722643.01050994&oldest=53722643.01050994&inclusive=true&limit=-60142516&cursor=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.history"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "channel",
									"value": "amet"
								},
								{
									"key": "latest",
									"value": "53722643.01050994"
								},
								{
									"key": "oldest",
									"value": "53722643.01050994"
								},
								{
									"key": "inclusive",
									"value": "true"
								},
								{
									"key": "limit",
									"value": "-60142516"
								},
								{
									"key": "cursor",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"channel_not_found\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "conversations info",
			"id": "589bbef0-f1da-4416-b3d8-e0acd5191654",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/conversations.info?token=amet&channel=amet&include_locale=true&include_num_members=true",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"conversations.info"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "Authentication token. Requires scope: `conversations:read`"
						},
						{
							"key": "channel",
							"value": "amet",
							"description": "Conversation ID to learn more about"
						},
						{
							"key": "include_locale",
							"value": "true",
							"description": "Set this to `true` to receive the locale for this conversation. Defaults to `false`"
						},
						{
							"key": "include_num_members",
							"value": "true",
							"description": "Set to `true` to include the member count for the specified conversation. Defaults to `false`"
						}
					]
				},
				"description": "Retrieve information about a conversation."
			},
			"response": [
				{
					"id": "360b54ff-0c0e-4061-ae25-a9bb0d1bbf31",
					"name": "Typical success response for a public channel. (Also, a response from a private channel and a multi-party IM is very similar to this example.)",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/conversations.info?token=amet&channel=amet&include_locale=true&include_num_members=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.info"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "channel",
									"value": "amet"
								},
								{
									"key": "include_locale",
									"value": "true"
								},
								{
									"key": "include_num_members",
									"value": "true"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"channel\": {\n    \"created\": 1449252889,\n    \"creator\": \"W012A3BCD\",\n    \"id\": \"C012AB3CD\",\n    \"is_archived\": false,\n    \"is_channel\": true,\n    \"is_ext_shared\": false,\n    \"is_general\": true,\n    \"is_group\": false,\n    \"is_im\": false,\n    \"is_member\": true,\n    \"is_mpim\": false,\n    \"is_org_shared\": false,\n    \"is_pending_ext_shared\": false,\n    \"is_private\": false,\n    \"is_read_only\": false,\n    \"is_shared\": false,\n    \"last_read\": \"1502126650.228446\",\n    \"locale\": \"en-US\",\n    \"name\": \"general\",\n    \"name_normalized\": \"general\",\n    \"parent_conversation\": null,\n    \"pending_shared\": [],\n    \"previous_names\": [\n      \"specifics\",\n      \"abstractions\",\n      \"etc\"\n    ],\n    \"purpose\": {\n      \"creator\": \"W012A3BCD\",\n      \"last_set\": 1449709364,\n      \"value\": \"This part of the workspace is for fun. Make fun here.\"\n    },\n    \"topic\": {\n      \"creator\": \"W012A3BCD\",\n      \"last_set\": 1449709364,\n      \"value\": \"For public discussion of generalities\"\n    },\n    \"unlinked\": 0\n  },\n  \"ok\": true\n}"
				},
				{
					"id": "55d61b33-74b3-4bc4-8258-7ce1c24d6742",
					"name": "Typical error response when a channel cannot be found",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/conversations.info?token=amet&channel=amet&include_locale=true&include_num_members=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.info"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "channel",
									"value": "amet"
								},
								{
									"key": "include_locale",
									"value": "true"
								},
								{
									"key": "include_num_members",
									"value": "true"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"channel_not_found\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "conversations invite",
			"id": "9878b7d9-2ba6-4c05-aa8d-21331168f74e",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `conversations:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "mo",
							"description": "The ID of the public or private channel to invite user(s) to."
						},
						{
							"key": "users",
							"value": "Duis officia ad",
							"description": "A comma separated list of user IDs. Up to 1000 users may be listed."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/conversations.invite",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"conversations.invite"
					]
				},
				"description": "Invites users to a channel."
			},
			"response": [
				{
					"id": "39e5cdd0-b50c-4a4e-8bac-3337ef79749d",
					"name": "Typical success response when an invitation is extended",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "The ID of the public or private channel to invite user(s) to.",
									"key": "channel",
									"value": "mo"
								},
								{
									"description": "A comma separated list of user IDs. Up to 1000 users may be listed.",
									"key": "users",
									"value": "Duis officia ad"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.invite",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.invite"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"channel\": {\n    \"created\": 1449252889,\n    \"creator\": \"W012A3BCD\",\n    \"id\": \"C012AB3CD\",\n    \"is_archived\": false,\n    \"is_channel\": true,\n    \"is_ext_shared\": false,\n    \"is_general\": true,\n    \"is_group\": false,\n    \"is_im\": false,\n    \"is_member\": true,\n    \"is_mpim\": false,\n    \"is_org_shared\": false,\n    \"is_pending_ext_shared\": false,\n    \"is_private\": false,\n    \"is_read_only\": false,\n    \"is_shared\": false,\n    \"last_read\": \"1502126650.228446\",\n    \"locale\": \"en-US\",\n    \"name\": \"general\",\n    \"name_normalized\": \"general\",\n    \"num_members\": 23,\n    \"pending_shared\": [],\n    \"previous_names\": [\n      \"specifics\",\n      \"abstractions\",\n      \"etc\"\n    ],\n    \"purpose\": {\n      \"creator\": \"W012A3BCD\",\n      \"last_set\": 1449709364,\n      \"value\": \"This part of the workspace is for fun. Make fun here.\"\n    },\n    \"topic\": {\n      \"creator\": \"W012A3BCD\",\n      \"last_set\": 1449709364,\n      \"value\": \"For public discussion of generalities\"\n    },\n    \"unlinked\": 0\n  },\n  \"ok\": true\n}"
				},
				{
					"id": "83b8f6eb-bf2b-4d6c-9608-cd934ecf0bd8",
					"name": "Typical error response when an invite is attempted on a conversation type that does not support it",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "The ID of the public or private channel to invite user(s) to.",
									"key": "channel",
									"value": "mo"
								},
								{
									"description": "A comma separated list of user IDs. Up to 1000 users may be listed.",
									"key": "users",
									"value": "Duis officia ad"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.invite",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.invite"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"method_not_supported_for_channel_type\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "conversations join",
			"id": "970d9b50-e410-4540-b2b8-dc4eb6b13132",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `channels:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "tempor",
							"description": "ID of conversation to join"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/conversations.join",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"conversations.join"
					]
				},
				"description": "Joins an existing conversation."
			},
			"response": [
				{
					"id": "631b3104-5691-478a-a3ff-a170ab7775d8",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `channels:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "ID of conversation to join",
									"key": "channel",
									"value": "tempor"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.join",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.join"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"channel\": {\n    \"created\": 1449252889,\n    \"creator\": \"U061F7AUR\",\n    \"id\": \"C061EG9SL\",\n    \"is_archived\": false,\n    \"is_channel\": true,\n    \"is_ext_shared\": false,\n    \"is_general\": true,\n    \"is_group\": false,\n    \"is_im\": false,\n    \"is_member\": true,\n    \"is_mpim\": false,\n    \"is_org_shared\": false,\n    \"is_pending_ext_shared\": false,\n    \"is_private\": false,\n    \"is_shared\": false,\n    \"name\": \"general\",\n    \"name_normalized\": \"general\",\n    \"pending_shared\": [],\n    \"previous_names\": [],\n    \"purpose\": {\n      \"creator\": \"\",\n      \"last_set\": 0,\n      \"value\": \"For widget discussion\"\n    },\n    \"topic\": {\n      \"creator\": \"\",\n      \"last_set\": 0,\n      \"value\": \"Which widget do you worry about?\"\n    },\n    \"unlinked\": 0\n  },\n  \"ok\": true,\n  \"response_metadata\": {\n    \"warnings\": [\n      \"already_in_channel\"\n    ]\n  },\n  \"warning\": \"already_in_channel\"\n}"
				},
				{
					"id": "6e136ff9-b4b9-4e54-928c-6b65f22f08d9",
					"name": "Typical error response if the conversation is archived and cannot be joined",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `channels:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "ID of conversation to join",
									"key": "channel",
									"value": "tempor"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.join",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.join"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"is_archived\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "conversations kick",
			"id": "f785d621-a7b2-4840-8b2f-6d93841db2a0",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `conversations:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "Exc",
							"description": "ID of conversation to remove user from."
						},
						{
							"key": "user",
							"value": "ad tempor nulla",
							"description": "User ID to be removed."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/conversations.kick",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"conversations.kick"
					]
				},
				"description": "Removes a user from a conversation."
			},
			"response": [
				{
					"id": "fd5d73b2-6744-4122-8fae-e15c22c7d84d",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "ID of conversation to remove user from.",
									"key": "channel",
									"value": "Exc"
								},
								{
									"description": "User ID to be removed.",
									"key": "user",
									"value": "ad tempor nulla"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.kick",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.kick"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "74624923-a3e6-4ee7-ae3b-e2f3218a38be",
					"name": "Typical error response when you attempt to kick yourself from a channel",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "ID of conversation to remove user from.",
									"key": "channel",
									"value": "Exc"
								},
								{
									"description": "User ID to be removed.",
									"key": "user",
									"value": "ad tempor nulla"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.kick",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.kick"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"cant_kick_self\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "conversations leave",
			"id": "4a2b3a22-a6a0-4679-9c08-ba5aa2af28f2",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `conversations:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "dolore aliqua velit ipsum",
							"description": "Conversation to leave"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/conversations.leave",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"conversations.leave"
					]
				},
				"description": "Leaves a conversation."
			},
			"response": [
				{
					"id": "7e844182-84b0-4b6c-8096-6dd7e0c3a80a",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Conversation to leave",
									"key": "channel",
									"value": "dolore aliqua velit ipsum"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.leave",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.leave"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "86735b33-baff-44ae-bd6e-7293eb397cf2",
					"name": "Typical error response when attempting to leave a workspace's \"general\" channel",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Conversation to leave",
									"key": "channel",
									"value": "dolore aliqua velit ipsum"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.leave",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.leave"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"cant_leave_general\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "conversations list",
			"id": "bc674304-66f9-4369-8ede-9f406b4993d0",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/conversations.list?token=amet&exclude_archived=true&types=amet&limit=-60142516&cursor=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"conversations.list"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "Authentication token. Requires scope: `conversations:read`"
						},
						{
							"key": "exclude_archived",
							"value": "true",
							"description": "Set to `true` to exclude archived channels from the list"
						},
						{
							"key": "types",
							"value": "amet",
							"description": "Mix and match channel types by providing a comma-separated list of any combination of `public_channel`, `private_channel`, `mpim`, `im`"
						},
						{
							"key": "limit",
							"value": "-60142516",
							"description": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the list hasn't been reached. Must be an integer no larger than 1000."
						},
						{
							"key": "cursor",
							"value": "amet",
							"description": "Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more detail."
						}
					]
				},
				"description": "Lists all channels in a Slack team."
			},
			"response": [
				{
					"id": "f81b06be-944c-47e1-94ed-b8d20d48e929",
					"name": "Typical success response with only public channels",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/conversations.list?token=amet&exclude_archived=true&types=amet&limit=-60142516&cursor=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.list"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "exclude_archived",
									"value": "true"
								},
								{
									"key": "types",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								},
								{
									"key": "cursor",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"channels\": [\n    {\n      \"created\": 1449252889,\n      \"creator\": \"U012A3CDE\",\n      \"id\": \"C012AB3CD\",\n      \"is_archived\": false,\n      \"is_channel\": true,\n      \"is_ext_shared\": false,\n      \"is_general\": true,\n      \"is_group\": false,\n      \"is_im\": false,\n      \"is_member\": true,\n      \"is_mpim\": false,\n      \"is_org_shared\": false,\n      \"is_pending_ext_shared\": false,\n      \"is_private\": false,\n      \"is_shared\": false,\n      \"name\": \"general\",\n      \"name_normalized\": \"general\",\n      \"num_members\": 4,\n      \"pending_shared\": [],\n      \"previous_names\": [],\n      \"purpose\": {\n        \"creator\": \"\",\n        \"last_set\": 0,\n        \"value\": \"This channel is for team-wide communication and announcements. All team members are in this channel.\"\n      },\n      \"topic\": {\n        \"creator\": \"\",\n        \"last_set\": 0,\n        \"value\": \"Company-wide announcements and work-based matters\"\n      },\n      \"unlinked\": 0\n    },\n    {\n      \"created\": 1449252889,\n      \"creator\": \"U061F7AUR\",\n      \"id\": \"C061EG9T2\",\n      \"is_archived\": false,\n      \"is_channel\": true,\n      \"is_ext_shared\": false,\n      \"is_general\": false,\n      \"is_group\": false,\n      \"is_im\": false,\n      \"is_member\": true,\n      \"is_mpim\": false,\n      \"is_org_shared\": false,\n      \"is_pending_ext_shared\": false,\n      \"is_private\": false,\n      \"is_shared\": false,\n      \"name\": \"random\",\n      \"name_normalized\": \"random\",\n      \"num_members\": 4,\n      \"pending_shared\": [],\n      \"previous_names\": [],\n      \"purpose\": {\n        \"creator\": \"\",\n        \"last_set\": 0,\n        \"value\": \"A place for non-work-related flimflam, faffing, hodge-podge or jibber-jabber you'd prefer to keep out of more focused work-related channels.\"\n      },\n      \"topic\": {\n        \"creator\": \"\",\n        \"last_set\": 0,\n        \"value\": \"Non-work banter and water cooler conversation\"\n      },\n      \"unlinked\": 0\n    }\n  ],\n  \"ok\": true,\n  \"response_metadata\": {\n    \"next_cursor\": \"dGVhbTpDMDYxRkE1UEI=\"\n  }\n}"
				},
				{
					"id": "2ffec25d-ff68-434c-bf47-bebfd0be6621",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/conversations.list?token=amet&exclude_archived=true&types=amet&limit=-60142516&cursor=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.list"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "exclude_archived",
									"value": "true"
								},
								{
									"key": "types",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								},
								{
									"key": "cursor",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "conversations mark",
			"id": "193d3297-25a5-44bf-98fb-d8fdea62eb4f",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `conversations:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "ullamco ad eu ex",
							"description": "Channel or conversation to set the read cursor for."
						},
						{
							"key": "ts",
							"value": "-81701484.49417228",
							"description": "Unique identifier of message you want marked as most recently seen in this conversation."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/conversations.mark",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"conversations.mark"
					]
				},
				"description": "Sets the read cursor in a channel."
			},
			"response": [
				{
					"id": "e1ccc6ad-a3be-4312-be14-5c1a921e5d9b",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Channel or conversation to set the read cursor for.",
									"key": "channel",
									"value": "ullamco ad eu ex"
								},
								{
									"description": "Unique identifier of message you want marked as most recently seen in this conversation.",
									"key": "ts",
									"value": "-81701484.49417228"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.mark",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.mark"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "13922b79-eda6-455a-b6c6-9d8cf1bbe1f6",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Channel or conversation to set the read cursor for.",
									"key": "channel",
									"value": "ullamco ad eu ex"
								},
								{
									"description": "Unique identifier of message you want marked as most recently seen in this conversation.",
									"key": "ts",
									"value": "-81701484.49417228"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.mark",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.mark"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "conversations members",
			"id": "9b0a4a85-0f2e-4ceb-987b-0b6160966847",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/conversations.members?token=amet&channel=amet&limit=-60142516&cursor=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"conversations.members"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "Authentication token. Requires scope: `conversations:read`"
						},
						{
							"key": "channel",
							"value": "amet",
							"description": "ID of the conversation to retrieve members for"
						},
						{
							"key": "limit",
							"value": "-60142516",
							"description": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the users list hasn't been reached."
						},
						{
							"key": "cursor",
							"value": "amet",
							"description": "Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more detail."
						}
					]
				},
				"description": "Retrieve members of a conversation."
			},
			"response": [
				{
					"id": "375e8909-c0ba-4100-9af6-7a26fb9e69a2",
					"name": "Typical paginated success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/conversations.members?token=amet&channel=amet&limit=-60142516&cursor=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.members"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "channel",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								},
								{
									"key": "cursor",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"members\": [\n    \"U023BECGF\",\n    \"U061F7AUR\",\n    \"W012A3CDE\"\n  ],\n  \"ok\": true,\n  \"response_metadata\": {\n    \"next_cursor\": \"e3VzZXJfaWQ6IFcxMjM0NTY3fQ==\"\n  }\n}"
				},
				{
					"id": "55a2aac2-db65-496f-bd27-f635b0836b2c",
					"name": "Typical error response when an invalid cursor is provided",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/conversations.members?token=amet&channel=amet&limit=-60142516&cursor=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.members"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "channel",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								},
								{
									"key": "cursor",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_cursor\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "conversations open",
			"id": "688f4b60-b54d-419b-9e40-5123d421bb9d",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `conversations:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "ex",
							"description": "Resume a conversation by supplying an `im` or `mpim`'s ID. Or provide the `users` field instead."
						},
						{
							"key": "users",
							"value": "dolore nulla non exercitation",
							"description": "Comma separated lists of users. If only one user is included, this creates a 1:1 DM.  The ordering of the users is preserved whenever a multi-person direct message is returned. Supply a `channel` when not supplying `users`."
						},
						{
							"key": "return_im",
							"value": "false",
							"description": "Boolean, indicates you want the full IM channel definition in the response."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/conversations.open",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"conversations.open"
					]
				},
				"description": "Opens or resumes a direct message or multi-person direct message."
			},
			"response": [
				{
					"id": "b8297432-6714-4f8c-a23c-fec8a00ceadf",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Resume a conversation by supplying an `im` or `mpim`'s ID. Or provide the `users` field instead.",
									"key": "channel",
									"value": "ex"
								},
								{
									"description": "Comma separated lists of users. If only one user is included, this creates a 1:1 DM.  The ordering of the users is preserved whenever a multi-person direct message is returned. Supply a `channel` when not supplying `users`.",
									"key": "users",
									"value": "dolore nulla non exercitation"
								},
								{
									"description": "Boolean, indicates you want the full IM channel definition in the response.",
									"key": "return_im",
									"value": "false"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.open",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.open"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"channel\": {\n    \"id\": \"D069C7QFK\"\n  },\n  \"ok\": true\n}"
				},
				{
					"id": "06f7f3d4-04d8-4fa2-8e56-41b4e2ed1fce",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Resume a conversation by supplying an `im` or `mpim`'s ID. Or provide the `users` field instead.",
									"key": "channel",
									"value": "ex"
								},
								{
									"description": "Comma separated lists of users. If only one user is included, this creates a 1:1 DM.  The ordering of the users is preserved whenever a multi-person direct message is returned. Supply a `channel` when not supplying `users`.",
									"key": "users",
									"value": "dolore nulla non exercitation"
								},
								{
									"description": "Boolean, indicates you want the full IM channel definition in the response.",
									"key": "return_im",
									"value": "false"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.open",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.open"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"channel_not_found\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "conversations rename",
			"id": "d5ff8a28-6424-46bd-9625-520b10fc5f56",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `conversations:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "ad in dolor qui Lorem",
							"description": "ID of conversation to rename"
						},
						{
							"key": "name",
							"value": "voluptate pariatur",
							"description": "New name for conversation."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/conversations.rename",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"conversations.rename"
					]
				},
				"description": "Renames a conversation."
			},
			"response": [
				{
					"id": "2fa06807-c0cb-4686-a57f-75bc2b7d6d28",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "ID of conversation to rename",
									"key": "channel",
									"value": "ad in dolor qui Lorem"
								},
								{
									"description": "New name for conversation.",
									"key": "name",
									"value": "voluptate pariatur"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.rename",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.rename"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"channel\": {\n    \"created\": 1449252889,\n    \"creator\": \"W012A3BCD\",\n    \"id\": \"C012AB3CD\",\n    \"is_archived\": false,\n    \"is_channel\": true,\n    \"is_ext_shared\": false,\n    \"is_general\": true,\n    \"is_group\": false,\n    \"is_im\": false,\n    \"is_member\": true,\n    \"is_mpim\": false,\n    \"is_org_shared\": false,\n    \"is_pending_ext_shared\": false,\n    \"is_private\": false,\n    \"is_read_only\": false,\n    \"is_shared\": false,\n    \"last_read\": \"1502126650.228446\",\n    \"locale\": \"en-US\",\n    \"name\": \"general\",\n    \"name_normalized\": \"general\",\n    \"num_members\": 23,\n    \"pending_shared\": [],\n    \"previous_names\": [\n      \"specifics\",\n      \"abstractions\",\n      \"etc\"\n    ],\n    \"purpose\": {\n      \"creator\": \"W012A3BCD\",\n      \"last_set\": 1449709364,\n      \"value\": \"This part of the workspace is for fun. Make fun here.\"\n    },\n    \"topic\": {\n      \"creator\": \"W012A3BCD\",\n      \"last_set\": 1449709364,\n      \"value\": \"For public discussion of generalities\"\n    },\n    \"unlinked\": 0\n  },\n  \"ok\": true\n}"
				},
				{
					"id": "24837b54-2191-409a-b8a0-8e23ab65eb63",
					"name": "Typical error response when the calling user is not a member of the conversation",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "ID of conversation to rename",
									"key": "channel",
									"value": "ad in dolor qui Lorem"
								},
								{
									"description": "New name for conversation.",
									"key": "name",
									"value": "voluptate pariatur"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.rename",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.rename"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"not_in_channel\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "conversations replies",
			"id": "62de911e-8f85-495d-97d0-f98bb41d3088",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/conversations.replies?token=amet&channel=amet&ts=53722643.01050994&latest=53722643.01050994&oldest=53722643.01050994&inclusive=true&limit=-60142516&cursor=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"conversations.replies"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "Authentication token. Requires scope: `conversations:history`"
						},
						{
							"key": "channel",
							"value": "amet",
							"description": "Conversation ID to fetch thread from."
						},
						{
							"key": "ts",
							"value": "53722643.01050994",
							"description": "Unique identifier of a thread's parent message. `ts` must be the timestamp of an existing message with 0 or more replies. If there are no replies then just the single message referenced by `ts` will return - it is just an ordinary, unthreaded message."
						},
						{
							"key": "latest",
							"value": "53722643.01050994",
							"description": "End of time range of messages to include in results."
						},
						{
							"key": "oldest",
							"value": "53722643.01050994",
							"description": "Start of time range of messages to include in results."
						},
						{
							"key": "inclusive",
							"value": "true",
							"description": "Include messages with latest or oldest timestamp in results only when either timestamp is specified."
						},
						{
							"key": "limit",
							"value": "-60142516",
							"description": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the users list hasn't been reached."
						},
						{
							"key": "cursor",
							"value": "amet",
							"description": "Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more detail."
						}
					]
				},
				"description": "Retrieve a thread of messages posted to a conversation"
			},
			"response": [
				{
					"id": "65fd7afb-b04c-4fe2-82a9-c3716b594f56",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/conversations.replies?token=amet&channel=amet&ts=53722643.01050994&latest=53722643.01050994&oldest=53722643.01050994&inclusive=true&limit=-60142516&cursor=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.replies"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "channel",
									"value": "amet"
								},
								{
									"key": "ts",
									"value": "53722643.01050994"
								},
								{
									"key": "latest",
									"value": "53722643.01050994"
								},
								{
									"key": "oldest",
									"value": "53722643.01050994"
								},
								{
									"key": "inclusive",
									"value": "true"
								},
								{
									"key": "limit",
									"value": "-60142516"
								},
								{
									"key": "cursor",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"has_more\": true,\n  \"messages\": [\n    {\n      \"last_read\": \"1484678597.521003\",\n      \"reply_count\": 3,\n      \"subscribed\": true,\n      \"text\": \"island\",\n      \"thread_ts\": \"1482960137.003543\",\n      \"ts\": \"1482960137.003543\",\n      \"type\": \"message\",\n      \"unread_count\": 0,\n      \"user\": \"U061F7AUR\"\n    },\n    {\n      \"parent_user_id\": \"U061F7AUR\",\n      \"text\": \"one island\",\n      \"thread_ts\": \"1482960137.003543\",\n      \"ts\": \"1483037603.017503\",\n      \"type\": \"message\",\n      \"user\": \"U061F7AUR\"\n    },\n    {\n      \"parent_user_id\": \"U061F7AUR\",\n      \"text\": \"two island\",\n      \"thread_ts\": \"1482960137.003543\",\n      \"ts\": \"1483051909.018632\",\n      \"type\": \"message\",\n      \"user\": \"U061F7AUR\"\n    },\n    {\n      \"parent_user_id\": \"U061F7AUR\",\n      \"text\": \"three for the land\",\n      \"thread_ts\": \"1482960137.003543\",\n      \"ts\": \"1483125339.020269\",\n      \"type\": \"message\",\n      \"user\": \"U061F7AUR\"\n    }\n  ],\n  \"ok\": true,\n  \"response_metadata\": {\n    \"next_cursor\": \"bmV4dF90czoxNDg0Njc4MjkwNTE3MDkx\"\n  }\n}"
				},
				{
					"id": "05252d63-00c4-4623-905d-cf9919f4d044",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/conversations.replies?token=amet&channel=amet&ts=53722643.01050994&latest=53722643.01050994&oldest=53722643.01050994&inclusive=true&limit=-60142516&cursor=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.replies"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "channel",
									"value": "amet"
								},
								{
									"key": "ts",
									"value": "53722643.01050994"
								},
								{
									"key": "latest",
									"value": "53722643.01050994"
								},
								{
									"key": "oldest",
									"value": "53722643.01050994"
								},
								{
									"key": "inclusive",
									"value": "true"
								},
								{
									"key": "limit",
									"value": "-60142516"
								},
								{
									"key": "cursor",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"thread_not_found\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "conversations set Purpose",
			"id": "2f8267d2-c251-426d-b609-c8441c00c678",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `conversations:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "do est veniam dolore",
							"description": "Conversation to set the purpose of"
						},
						{
							"key": "purpose",
							"value": "voluptate",
							"description": "A new, specialer purpose"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/conversations.setPurpose",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"conversations.setPurpose"
					]
				},
				"description": "Sets the purpose for a conversation."
			},
			"response": [
				{
					"id": "6779d5ba-0f75-46d1-a409-bdc7e08f4c2f",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Conversation to set the purpose of",
									"key": "channel",
									"value": "do est veniam dolore"
								},
								{
									"description": "A new, specialer purpose",
									"key": "purpose",
									"value": "voluptate"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.setPurpose",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.setPurpose"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "62fc641f-52a9-4e27-9a5d-3de47f702560",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Conversation to set the purpose of",
									"key": "channel",
									"value": "do est veniam dolore"
								},
								{
									"description": "A new, specialer purpose",
									"key": "purpose",
									"value": "voluptate"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.setPurpose",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.setPurpose"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "conversations set Topic",
			"id": "ac13a53a-5494-454a-877c-0a6dc3d8655a",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `conversations:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "laboris labore reprehenderit",
							"description": "Conversation to set the topic of"
						},
						{
							"key": "topic",
							"value": "dolor reprehenderit",
							"description": "The new topic string. Does not support formatting or linkification."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/conversations.setTopic",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"conversations.setTopic"
					]
				},
				"description": "Sets the topic for a conversation."
			},
			"response": [
				{
					"id": "7c1281a8-9a3a-4e3d-8e17-c92527187a2e",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Conversation to set the topic of",
									"key": "channel",
									"value": "laboris labore reprehenderit"
								},
								{
									"description": "The new topic string. Does not support formatting or linkification.",
									"key": "topic",
									"value": "dolor reprehenderit"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.setTopic",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.setTopic"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "2ca9491c-d985-4bfb-b3ef-5a146a9bdb58",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Conversation to set the topic of",
									"key": "channel",
									"value": "laboris labore reprehenderit"
								},
								{
									"description": "The new topic string. Does not support formatting or linkification.",
									"key": "topic",
									"value": "dolor reprehenderit"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.setTopic",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.setTopic"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "conversations unarchive",
			"id": "b1007d63-cd37-40f5-b610-8a5693e8ad2c",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `conversations:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "exercitation minim occaecat",
							"description": "ID of conversation to unarchive"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/conversations.unarchive",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"conversations.unarchive"
					]
				},
				"description": "Reverses conversation archival."
			},
			"response": [
				{
					"id": "ebb7d681-cdcb-42fd-b490-c92a8e204513",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "ID of conversation to unarchive",
									"key": "channel",
									"value": "exercitation minim occaecat"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.unarchive",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.unarchive"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "16d1e783-87a5-4bc6-bdc8-bf5dea0b2874",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `conversations:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "ID of conversation to unarchive",
									"key": "channel",
									"value": "exercitation minim occaecat"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/conversations.unarchive",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations.unarchive"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"channel_not_found\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "dialog open",
			"id": "176fe50c-e948-4117-8da4-94beda16c2b4",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `none`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/dialog.open?dialog=amet&trigger_id=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"dialog.open"
					],
					"query": [
						{
							"key": "dialog",
							"value": "amet",
							"description": "(Required) The dialog definition. This must be a JSON-encoded string."
						},
						{
							"key": "trigger_id",
							"value": "amet",
							"description": "(Required) Exchange a trigger to post to the user."
						}
					]
				},
				"description": "Open a dialog with a user"
			},
			"response": [
				{
					"id": "1e5f7ab5-67d8-4878-9ab3-756cf0447e59",
					"name": "Typical success response is quite minimal.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `none`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dialog.open?dialog=amet&trigger_id=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dialog.open"
							],
							"query": [
								{
									"key": "dialog",
									"value": "amet"
								},
								{
									"key": "trigger_id",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "d24d6d57-149b-4c81-ab35-6661f7488afe",
					"name": "Typical error response, before getting to any possible validation errors.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `none`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dialog.open?dialog=amet&trigger_id=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dialog.open"
							],
							"query": [
								{
									"key": "dialog",
									"value": "amet"
								},
								{
									"key": "trigger_id",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"missing_trigger\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "dnd end Dnd",
			"id": "6bb43680-89e5-445f-ba8d-8ba810723e8d",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `dnd:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/dnd.endDnd",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"dnd.endDnd"
					]
				},
				"description": "Ends the current user's Do Not Disturb session immediately."
			},
			"response": [
				{
					"id": "f7e0f9de-fb4d-4e9e-8f3c-23ba92712897",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `dnd:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dnd.endDnd",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dnd.endDnd"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "1e556d6a-a8cb-4b93-86fa-90bd6b73d6e6",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `dnd:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dnd.endDnd",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dnd.endDnd"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "dnd end Snooze",
			"id": "e341e82f-12e3-4b4f-a3dd-bae88b74e36e",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `dnd:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/dnd.endSnooze",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"dnd.endSnooze"
					]
				},
				"description": "Ends the current user's snooze mode immediately."
			},
			"response": [
				{
					"id": "f5a56993-1dbd-48f0-82ad-4388bb4a990b",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `dnd:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dnd.endSnooze",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dnd.endSnooze"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "42e8887a-92fd-45c2-97d6-902e9a23a11b",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `dnd:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dnd.endSnooze",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dnd.endSnooze"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "dnd info",
			"id": "6f8d3ad8-c9bb-4127-b205-f02fe1927faf",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/dnd.info?token=amet&user=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"dnd.info"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "Authentication token. Requires scope: `dnd:read`"
						},
						{
							"key": "user",
							"value": "amet",
							"description": "User to fetch status for (defaults to current user)"
						}
					]
				},
				"description": "Retrieves a user's current Do Not Disturb status."
			},
			"response": [
				{
					"id": "c5faa089-ab79-490b-ac05-694d64158a93",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dnd.info?token=amet&user=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dnd.info"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "user",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "54d0360b-2f01-4d9b-aa01-047db92f632a",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dnd.info?token=amet&user=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dnd.info"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "user",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "dnd set Snooze",
			"id": "4a4c07e2-aab2-4228-9332-ec7ef5daa66f",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "token",
							"value": "Ut laboris",
							"description": "(Required) Authentication token. Requires scope: `dnd:write`"
						},
						{
							"key": "num_minutes",
							"value": "minim ut labore aute",
							"description": "(Required) Number of minutes, from now, to snooze until."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/dnd.setSnooze",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"dnd.setSnooze"
					]
				},
				"description": "Turns on Do Not Disturb mode for the current user, or changes its duration."
			},
			"response": [
				{
					"id": "df90406e-bfff-42ce-b485-4b5c8ba30540",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `dnd:write`",
									"key": "token",
									"value": "Ut laboris"
								},
								{
									"description": "(Required) Number of minutes, from now, to snooze until.",
									"key": "num_minutes",
									"value": "minim ut labore aute"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/dnd.setSnooze",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dnd.setSnooze"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "7da4189b-bfaf-417e-b7a2-4a313703456f",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `dnd:write`",
									"key": "token",
									"value": "Ut laboris"
								},
								{
									"description": "(Required) Number of minutes, from now, to snooze until.",
									"key": "num_minutes",
									"value": "minim ut labore aute"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/dnd.setSnooze",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dnd.setSnooze"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "dnd team Info",
			"id": "7640c9d8-1b5a-45fc-985a-2797578e1345",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/dnd.teamInfo?token=amet&users=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"dnd.teamInfo"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "Authentication token. Requires scope: `dnd:read`"
						},
						{
							"key": "users",
							"value": "amet",
							"description": "Comma-separated list of users to fetch Do Not Disturb status for"
						}
					]
				},
				"description": "Retrieves the Do Not Disturb status for up to 50 users on a team."
			},
			"response": [
				{
					"id": "a375aac2-3abb-403e-b6e9-bb917a4b845a",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dnd.teamInfo?token=amet&users=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dnd.teamInfo"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "users",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"users\": {\n    \"U023BECGF\": {\n      \"dnd_enabled\": true,\n      \"next_dnd_end_ts\": 1450423800,\n      \"next_dnd_start_ts\": 1450387800\n    },\n    \"W058CJVAA\": {\n      \"dnd_enabled\": false,\n      \"next_dnd_end_ts\": 1,\n      \"next_dnd_start_ts\": 1\n    }\n  }\n}"
				},
				{
					"id": "69a5d201-fe7f-4295-843a-abb081b4e3ae",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dnd.teamInfo?token=amet&users=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dnd.teamInfo"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "users",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "emoji list",
			"id": "a492f4c0-eda5-48bf-b2ab-305821173aec",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/emoji.list?token=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"emoji.list"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "(Required) Authentication token. Requires scope: `emoji:read`"
						}
					]
				},
				"description": "Lists custom emoji for a team."
			},
			"response": [
				{
					"id": "77af0533-a8e7-47af-b6f7-123317f845a0",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/emoji.list?token=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"emoji.list"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "bae03a04-1fe0-429f-8b7b-b8a9a83e813b",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/emoji.list?token=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"emoji.list"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "files comments delete",
			"id": "c5640c4c-d4d4-4d2a-8145-619d4929b573",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `files:write:user`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "file",
							"value": "veniam voluptate adipisicing et amet",
							"description": "File to delete a comment from."
						},
						{
							"key": "id",
							"value": "ut do Duis tempor",
							"description": "The comment to delete."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/files.comments.delete",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"files.comments.delete"
					]
				},
				"description": "Deletes an existing comment on a file."
			},
			"response": [
				{
					"id": "98c74efc-0c02-4e72-af10-8a9a2d18b623",
					"name": "Standard success response is very simple",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `files:write:user`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "File to delete a comment from.",
									"key": "file",
									"value": "veniam voluptate adipisicing et amet"
								},
								{
									"description": "The comment to delete.",
									"key": "id",
									"value": "ut do Duis tempor"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/files.comments.delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.comments.delete"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "58f39d73-af95-413e-b40b-5f7b83604b8f",
					"name": "Standard failure response when used with an invalid token",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `files:write:user`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "File to delete a comment from.",
									"key": "file",
									"value": "veniam voluptate adipisicing et amet"
								},
								{
									"description": "The comment to delete.",
									"key": "id",
									"value": "ut do Duis tempor"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/files.comments.delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.comments.delete"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"file_not_found\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "files delete",
			"id": "88fe3cb0-fddc-4429-a72e-3a0c0ef4a3fb",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `files:write:user`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "file",
							"value": "ut dolore irure veniam dolor",
							"description": "ID of file to delete."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/files.delete",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"files.delete"
					]
				},
				"description": "Deletes a file."
			},
			"response": [
				{
					"id": "91a11be6-2803-47ae-9566-999c38398161",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `files:write:user`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "ID of file to delete.",
									"key": "file",
									"value": "ut dolore irure veniam dolor"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/files.delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.delete"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "eea155ee-45c5-4aa2-9b6a-da18d76c99fa",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `files:write:user`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "ID of file to delete.",
									"key": "file",
									"value": "ut dolore irure veniam dolor"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/files.delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.delete"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "files info",
			"id": "ff1ef092-2be0-4eca-8e5a-7e45e500ecce",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/files.info?token=amet&file=amet&count=amet&page=amet&limit=-60142516&cursor=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"files.info"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "Authentication token. Requires scope: `files:read`"
						},
						{
							"key": "file",
							"value": "amet",
							"description": "Specify a file by providing its ID."
						},
						{
							"key": "count",
							"value": "amet"
						},
						{
							"key": "page",
							"value": "amet"
						},
						{
							"key": "limit",
							"value": "-60142516",
							"description": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the list hasn't been reached."
						},
						{
							"key": "cursor",
							"value": "amet",
							"description": "Parameter for pagination. File comments are paginated for a single file. Set `cursor` equal to the `next_cursor` attribute returned by the previous request's `response_metadata`. This parameter is optional, but pagination is mandatory: the default value simply fetches the first \"page\" of the collection of comments. See [pagination](/docs/pagination) for more details."
						}
					]
				},
				"description": "Gets information about a file."
			},
			"response": [
				{
					"id": "ce2e1ef8-73cd-48f4-a22b-05340da4387b",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/files.info?token=amet&file=amet&count=amet&page=amet&limit=-60142516&cursor=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.info"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "file",
									"value": "amet"
								},
								{
									"key": "count",
									"value": "amet"
								},
								{
									"key": "page",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								},
								{
									"key": "cursor",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"comments\": [],\n  \"file\": {\n    \"channels\": [\n      \"C0T8SE4AU\"\n    ],\n    \"comments_count\": 0,\n    \"created\": 1531763342,\n    \"deanimate_gif\": \"https://.../tedair_deanimate_gif.png\",\n    \"display_as_bot\": false,\n    \"editable\": false,\n    \"external_type\": \"\",\n    \"filetype\": \"gif\",\n    \"groups\": [],\n    \"has_rich_preview\": false,\n    \"id\": \"F0S43PZDF\",\n    \"image_exif_rotation\": 1,\n    \"ims\": [],\n    \"is_external\": false,\n    \"is_public\": true,\n    \"is_starred\": false,\n    \"mimetype\": \"image/gif\",\n    \"mode\": \"hosted\",\n    \"name\": \"tedair.gif\",\n    \"original_h\": 226,\n    \"original_w\": 176,\n    \"permalink\": \"https://.../tedair.gif\",\n    \"permalink_public\": \"https://.../...\",\n    \"pjpeg\": \"https://.../tedair_pjpeg.jpg\",\n    \"pretty_type\": \"GIF\",\n    \"public_url_shared\": false,\n    \"shares\": {\n      \"public\": {\n        \"C0T8SE4AU\": [\n          {\n            \"channel_name\": \"file-under\",\n            \"latest_reply\": \"1531763348.000001\",\n            \"reply_count\": 1,\n            \"reply_users\": [\n              \"U061F7AUR\"\n            ],\n            \"reply_users_count\": 1,\n            \"team_id\": \"T061EG9R6\",\n            \"thread_ts\": \"1531763273.000015\",\n            \"ts\": \"1531763348.000001\"\n          }\n        ]\n      }\n    },\n    \"size\": 137531,\n    \"thumb_160\": \"https://.../tedair_=_160.png\",\n    \"thumb_360\": \"https://.../tedair_360.png\",\n    \"thumb_360_gif\": \"https://.../tedair_360.gif\",\n    \"thumb_360_h\": 226,\n    \"thumb_360_w\": 176,\n    \"thumb_64\": \"https://.../tedair_64.png\",\n    \"thumb_80\": \"https://.../tedair_80.png\",\n    \"timestamp\": 1531763342,\n    \"title\": \"tedair.gif\",\n    \"url_private\": \"https://.../tedair.gif\",\n    \"url_private_download\": \"https://.../tedair.gif\",\n    \"user\": \"U061F7AUR\",\n    \"username\": \"\"\n  },\n  \"ok\": true,\n  \"response_metadata\": {\n    \"next_cursor\": \"dGVhbTpDMUg5UkVTR0w=\"\n  }\n}"
				},
				{
					"id": "b86874b9-bd85-4258-b6cb-049338fdb3ea",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/files.info?token=amet&file=amet&count=amet&page=amet&limit=-60142516&cursor=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.info"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "file",
									"value": "amet"
								},
								{
									"key": "count",
									"value": "amet"
								},
								{
									"key": "page",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								},
								{
									"key": "cursor",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "files list",
			"id": "6fabec0a-f55b-478e-9c80-3140f497d1f0",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/files.list?token=amet&user=amet&channel=amet&ts_from=53722643.01050994&ts_to=53722643.01050994&types=amet&count=amet&page=amet&show_files_hidden_by_limit=true",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"files.list"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "Authentication token. Requires scope: `files:read`"
						},
						{
							"key": "user",
							"value": "amet",
							"description": "Filter files created by a single user."
						},
						{
							"key": "channel",
							"value": "amet",
							"description": "Filter files appearing in a specific channel, indicated by its ID."
						},
						{
							"key": "ts_from",
							"value": "53722643.01050994",
							"description": "Filter files created after this timestamp (inclusive)."
						},
						{
							"key": "ts_to",
							"value": "53722643.01050994",
							"description": "Filter files created before this timestamp (inclusive)."
						},
						{
							"key": "types",
							"value": "amet",
							"description": "Filter files by type ([see below](#file_types)). You can pass multiple values in the types argument, like `types=spaces,snippets`.The default value is `all`, which does not filter the list."
						},
						{
							"key": "count",
							"value": "amet"
						},
						{
							"key": "page",
							"value": "amet"
						},
						{
							"key": "show_files_hidden_by_limit",
							"value": "true",
							"description": "Show truncated file info for files hidden due to being too old, and the team who owns the file being over the file limit."
						}
					]
				},
				"description": "List for a team, in a channel, or from a user with applied filters."
			},
			"response": [
				{
					"id": "04664a30-c9b8-4777-b012-c87a72dbb262",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/files.list?token=amet&user=amet&channel=amet&ts_from=53722643.01050994&ts_to=53722643.01050994&types=amet&count=amet&page=amet&show_files_hidden_by_limit=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.list"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "user",
									"value": "amet"
								},
								{
									"key": "channel",
									"value": "amet"
								},
								{
									"key": "ts_from",
									"value": "53722643.01050994"
								},
								{
									"key": "ts_to",
									"value": "53722643.01050994"
								},
								{
									"key": "types",
									"value": "amet"
								},
								{
									"key": "count",
									"value": "amet"
								},
								{
									"key": "page",
									"value": "amet"
								},
								{
									"key": "show_files_hidden_by_limit",
									"value": "true"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"files\": [\n    {\n      \"channels\": [\n        \"C0T8SE4AU\"\n      ],\n      \"comments_count\": 0,\n      \"created\": 1531763254,\n      \"deanimate_gif\": \"https://.../billair_deanimate_gif.png\",\n      \"display_as_bot\": false,\n      \"editable\": false,\n      \"external_type\": \"\",\n      \"filetype\": \"gif\",\n      \"groups\": [],\n      \"id\": \"F0S43P1CZ\",\n      \"image_exif_rotation\": 1,\n      \"ims\": [],\n      \"is_external\": false,\n      \"is_public\": true,\n      \"mimetype\": \"image/gif\",\n      \"mode\": \"hosted\",\n      \"name\": \"billair.gif\",\n      \"original_h\": 226,\n      \"original_w\": 176,\n      \"permalink\": \"https://.../billair.gif\",\n      \"permalink_public\": \"https://.../...\",\n      \"pjpeg\": \"https://.../billair_pjpeg.jpg\",\n      \"pretty_type\": \"GIF\",\n      \"public_url_shared\": false,\n      \"size\": 144538,\n      \"thumb_160\": \"https://.../billair_=_160.png\",\n      \"thumb_360\": \"https://.../billair_360.png\",\n      \"thumb_360_gif\": \"https://.../billair_360.gif\",\n      \"thumb_360_h\": 226,\n      \"thumb_360_w\": 176,\n      \"thumb_64\": \"https://.../billair_64.png\",\n      \"thumb_80\": \"https://.../billair_80.png\",\n      \"timestamp\": 1531763254,\n      \"title\": \"billair.gif\",\n      \"url_private\": \"https://.../billair.gif\",\n      \"url_private_download\": \"https://.../billair.gif\",\n      \"user\": \"U061F7AUR\",\n      \"username\": \"\"\n    },\n    {\n      \"channels\": [\n        \"C0T8SE4AU\"\n      ],\n      \"comments_count\": 0,\n      \"created\": 1531763342,\n      \"deanimate_gif\": \"https://.../tedair_deanimate_gif.png\",\n      \"display_as_bot\": false,\n      \"editable\": false,\n      \"external_type\": \"\",\n      \"filetype\": \"gif\",\n      \"groups\": [],\n      \"id\": \"F0S43PZDF\",\n      \"image_exif_rotation\": 1,\n      \"ims\": [],\n      \"is_external\": false,\n      \"is_public\": true,\n      \"mimetype\": \"image/gif\",\n      \"mode\": \"hosted\",\n      \"name\": \"tedair.gif\",\n      \"original_h\": 226,\n      \"original_w\": 176,\n      \"permalink\": \"https://.../tedair.gif\",\n      \"permalink_public\": \"https://.../...\",\n      \"pjpeg\": \"https://.../tedair_pjpeg.jpg\",\n      \"pretty_type\": \"GIF\",\n      \"public_url_shared\": false,\n      \"size\": 137531,\n      \"thumb_160\": \"https://.../tedair_=_160.png\",\n      \"thumb_360\": \"https://.../tedair_360.png\",\n      \"thumb_360_gif\": \"https://.../tedair_360.gif\",\n      \"thumb_360_h\": 226,\n      \"thumb_360_w\": 176,\n      \"thumb_64\": \"https://.../tedair_64.png\",\n      \"thumb_80\": \"https://.../tedair_80.png\",\n      \"timestamp\": 1531763342,\n      \"title\": \"tedair.gif\",\n      \"url_private\": \"https://.../tedair.gif\",\n      \"url_private_download\": \"https://.../tedair.gif\",\n      \"user\": \"U061F7AUR\",\n      \"username\": \"\"\n    }\n  ],\n  \"ok\": true,\n  \"paging\": {\n    \"count\": 100,\n    \"page\": 1,\n    \"pages\": 1,\n    \"total\": 2\n  }\n}"
				},
				{
					"id": "307c6db8-3197-4eef-9700-42b6808f839f",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/files.list?token=amet&user=amet&channel=amet&ts_from=53722643.01050994&ts_to=53722643.01050994&types=amet&count=amet&page=amet&show_files_hidden_by_limit=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.list"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "user",
									"value": "amet"
								},
								{
									"key": "channel",
									"value": "amet"
								},
								{
									"key": "ts_from",
									"value": "53722643.01050994"
								},
								{
									"key": "ts_to",
									"value": "53722643.01050994"
								},
								{
									"key": "types",
									"value": "amet"
								},
								{
									"key": "count",
									"value": "amet"
								},
								{
									"key": "page",
									"value": "amet"
								},
								{
									"key": "show_files_hidden_by_limit",
									"value": "true"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "files remote add",
			"id": "9c8eff0f-f72c-4bff-ae08-f696f96c4f46",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "token",
							"value": "ut qui deserunt",
							"description": "Authentication token. Requires scope: `remote_files:write`"
						},
						{
							"key": "external_id",
							"value": "amet dolore dolore occaecat",
							"description": "Creator defined GUID for the file."
						},
						{
							"key": "title",
							"value": "",
							"description": "Title of the file being shared."
						},
						{
							"key": "filetype",
							"value": "esse veniam",
							"description": "type of file"
						},
						{
							"key": "external_url",
							"value": "veniam ut enim sit",
							"description": "URL of the remote file."
						},
						{
							"key": "preview_image",
							"value": "sit",
							"description": "Preview of the document via `multipart/form-data`."
						},
						{
							"key": "indexable_file_contents",
							"value": "cupidatat ea magna in",
							"description": "A text file (txt, pdf, doc, etc.) containing textual search terms that are used to improve discovery of the remote file."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/files.remote.add",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"files.remote.add"
					]
				},
				"description": "Adds a file from a remote service"
			},
			"response": [
				{
					"id": "821472de-a2a5-40d8-b4f6-6eea00211b0b",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Authentication token. Requires scope: `remote_files:write`",
									"key": "token",
									"value": "ut qui deserunt"
								},
								{
									"description": "Creator defined GUID for the file.",
									"key": "external_id",
									"value": "amet dolore dolore occaecat"
								},
								{
									"description": "Title of the file being shared.",
									"key": "title",
									"value": ""
								},
								{
									"description": "type of file",
									"key": "filetype",
									"value": "esse veniam"
								},
								{
									"description": "URL of the remote file.",
									"key": "external_url",
									"value": "veniam ut enim sit"
								},
								{
									"description": "Preview of the document via `multipart/form-data`.",
									"key": "preview_image",
									"value": "sit"
								},
								{
									"description": "A text file (txt, pdf, doc, etc.) containing textual search terms that are used to improve discovery of the remote file.",
									"key": "indexable_file_contents",
									"value": "cupidatat ea magna in"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/files.remote.add",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.remote.add"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "72c2214a-bd06-4089-a99e-b93fb070bdb7",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Authentication token. Requires scope: `remote_files:write`",
									"key": "token",
									"value": "ut qui deserunt"
								},
								{
									"description": "Creator defined GUID for the file.",
									"key": "external_id",
									"value": "amet dolore dolore occaecat"
								},
								{
									"description": "Title of the file being shared.",
									"key": "title",
									"value": ""
								},
								{
									"description": "type of file",
									"key": "filetype",
									"value": "esse veniam"
								},
								{
									"description": "URL of the remote file.",
									"key": "external_url",
									"value": "veniam ut enim sit"
								},
								{
									"description": "Preview of the document via `multipart/form-data`.",
									"key": "preview_image",
									"value": "sit"
								},
								{
									"description": "A text file (txt, pdf, doc, etc.) containing textual search terms that are used to improve discovery of the remote file.",
									"key": "indexable_file_contents",
									"value": "cupidatat ea magna in"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/files.remote.add",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.remote.add"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "files remote info",
			"id": "f139f91d-8751-486d-8caf-a66dbb1ad4e1",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/files.remote.info?token=amet&file=amet&external_id=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"files.remote.info"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "Authentication token. Requires scope: `remote_files:read`"
						},
						{
							"key": "file",
							"value": "amet",
							"description": "Specify a file by providing its ID."
						},
						{
							"key": "external_id",
							"value": "amet",
							"description": "Creator defined GUID for the file."
						}
					]
				},
				"description": "Retrieve information about a remote file added to Slack"
			},
			"response": [
				{
					"id": "e60345f1-5ed7-4d30-b09c-4ab8dab0a2fb",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/files.remote.info?token=amet&file=amet&external_id=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.remote.info"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "file",
									"value": "amet"
								},
								{
									"key": "external_id",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "71aa483c-65f5-460c-8cfc-9d0765069c2a",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/files.remote.info?token=amet&file=amet&external_id=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.remote.info"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "file",
									"value": "amet"
								},
								{
									"key": "external_id",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "files remote list",
			"id": "fa6481f2-97ef-4e35-9c09-5d3271c1c208",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/files.remote.list?token=amet&channel=amet&ts_from=53722643.01050994&ts_to=53722643.01050994&limit=-60142516&cursor=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"files.remote.list"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "Authentication token. Requires scope: `remote_files:read`"
						},
						{
							"key": "channel",
							"value": "amet",
							"description": "Filter files appearing in a specific channel, indicated by its ID."
						},
						{
							"key": "ts_from",
							"value": "53722643.01050994",
							"description": "Filter files created after this timestamp (inclusive)."
						},
						{
							"key": "ts_to",
							"value": "53722643.01050994",
							"description": "Filter files created before this timestamp (inclusive)."
						},
						{
							"key": "limit",
							"value": "-60142516",
							"description": "The maximum number of items to return."
						},
						{
							"key": "cursor",
							"value": "amet",
							"description": "Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more detail."
						}
					]
				},
				"description": "Retrieve information about a remote file added to Slack"
			},
			"response": [
				{
					"id": "9f1a1c98-6f7d-4d69-a224-22b705e6d341",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/files.remote.list?token=amet&channel=amet&ts_from=53722643.01050994&ts_to=53722643.01050994&limit=-60142516&cursor=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.remote.list"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "channel",
									"value": "amet"
								},
								{
									"key": "ts_from",
									"value": "53722643.01050994"
								},
								{
									"key": "ts_to",
									"value": "53722643.01050994"
								},
								{
									"key": "limit",
									"value": "-60142516"
								},
								{
									"key": "cursor",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "5ada2099-35fe-4627-968d-e25a2894fd71",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/files.remote.list?token=amet&channel=amet&ts_from=53722643.01050994&ts_to=53722643.01050994&limit=-60142516&cursor=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.remote.list"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "channel",
									"value": "amet"
								},
								{
									"key": "ts_from",
									"value": "53722643.01050994"
								},
								{
									"key": "ts_to",
									"value": "53722643.01050994"
								},
								{
									"key": "limit",
									"value": "-60142516"
								},
								{
									"key": "cursor",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "files remote remove",
			"id": "00a16e33-183c-44fa-ae97-4640c517a4eb",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "token",
							"value": "nostrud",
							"description": "Authentication token. Requires scope: `remote_files:write`"
						},
						{
							"key": "file",
							"value": "aliquip non",
							"description": "Specify a file by providing its ID."
						},
						{
							"key": "external_id",
							"value": "incididunt sed ullamco",
							"description": "Creator defined GUID for the file."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/files.remote.remove",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"files.remote.remove"
					]
				},
				"description": "Remove a remote file."
			},
			"response": [
				{
					"id": "415e7952-fdfb-43ea-b815-64bb200c170d",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Authentication token. Requires scope: `remote_files:write`",
									"key": "token",
									"value": "nostrud"
								},
								{
									"description": "Specify a file by providing its ID.",
									"key": "file",
									"value": "aliquip non"
								},
								{
									"description": "Creator defined GUID for the file.",
									"key": "external_id",
									"value": "incididunt sed ullamco"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/files.remote.remove",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.remote.remove"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "762d03db-7c38-4362-8830-975415180509",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Authentication token. Requires scope: `remote_files:write`",
									"key": "token",
									"value": "nostrud"
								},
								{
									"description": "Specify a file by providing its ID.",
									"key": "file",
									"value": "aliquip non"
								},
								{
									"description": "Creator defined GUID for the file.",
									"key": "external_id",
									"value": "incididunt sed ullamco"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/files.remote.remove",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.remote.remove"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "files remote share",
			"id": "a9b38668-0096-4202-9a8f-d05166f5243b",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/files.remote.share?token=amet&file=amet&external_id=amet&channels=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"files.remote.share"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "Authentication token. Requires scope: `remote_files:share`"
						},
						{
							"key": "file",
							"value": "amet",
							"description": "Specify a file registered with Slack by providing its ID. Either this field or `external_id` or both are required."
						},
						{
							"key": "external_id",
							"value": "amet",
							"description": "The globally unique identifier (GUID) for the file, as set by the app registering the file with Slack.  Either this field or `file` or both are required."
						},
						{
							"key": "channels",
							"value": "amet",
							"description": "Comma-separated list of channel IDs where the file will be shared."
						}
					]
				},
				"description": "Share a remote file into a channel."
			},
			"response": [
				{
					"id": "76dbf75b-f45a-4acc-8e1a-842985b598a2",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/files.remote.share?token=amet&file=amet&external_id=amet&channels=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.remote.share"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "file",
									"value": "amet"
								},
								{
									"key": "external_id",
									"value": "amet"
								},
								{
									"key": "channels",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "08aa3f18-0260-43bd-9934-bfdac7c8622c",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/files.remote.share?token=amet&file=amet&external_id=amet&channels=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.remote.share"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "file",
									"value": "amet"
								},
								{
									"key": "external_id",
									"value": "amet"
								},
								{
									"key": "channels",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "files remote update",
			"id": "6816bbd8-7542-43bf-8b4c-db18ac59b36c",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "token",
							"value": "mollit",
							"description": "Authentication token. Requires scope: `remote_files:write`"
						},
						{
							"key": "file",
							"value": "sed culpa officia",
							"description": "Specify a file by providing its ID."
						},
						{
							"key": "external_id",
							"value": "veniam qui sit",
							"description": "Creator defined GUID for the file."
						},
						{
							"key": "title",
							"value": "nostrud mollit",
							"description": "Title of the file being shared."
						},
						{
							"key": "filetype",
							"value": "dolor id",
							"description": "type of file"
						},
						{
							"key": "external_url",
							"value": "proident aliquip sed Ut",
							"description": "URL of the remote file."
						},
						{
							"key": "preview_image",
							"value": "sed nisi sunt Ut",
							"description": "Preview of the document via `multipart/form-data`."
						},
						{
							"key": "indexable_file_contents",
							"value": "exercitation irure",
							"description": "File containing contents that can be used to improve searchability for the remote file."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/files.remote.update",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"files.remote.update"
					]
				},
				"description": "Updates an existing remote file."
			},
			"response": [
				{
					"id": "2452ccc6-4d0b-4575-be19-5a1c59577655",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Authentication token. Requires scope: `remote_files:write`",
									"key": "token",
									"value": "mollit"
								},
								{
									"description": "Specify a file by providing its ID.",
									"key": "file",
									"value": "sed culpa officia"
								},
								{
									"description": "Creator defined GUID for the file.",
									"key": "external_id",
									"value": "veniam qui sit"
								},
								{
									"description": "Title of the file being shared.",
									"key": "title",
									"value": "nostrud mollit"
								},
								{
									"description": "type of file",
									"key": "filetype",
									"value": "dolor id"
								},
								{
									"description": "URL of the remote file.",
									"key": "external_url",
									"value": "proident aliquip sed Ut"
								},
								{
									"description": "Preview of the document via `multipart/form-data`.",
									"key": "preview_image",
									"value": "sed nisi sunt Ut"
								},
								{
									"description": "File containing contents that can be used to improve searchability for the remote file.",
									"key": "indexable_file_contents",
									"value": "exercitation irure"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/files.remote.update",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.remote.update"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "b86ac84d-aea7-4898-a1af-fd1d49b3ac0b",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Authentication token. Requires scope: `remote_files:write`",
									"key": "token",
									"value": "mollit"
								},
								{
									"description": "Specify a file by providing its ID.",
									"key": "file",
									"value": "sed culpa officia"
								},
								{
									"description": "Creator defined GUID for the file.",
									"key": "external_id",
									"value": "veniam qui sit"
								},
								{
									"description": "Title of the file being shared.",
									"key": "title",
									"value": "nostrud mollit"
								},
								{
									"description": "type of file",
									"key": "filetype",
									"value": "dolor id"
								},
								{
									"description": "URL of the remote file.",
									"key": "external_url",
									"value": "proident aliquip sed Ut"
								},
								{
									"description": "Preview of the document via `multipart/form-data`.",
									"key": "preview_image",
									"value": "sed nisi sunt Ut"
								},
								{
									"description": "File containing contents that can be used to improve searchability for the remote file.",
									"key": "indexable_file_contents",
									"value": "exercitation irure"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/files.remote.update",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.remote.update"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "files revoke Public URL",
			"id": "f7da09c7-b6ba-4ef9-aae3-63b6dbe1fc7c",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `files:write:user`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "file",
							"value": "anim officia sint culpa nisi",
							"description": "File to revoke"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/files.revokePublicURL",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"files.revokePublicURL"
					]
				},
				"description": "Revokes public/external sharing access for a file"
			},
			"response": [
				{
					"id": "898b2f61-9e37-46ae-999e-00904cebae6b",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `files:write:user`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "File to revoke",
									"key": "file",
									"value": "anim officia sint culpa nisi"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/files.revokePublicURL",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.revokePublicURL"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "cf1a06d0-3214-4bdb-af28-f0dabe0ac712",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `files:write:user`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "File to revoke",
									"key": "file",
									"value": "anim officia sint culpa nisi"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/files.revokePublicURL",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.revokePublicURL"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "files shared Public URL",
			"id": "d41d0f60-375e-42a0-ad2b-4e8aef3ca6d7",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `files:write:user`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "file",
							"value": "eiusmod sint sit labor",
							"description": "File to share"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/files.sharedPublicURL",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"files.sharedPublicURL"
					]
				},
				"description": "Enables a file for public/external sharing."
			},
			"response": [
				{
					"id": "5434cd41-db73-4aef-8176-d4dd240c60c0",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `files:write:user`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "File to share",
									"key": "file",
									"value": "eiusmod sint sit labor"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/files.sharedPublicURL",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.sharedPublicURL"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "1d02e1d3-8347-43ca-a4c7-d715d47c8af0",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `files:write:user`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "File to share",
									"key": "file",
									"value": "eiusmod sint sit labor"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/files.sharedPublicURL",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.sharedPublicURL"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "files upload",
			"id": "73e73161-da87-4b1c-9283-0485cd541e54",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "token",
							"value": "est elit Excep",
							"description": "Authentication token. Requires scope: `files:write:user`"
						},
						{
							"key": "file",
							"value": "in enim esse",
							"description": "File contents via `multipart/form-data`. If omitting this parameter, you must submit `content`."
						},
						{
							"key": "content",
							"value": "non esse magna consectetur",
							"description": "File contents via a POST variable. If omitting this parameter, you must provide a `file`."
						},
						{
							"key": "filetype",
							"value": "nostrud esse",
							"description": "A [file type](/types/file#file_types) identifier."
						},
						{
							"key": "filename",
							"value": "tempor proident voluptate ipsum",
							"description": "Filename of file."
						},
						{
							"key": "title",
							"value": "mollit consectetur reprehenderit incidi",
							"description": "Title of file."
						},
						{
							"key": "initial_comment",
							"value": "labore et enim magna",
							"description": "The message text introducing the file in specified `channels`."
						},
						{
							"key": "channels",
							"value": "qui in",
							"description": "Comma-separated list of channel names or IDs where the file will be shared."
						},
						{
							"key": "thread_ts",
							"value": "91465137.93779486",
							"description": "Provide another message's `ts` value to upload this file as a reply. Never use a reply's `ts` value; use its parent instead."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/files.upload",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"files.upload"
					]
				},
				"description": "Uploads or creates a file."
			},
			"response": [
				{
					"id": "850ae6c2-adfd-4bed-adf6-29c35a7de380",
					"name": "Success response after uploading a file to a channel with an initial message",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Authentication token. Requires scope: `files:write:user`",
									"key": "token",
									"value": "est elit Excep"
								},
								{
									"description": "File contents via `multipart/form-data`. If omitting this parameter, you must submit `content`.",
									"key": "file",
									"value": "in enim esse"
								},
								{
									"description": "File contents via a POST variable. If omitting this parameter, you must provide a `file`.",
									"key": "content",
									"value": "non esse magna consectetur"
								},
								{
									"description": "A [file type](/types/file#file_types) identifier.",
									"key": "filetype",
									"value": "nostrud esse"
								},
								{
									"description": "Filename of file.",
									"key": "filename",
									"value": "tempor proident voluptate ipsum"
								},
								{
									"description": "Title of file.",
									"key": "title",
									"value": "mollit consectetur reprehenderit incidi"
								},
								{
									"description": "The message text introducing the file in specified `channels`.",
									"key": "initial_comment",
									"value": "labore et enim magna"
								},
								{
									"description": "Comma-separated list of channel names or IDs where the file will be shared.",
									"key": "channels",
									"value": "qui in"
								},
								{
									"description": "Provide another message's `ts` value to upload this file as a reply. Never use a reply's `ts` value; use its parent instead.",
									"key": "thread_ts",
									"value": "91465137.93779486"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/files.upload",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.upload"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"file\": {\n    \"channels\": [],\n    \"comments_count\": 0,\n    \"created\": 1532293501,\n    \"display_as_bot\": false,\n    \"editable\": false,\n    \"external_type\": \"\",\n    \"filetype\": \"gif\",\n    \"groups\": [],\n    \"has_rich_preview\": false,\n    \"id\": \"F0TD00400\",\n    \"image_exif_rotation\": 1,\n    \"ims\": [\n      \"D0L4B9P0Q\"\n    ],\n    \"is_external\": false,\n    \"is_public\": false,\n    \"is_starred\": false,\n    \"mimetype\": \"image/jpeg\",\n    \"mode\": \"hosted\",\n    \"name\": \"dramacat.gif\",\n    \"original_h\": 366,\n    \"original_w\": 526,\n    \"permalink\": \"https://.../dramacat.gif\",\n    \"permalink_public\": \"https://.../More-Path-Components\",\n    \"pretty_type\": \"JPEG\",\n    \"public_url_shared\": false,\n    \"shares\": {\n      \"private\": {\n        \"D0L4B9P0Q\": [\n          {\n            \"reply_count\": 0,\n            \"reply_users\": [],\n            \"reply_users_count\": 0,\n            \"ts\": \"1532293503.000001\"\n          }\n        ]\n      }\n    },\n    \"size\": 43518,\n    \"thumb_160\": \"https://.../dramacat_160.gif\",\n    \"thumb_360\": \"https://.../dramacat_360.gif\",\n    \"thumb_360_h\": 250,\n    \"thumb_360_w\": 360,\n    \"thumb_480\": \"https://.../dramacat_480.gif\",\n    \"thumb_480_h\": 334,\n    \"thumb_480_w\": 480,\n    \"thumb_64\": \"https://.../dramacat_64.gif\",\n    \"thumb_80\": \"https://.../dramacat_80.gif\",\n    \"timestamp\": 1532293501,\n    \"title\": \"dramacat\",\n    \"url_private\": \"https://.../dramacat.gif\",\n    \"url_private_download\": \"https://.../dramacat.gif\",\n    \"user\": \"U0L4B9NSU\",\n    \"username\": \"\"\n  },\n  \"ok\": true\n}"
				},
				{
					"id": "ef047f49-207e-4d3b-aee4-2836d731b1a7",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Authentication token. Requires scope: `files:write:user`",
									"key": "token",
									"value": "est elit Excep"
								},
								{
									"description": "File contents via `multipart/form-data`. If omitting this parameter, you must submit `content`.",
									"key": "file",
									"value": "in enim esse"
								},
								{
									"description": "File contents via a POST variable. If omitting this parameter, you must provide a `file`.",
									"key": "content",
									"value": "non esse magna consectetur"
								},
								{
									"description": "A [file type](/types/file#file_types) identifier.",
									"key": "filetype",
									"value": "nostrud esse"
								},
								{
									"description": "Filename of file.",
									"key": "filename",
									"value": "tempor proident voluptate ipsum"
								},
								{
									"description": "Title of file.",
									"key": "title",
									"value": "mollit consectetur reprehenderit incidi"
								},
								{
									"description": "The message text introducing the file in specified `channels`.",
									"key": "initial_comment",
									"value": "labore et enim magna"
								},
								{
									"description": "Comma-separated list of channel names or IDs where the file will be shared.",
									"key": "channels",
									"value": "qui in"
								},
								{
									"description": "Provide another message's `ts` value to upload this file as a reply. Never use a reply's `ts` value; use its parent instead.",
									"key": "thread_ts",
									"value": "91465137.93779486"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/files.upload",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"files.upload"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "migration exchange",
			"id": "23ce80db-f09a-4de9-bc64-24725c853560",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/migration.exchange?token=amet&users=amet&team_id=amet&to_old=true",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"migration.exchange"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "(Required) Authentication token. Requires scope: `tokens.basic`"
						},
						{
							"key": "users",
							"value": "amet",
							"description": "(Required) A comma-separated list of user ids, up to 400 per request"
						},
						{
							"key": "team_id",
							"value": "amet",
							"description": "Specify team_id starts with `T` in case of Org Token"
						},
						{
							"key": "to_old",
							"value": "true",
							"description": "Specify `true` to convert `W` global user IDs to workspace-specific `U` IDs. Defaults to `false`."
						}
					]
				},
				"description": "For Enterprise Grid workspaces, map local user IDs to global user IDs"
			},
			"response": [
				{
					"id": "a50d2e43-750d-4e8d-8e4f-90b9dac1d275",
					"name": "Typical success response when mappings exist for the specified user IDs",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/migration.exchange?token=amet&users=amet&team_id=amet&to_old=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"migration.exchange"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "users",
									"value": "amet"
								},
								{
									"key": "team_id",
									"value": "amet"
								},
								{
									"key": "to_old",
									"value": "true"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"enterprise_id\": \"E1KQTNXE1\",\n  \"invalid_user_ids\": [\n    \"U21ABZZXX\"\n  ],\n  \"ok\": true,\n  \"team_id\": \"T1KR7PE1W\",\n  \"user_id_map\": {\n    \"U06UBSUN5\": \"W06M56XJM\",\n    \"U06UBSVB3\": \"W06PUUDLY\",\n    \"U06UBSVDX\": \"W06PUUDMW\",\n    \"U06UEB62U\": \"W06PTT6GH\",\n    \"W06UAZ65Q\": \"W06UAZ65Q\"\n  }\n}"
				},
				{
					"id": "1233436f-68ad-4a72-9d90-51150d1936b4",
					"name": "Typical error response when there are no mappings to provide",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/migration.exchange?token=amet&users=amet&team_id=amet&to_old=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"migration.exchange"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "users",
									"value": "amet"
								},
								{
									"key": "team_id",
									"value": "amet"
								},
								{
									"key": "to_old",
									"value": "true"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"not_enterprise_team\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "oauth access",
			"id": "903ad8a0-e006-4313-9eb2-1acbafe97ffc",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/oauth.access?client_id=amet&client_secret=amet&code=amet&redirect_uri=amet&single_channel=true",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"oauth.access"
					],
					"query": [
						{
							"key": "client_id",
							"value": "amet",
							"description": "Issued when you created your application."
						},
						{
							"key": "client_secret",
							"value": "amet",
							"description": "Issued when you created your application."
						},
						{
							"key": "code",
							"value": "amet",
							"description": "The `code` param returned via the OAuth callback."
						},
						{
							"key": "redirect_uri",
							"value": "amet",
							"description": "This must match the originally submitted URI (if one was sent)."
						},
						{
							"key": "single_channel",
							"value": "true",
							"description": "Request the user to add your app only to a single channel. Only valid with a [legacy workspace app](https://api.slack.com/legacy-workspace-apps)."
						}
					]
				},
				"description": "Exchanges a temporary OAuth verifier code for an access token."
			},
			"response": [
				{
					"id": "c16c9d9d-eafe-4a8e-b10b-eb629169b692",
					"name": "Successful user token negotiation for a single scope",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/oauth.access?client_id=amet&client_secret=amet&code=amet&redirect_uri=amet&single_channel=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth.access"
							],
							"query": [
								{
									"key": "client_id",
									"value": "amet"
								},
								{
									"key": "client_secret",
									"value": "amet"
								},
								{
									"key": "code",
									"value": "amet"
								},
								{
									"key": "redirect_uri",
									"value": "amet"
								},
								{
									"key": "single_channel",
									"value": "true"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"access_token\": \"xoxp-XXXXXXXX-XXXXXXXX-XXXXX\",\n  \"enterprise_id\": null,\n  \"scope\": \"groups:write\",\n  \"team_id\": \"TXXXXXXXXX\",\n  \"team_name\": \"Wyld Stallyns LLC\"\n}"
				},
				{
					"id": "3ea43d78-828f-446e-89ca-0f5d204903cc",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/oauth.access?client_id=amet&client_secret=amet&code=amet&redirect_uri=amet&single_channel=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth.access"
							],
							"query": [
								{
									"key": "client_id",
									"value": "amet"
								},
								{
									"key": "client_secret",
									"value": "amet"
								},
								{
									"key": "code",
									"value": "amet"
								},
								{
									"key": "redirect_uri",
									"value": "amet"
								},
								{
									"key": "single_channel",
									"value": "true"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_client_id\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "oauth token",
			"id": "0fcaf3f2-4829-4961-aaf9-8db6e05e6432",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/oauth.token?client_id=amet&client_secret=amet&code=amet&redirect_uri=amet&single_channel=true",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"oauth.token"
					],
					"query": [
						{
							"key": "client_id",
							"value": "amet",
							"description": "Issued when you created your application."
						},
						{
							"key": "client_secret",
							"value": "amet",
							"description": "Issued when you created your application."
						},
						{
							"key": "code",
							"value": "amet",
							"description": "The `code` param returned via the OAuth callback."
						},
						{
							"key": "redirect_uri",
							"value": "amet",
							"description": "This must match the originally submitted URI (if one was sent)."
						},
						{
							"key": "single_channel",
							"value": "true",
							"description": "Request the user to add your app only to a single channel."
						}
					]
				},
				"description": "Exchanges a temporary OAuth verifier code for a workspace token."
			},
			"response": [
				{
					"id": "46ea6187-9e89-4b0e-8e1e-36e41680a1f3",
					"name": "Success example using a workspace app produces a very different kind of response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/oauth.token?client_id=amet&client_secret=amet&code=amet&redirect_uri=amet&single_channel=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth.token"
							],
							"query": [
								{
									"key": "client_id",
									"value": "amet"
								},
								{
									"key": "client_secret",
									"value": "amet"
								},
								{
									"key": "code",
									"value": "amet"
								},
								{
									"key": "redirect_uri",
									"value": "amet"
								},
								{
									"key": "single_channel",
									"value": "true"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"access_token\": \"xoxa-access-token-string\",\n  \"app_id\": \"A012345678\",\n  \"app_user_id\": \"U0AB12ABC\",\n  \"authorizing_user_id\": \"U0HTT3Q0G\",\n  \"installer_user_id\": \"U061F7AUR\",\n  \"ok\": true,\n  \"permissions\": [\n    {\n      \"resource_id\": 0,\n      \"resource_type\": \"channel\",\n      \"scopes\": [\n        \"channels:read\",\n        \"chat:write:user\"\n      ]\n    }\n  ],\n  \"single_channel_id\": \"C061EG9T2\",\n  \"team_id\": \"T061EG9Z9\",\n  \"team_name\": \"Subarachnoid Workspace\",\n  \"token_type\": \"app\"\n}"
				},
				{
					"id": "c937dc6f-38aa-4c56-9691-c2e7915f1672",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/oauth.token?client_id=amet&client_secret=amet&code=amet&redirect_uri=amet&single_channel=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth.token"
							],
							"query": [
								{
									"key": "client_id",
									"value": "amet"
								},
								{
									"key": "client_secret",
									"value": "amet"
								},
								{
									"key": "code",
									"value": "amet"
								},
								{
									"key": "redirect_uri",
									"value": "amet"
								},
								{
									"key": "single_channel",
									"value": "true"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_client_id\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "oauth v2 access",
			"id": "37d246d9-54a1-44dd-8ab4-928371cb5b8c",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/oauth.v2.access?client_id=amet&client_secret=amet&code=amet&redirect_uri=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"oauth.v2.access"
					],
					"query": [
						{
							"key": "client_id",
							"value": "amet",
							"description": "Issued when you created your application."
						},
						{
							"key": "client_secret",
							"value": "amet",
							"description": "Issued when you created your application."
						},
						{
							"key": "code",
							"value": "amet",
							"description": "(Required) The `code` param returned via the OAuth callback."
						},
						{
							"key": "redirect_uri",
							"value": "amet",
							"description": "This must match the originally submitted URI (if one was sent)."
						}
					]
				},
				"description": "Exchanges a temporary OAuth verifier code for an access token."
			},
			"response": [
				{
					"id": "9ab74204-0b86-42dc-ad53-6fe05328a802",
					"name": "Successful token request with scopes for both a bot user and a user token",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/oauth.v2.access?client_id=amet&client_secret=amet&code=amet&redirect_uri=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth.v2.access"
							],
							"query": [
								{
									"key": "client_id",
									"value": "amet"
								},
								{
									"key": "client_secret",
									"value": "amet"
								},
								{
									"key": "code",
									"value": "amet"
								},
								{
									"key": "redirect_uri",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"access_token\": \"xoxb-17653672481-19874698323-pdFZKVeTuE8sk7oOcBrzbqgy\",\n  \"app_id\": \"A0KRD7HC3\",\n  \"authed_user\": {\n    \"access_token\": \"xoxp-1234\",\n    \"id\": \"U1234\",\n    \"scope\": \"chat:write\",\n    \"token_type\": \"user\"\n  },\n  \"bot_user_id\": \"U0KRQLJ9H\",\n  \"enterprise\": {\n    \"id\": \"E12345678\",\n    \"name\": \"slack-sports\"\n  },\n  \"ok\": true,\n  \"scope\": \"commands,incoming-webhook\",\n  \"team\": {\n    \"id\": \"T9TK3CUKW\",\n    \"name\": \"Slack Softball Team\"\n  },\n  \"token_type\": \"bot\"\n}"
				},
				{
					"id": "8811e1b6-f7e2-4e58-839c-9dbd61a37f50",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/oauth.v2.access?client_id=amet&client_secret=amet&code=amet&redirect_uri=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"oauth.v2.access"
							],
							"query": [
								{
									"key": "client_id",
									"value": "amet"
								},
								{
									"key": "client_secret",
									"value": "amet"
								},
								{
									"key": "code",
									"value": "amet"
								},
								{
									"key": "redirect_uri",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_client_id\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "pins add",
			"id": "5708a041-6a66-4d0b-8e58-f422c86b1468",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `pins:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "aliqua aute occaecat",
							"description": "(Required) Channel to pin the item in."
						},
						{
							"key": "timestamp",
							"value": "ea qui",
							"description": "Timestamp of the message to pin."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/pins.add",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pins.add"
					]
				},
				"description": "Pins an item to a channel."
			},
			"response": [
				{
					"id": "43a75607-e63c-42b1-834e-5c75daa0558f",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `pins:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Channel to pin the item in.",
									"key": "channel",
									"value": "aliqua aute occaecat"
								},
								{
									"description": "Timestamp of the message to pin.",
									"key": "timestamp",
									"value": "ea qui"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/pins.add",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pins.add"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "ed76ae44-3a78-40d6-9fcc-9bedad0368c9",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `pins:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Channel to pin the item in.",
									"key": "channel",
									"value": "aliqua aute occaecat"
								},
								{
									"description": "Timestamp of the message to pin.",
									"key": "timestamp",
									"value": "ea qui"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/pins.add",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pins.add"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"channel_not_found\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "pins list",
			"id": "1a54f8bc-6bc5-4001-a9d0-22c86e362f00",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/pins.list?token=amet&channel=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pins.list"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "(Required) Authentication token. Requires scope: `pins:read`"
						},
						{
							"key": "channel",
							"value": "amet",
							"description": "(Required) Channel to get pinned items for."
						}
					]
				},
				"description": "Lists items pinned to a channel."
			},
			"response": [
				{
					"id": "967e0efa-f215-4cdc-8191-0400cd143aba",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pins.list?token=amet&channel=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pins.list"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "channel",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"items\": [\n    {\n      \"channel\": \"C2U86NC6H\",\n      \"created\": 1508881078,\n      \"created_by\": \"U2U85N1RZ\",\n      \"message\": {\n        \"permalink\": \"https://hitchhikers.slack.com/archives/C2U86NC6H/p1508197641000151\",\n        \"pinned_to\": [\n          \"C2U86NC6H\"\n        ],\n        \"text\": \"What is the meaning of life?\",\n        \"ts\": \"1508197641.000151\",\n        \"type\": \"message\",\n        \"user\": \"U2U85N1RZ\"\n      },\n      \"type\": \"message\"\n    },\n    {\n      \"channel\": \"C2U86NC6H\",\n      \"created\": 1508880991,\n      \"created_by\": \"U2U85N1RZ\",\n      \"message\": {\n        \"permalink\": \"https://hitchhikers.slack.com/archives/C2U86NC6H/p1508284197000015\",\n        \"pinned_to\": [\n          \"C2U86NC6H\"\n        ],\n        \"text\": \"The meaning of life, the universe, and everything is 42.\",\n        \"ts\": \"1503289197.000015\",\n        \"type\": \"message\",\n        \"user\": \"U2U85N1RZ\"\n      },\n      \"type\": \"message\"\n    }\n  ],\n  \"ok\": true\n}"
				},
				{
					"id": "8f04aefd-a720-4524-8fe2-b9ac49c3b7e4",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pins.list?token=amet&channel=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pins.list"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "channel",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "pins remove",
			"id": "959273ec-6e7e-4554-ae89-c45b4abd4170",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `pins:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "ut aliquip",
							"description": "(Required) Channel where the item is pinned to."
						},
						{
							"key": "timestamp",
							"value": "aliqua ",
							"description": "Timestamp of the message to un-pin."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/pins.remove",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pins.remove"
					]
				},
				"description": "Un-pins an item from a channel."
			},
			"response": [
				{
					"id": "de75ff58-0c63-4cfe-b15e-c37b1a26430a",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `pins:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Channel where the item is pinned to.",
									"key": "channel",
									"value": "ut aliquip"
								},
								{
									"description": "Timestamp of the message to un-pin.",
									"key": "timestamp",
									"value": "aliqua "
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/pins.remove",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pins.remove"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "0dc2d5c2-1d1c-48ad-ba5d-d50d19adaad6",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `pins:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Channel where the item is pinned to.",
									"key": "channel",
									"value": "ut aliquip"
								},
								{
									"description": "Timestamp of the message to un-pin.",
									"key": "timestamp",
									"value": "aliqua "
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/pins.remove",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pins.remove"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"no_pin\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "reactions add",
			"id": "35cd1bc1-a483-4707-b354-21ecedcd51c2",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `reactions:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "fugiat voluptate ullamco occaecat in",
							"description": "(Required) Channel where the message to add reaction to was posted."
						},
						{
							"key": "name",
							"value": "labor",
							"description": "(Required) Reaction (emoji) name."
						},
						{
							"key": "timestamp",
							"value": "id do nostrud dolore",
							"description": "(Required) Timestamp of the message to add reaction to."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/reactions.add",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"reactions.add"
					]
				},
				"description": "Adds a reaction to an item."
			},
			"response": [
				{
					"id": "3b8c4589-72e8-4e4b-8d5d-3e053a809f6d",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `reactions:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Channel where the message to add reaction to was posted.",
									"key": "channel",
									"value": "fugiat voluptate ullamco occaecat in"
								},
								{
									"description": "(Required) Reaction (emoji) name.",
									"key": "name",
									"value": "labor"
								},
								{
									"description": "(Required) Timestamp of the message to add reaction to.",
									"key": "timestamp",
									"value": "id do nostrud dolore"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/reactions.add",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reactions.add"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "2e0829fb-b20b-4a23-b129-df16db5a9f58",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `reactions:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Channel where the message to add reaction to was posted.",
									"key": "channel",
									"value": "fugiat voluptate ullamco occaecat in"
								},
								{
									"description": "(Required) Reaction (emoji) name.",
									"key": "name",
									"value": "labor"
								},
								{
									"description": "(Required) Timestamp of the message to add reaction to.",
									"key": "timestamp",
									"value": "id do nostrud dolore"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/reactions.add",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reactions.add"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"already_reacted\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "reactions get",
			"id": "59638f17-597f-46ab-a790-b364751a59b2",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/reactions.get?token=amet&channel=amet&file=amet&file_comment=amet&full=true&timestamp=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"reactions.get"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "(Required) Authentication token. Requires scope: `reactions:read`"
						},
						{
							"key": "channel",
							"value": "amet",
							"description": "Channel where the message to get reactions for was posted."
						},
						{
							"key": "file",
							"value": "amet",
							"description": "File to get reactions for."
						},
						{
							"key": "file_comment",
							"value": "amet",
							"description": "File comment to get reactions for."
						},
						{
							"key": "full",
							"value": "true",
							"description": "If true always return the complete reaction list."
						},
						{
							"key": "timestamp",
							"value": "amet",
							"description": "Timestamp of the message to get reactions for."
						}
					]
				},
				"description": "Gets reactions for an item."
			},
			"response": [
				{
					"id": "defee833-0171-4c70-86db-2a570b167668",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/reactions.get?token=amet&channel=amet&file=amet&file_comment=amet&full=true&timestamp=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reactions.get"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "channel",
									"value": "amet"
								},
								{
									"key": "file",
									"value": "amet"
								},
								{
									"key": "file_comment",
									"value": "amet"
								},
								{
									"key": "full",
									"value": "true"
								},
								{
									"key": "timestamp",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"file\": {\n    \"channels\": [\n      \"C2U7V2YA2\"\n    ],\n    \"comments_count\": 1,\n    \"created\": 1507850315,\n    \"groups\": [],\n    \"id\": \"F7H0D7ZA4\",\n    \"ims\": [],\n    \"name\": \"computer.gif\",\n    \"reactions\": [\n      {\n        \"count\": 1,\n        \"name\": \"stuck_out_tongue_winking_eye\",\n        \"users\": [\n          \"U2U85N1RV\"\n        ]\n      }\n    ],\n    \"timestamp\": 1507850315,\n    \"title\": \"computer.gif\",\n    \"user\": \"U2U85N1RV\"\n  },\n  \"ok\": true,\n  \"type\": \"file\"\n}"
				},
				{
					"id": "784e5c9f-e8ab-4535-ac44-e56289ca24c3",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/reactions.get?token=amet&channel=amet&file=amet&file_comment=amet&full=true&timestamp=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reactions.get"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "channel",
									"value": "amet"
								},
								{
									"key": "file",
									"value": "amet"
								},
								{
									"key": "file_comment",
									"value": "amet"
								},
								{
									"key": "full",
									"value": "true"
								},
								{
									"key": "timestamp",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "reactions list",
			"id": "04f10041-f377-448c-b890-9f116fef198d",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/reactions.list?token=amet&user=amet&full=true&count=-60142516&page=-60142516&cursor=amet&limit=-60142516",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"reactions.list"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "(Required) Authentication token. Requires scope: `reactions:read`"
						},
						{
							"key": "user",
							"value": "amet",
							"description": "Show reactions made by this user. Defaults to the authed user."
						},
						{
							"key": "full",
							"value": "true",
							"description": "If true always return the complete reaction list."
						},
						{
							"key": "count",
							"value": "-60142516"
						},
						{
							"key": "page",
							"value": "-60142516"
						},
						{
							"key": "cursor",
							"value": "amet",
							"description": "Parameter for pagination. Set `cursor` equal to the `next_cursor` attribute returned by the previous request's `response_metadata`. This parameter is optional, but pagination is mandatory: the default value simply fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more details."
						},
						{
							"key": "limit",
							"value": "-60142516",
							"description": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the list hasn't been reached."
						}
					]
				},
				"description": "Lists reactions made by a user."
			},
			"response": [
				{
					"id": "fbabdaad-91c4-4ac9-9fe6-1df88218fb16",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/reactions.list?token=amet&user=amet&full=true&count=-60142516&page=-60142516&cursor=amet&limit=-60142516",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reactions.list"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "user",
									"value": "amet"
								},
								{
									"key": "full",
									"value": "true"
								},
								{
									"key": "count",
									"value": "-60142516"
								},
								{
									"key": "page",
									"value": "-60142516"
								},
								{
									"key": "cursor",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"items\": [\n    {\n      \"channel\": \"C3UKJTQAC\",\n      \"message\": {\n        \"bot_id\": \"B4VLRLMKJ\",\n        \"reactions\": [\n          {\n            \"count\": 1,\n            \"name\": \"robot_face\",\n            \"users\": [\n              \"U2U85N1RV\"\n            ]\n          }\n        ],\n        \"subtype\": \"bot_message\",\n        \"text\": \"Hello from Python! :tada:\",\n        \"ts\": \"1507849573.000090\",\n        \"username\": \"Shipit Notifications\"\n      },\n      \"type\": \"message\"\n    },\n    {\n      \"comment\": {\n        \"comment\": \"This is a file comment\",\n        \"created\": 1508286096,\n        \"id\": \"Fc7LP08P1U\",\n        \"reactions\": [\n          {\n            \"count\": 1,\n            \"name\": \"white_check_mark\",\n            \"users\": [\n              \"U2U85N1RV\"\n            ]\n          }\n        ],\n        \"timestamp\": 1508286096,\n        \"type\": \"file_comment\",\n        \"user\": \"U2U85N1RV\"\n      },\n      \"file\": {\n        \"channels\": [\n          \"C2U7V2YA2\"\n        ],\n        \"comments_count\": 1,\n        \"created\": 1507850315,\n        \"reactions\": [\n          {\n            \"count\": 1,\n            \"name\": \"stuck_out_tongue_winking_eye\",\n            \"users\": [\n              \"U2U85N1RV\"\n            ]\n          }\n        ],\n        \"title\": \"computer.gif\",\n        \"user\": \"U2U85N1RV\",\n        \"username\": \"\"\n      }\n    },\n    {\n      \"file\": {\n        \"channels\": [\n          \"C2U7V2YA2\"\n        ],\n        \"comments_count\": 1,\n        \"created\": 1507850315,\n        \"id\": \"F7H0D7ZA4\",\n        \"name\": \"computer.gif\",\n        \"reactions\": [\n          {\n            \"count\": 1,\n            \"name\": \"stuck_out_tongue_winking_eye\",\n            \"users\": [\n              \"U2U85N1RV\"\n            ]\n          }\n        ],\n        \"size\": 1639034,\n        \"title\": \"computer.gif\",\n        \"user\": \"U2U85N1RV\",\n        \"username\": \"\"\n      },\n      \"type\": \"file\"\n    }\n  ],\n  \"ok\": true,\n  \"response_metadata\": {\n    \"next_cursor\": \"dGVhbTpDMUg5UkVTR0w=\"\n  }\n}"
				},
				{
					"id": "07371863-7c2d-4d2a-a44c-a2fdb4c48515",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/reactions.list?token=amet&user=amet&full=true&count=-60142516&page=-60142516&cursor=amet&limit=-60142516",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reactions.list"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "user",
									"value": "amet"
								},
								{
									"key": "full",
									"value": "true"
								},
								{
									"key": "count",
									"value": "-60142516"
								},
								{
									"key": "page",
									"value": "-60142516"
								},
								{
									"key": "cursor",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "reactions remove",
			"id": "684b4d43-e4e4-4dc7-8e0a-70edd242274b",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `reactions:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "name",
							"value": "commodo eiusmod Lorem mollit",
							"description": "(Required) Reaction (emoji) name."
						},
						{
							"key": "file",
							"value": "magna ea i",
							"description": "File to remove reaction from."
						},
						{
							"key": "file_comment",
							"value": "occaecat qui",
							"description": "File comment to remove reaction from."
						},
						{
							"key": "channel",
							"value": "non dolor deserunt magna id",
							"description": "Channel where the message to remove reaction from was posted."
						},
						{
							"key": "timestamp",
							"value": "sed sint quis commodo esse",
							"description": "Timestamp of the message to remove reaction from."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/reactions.remove",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"reactions.remove"
					]
				},
				"description": "Removes a reaction from an item."
			},
			"response": [
				{
					"id": "254678af-1a12-45ae-8042-e695ceaef7b5",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `reactions:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Reaction (emoji) name.",
									"key": "name",
									"value": "commodo eiusmod Lorem mollit"
								},
								{
									"description": "File to remove reaction from.",
									"key": "file",
									"value": "magna ea i"
								},
								{
									"description": "File comment to remove reaction from.",
									"key": "file_comment",
									"value": "occaecat qui"
								},
								{
									"description": "Channel where the message to remove reaction from was posted.",
									"key": "channel",
									"value": "non dolor deserunt magna id"
								},
								{
									"description": "Timestamp of the message to remove reaction from.",
									"key": "timestamp",
									"value": "sed sint quis commodo esse"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/reactions.remove",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reactions.remove"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "523d8154-1631-4370-b6b4-ad5bf305cd39",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `reactions:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Reaction (emoji) name.",
									"key": "name",
									"value": "commodo eiusmod Lorem mollit"
								},
								{
									"description": "File to remove reaction from.",
									"key": "file",
									"value": "magna ea i"
								},
								{
									"description": "File comment to remove reaction from.",
									"key": "file_comment",
									"value": "occaecat qui"
								},
								{
									"description": "Channel where the message to remove reaction from was posted.",
									"key": "channel",
									"value": "non dolor deserunt magna id"
								},
								{
									"description": "Timestamp of the message to remove reaction from.",
									"key": "timestamp",
									"value": "sed sint quis commodo esse"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/reactions.remove",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reactions.remove"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"no_reaction\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "reminders add",
			"id": "6f8227fd-9650-4b84-b5c6-640eaf8b0b56",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `reminders:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "text",
							"value": "commodo laboris et esse",
							"description": "(Required) The content of the reminder"
						},
						{
							"key": "time",
							"value": "dolore Lorem",
							"description": "(Required) When this reminder should happen: the Unix timestamp (up to five years from now), the number of seconds until the reminder (if within 24 hours), or a natural language description (Ex. \"in 15 minutes,\" or \"every Thursday\")"
						},
						{
							"key": "user",
							"value": "ex aliquip labore in",
							"description": "The user who will receive the reminder. If no user is specified, the reminder will go to user who created it."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/reminders.add",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"reminders.add"
					]
				},
				"description": "Creates a reminder."
			},
			"response": [
				{
					"id": "b81bcbe6-ace3-4356-a490-701e1fe08cc7",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `reminders:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The content of the reminder",
									"key": "text",
									"value": "commodo laboris et esse"
								},
								{
									"description": "(Required) When this reminder should happen: the Unix timestamp (up to five years from now), the number of seconds until the reminder (if within 24 hours), or a natural language description (Ex. \"in 15 minutes,\" or \"every Thursday\")",
									"key": "time",
									"value": "dolore Lorem"
								},
								{
									"description": "The user who will receive the reminder. If no user is specified, the reminder will go to user who created it.",
									"key": "user",
									"value": "ex aliquip labore in"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/reminders.add",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reminders.add"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "7dad7bc0-4047-49a6-b951-19b143d98800",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `reminders:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The content of the reminder",
									"key": "text",
									"value": "commodo laboris et esse"
								},
								{
									"description": "(Required) When this reminder should happen: the Unix timestamp (up to five years from now), the number of seconds until the reminder (if within 24 hours), or a natural language description (Ex. \"in 15 minutes,\" or \"every Thursday\")",
									"key": "time",
									"value": "dolore Lorem"
								},
								{
									"description": "The user who will receive the reminder. If no user is specified, the reminder will go to user who created it.",
									"key": "user",
									"value": "ex aliquip labore in"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/reminders.add",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reminders.add"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "reminders complete",
			"id": "7fd1123c-e537-456f-9db9-edf305848dfe",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `reminders:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "reminder",
							"value": "occaecat laborum",
							"description": "The ID of the reminder to be marked as complete"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/reminders.complete",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"reminders.complete"
					]
				},
				"description": "Marks a reminder as complete."
			},
			"response": [
				{
					"id": "b07fd05a-d3cd-4e1f-89ed-dc369136fb51",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `reminders:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "The ID of the reminder to be marked as complete",
									"key": "reminder",
									"value": "occaecat laborum"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/reminders.complete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reminders.complete"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "251dc86e-ac5c-49cc-b45f-95435d69ac03",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `reminders:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "The ID of the reminder to be marked as complete",
									"key": "reminder",
									"value": "occaecat laborum"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/reminders.complete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reminders.complete"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "reminders delete",
			"id": "b181b4f8-8340-481e-85ea-9bda93f37155",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "Authentication token. Requires scope: `reminders:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "reminder",
							"value": "laboris id do ipsum consectetur",
							"description": "The ID of the reminder"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/reminders.delete",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"reminders.delete"
					]
				},
				"description": "Deletes a reminder."
			},
			"response": [
				{
					"id": "a386bcd2-fd1d-4dcd-9dff-fac6ae4e92b3",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `reminders:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "The ID of the reminder",
									"key": "reminder",
									"value": "laboris id do ipsum consectetur"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/reminders.delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reminders.delete"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "92fb046a-6ad0-468c-bc14-e857278e44e7",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "Authentication token. Requires scope: `reminders:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "The ID of the reminder",
									"key": "reminder",
									"value": "laboris id do ipsum consectetur"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/reminders.delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reminders.delete"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "reminders info",
			"id": "3ccee441-bff6-4982-9888-8b5fa3a0006b",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/reminders.info?token=amet&reminder=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"reminders.info"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "Authentication token. Requires scope: `reminders:read`"
						},
						{
							"key": "reminder",
							"value": "amet",
							"description": "The ID of the reminder"
						}
					]
				},
				"description": "Gets information about a reminder."
			},
			"response": [
				{
					"id": "595ebfb1-1554-4b35-8fd8-83002d262b31",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/reminders.info?token=amet&reminder=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reminders.info"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "reminder",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "f9865481-fe6b-4c87-8d63-970d1436c1bc",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/reminders.info?token=amet&reminder=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reminders.info"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "reminder",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "reminders list",
			"id": "110bcf66-2fe5-4bbb-a9e4-d4b3b48f1a18",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/reminders.list?token=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"reminders.list"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "Authentication token. Requires scope: `reminders:read`"
						}
					]
				},
				"description": "Lists all reminders created by or for a given user."
			},
			"response": [
				{
					"id": "6afecd07-3679-407e-9eaa-fde021f6f2ab",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/reminders.list?token=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reminders.list"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "daa44268-fd26-45ca-8654-eaa3186ce275",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/reminders.list?token=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reminders.list"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "rtm connect",
			"id": "d577c8f7-ed72-45d9-a525-f36a28ccb361",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/rtm.connect?token=amet&batch_presence_aware=true&presence_sub=true",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"rtm.connect"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "(Required) Authentication token. Requires scope: `rtm:stream`"
						},
						{
							"key": "batch_presence_aware",
							"value": "true",
							"description": "Batch presence deliveries via subscription. Enabling changes the shape of `presence_change` events. See [batch presence](/docs/presence-and-status#batching)."
						},
						{
							"key": "presence_sub",
							"value": "true",
							"description": "Only deliver presence events when requested by subscription. See [presence subscriptions](/docs/presence-and-status#subscriptions)."
						}
					]
				},
				"description": "Starts a Real Time Messaging session."
			},
			"response": [
				{
					"id": "1c474279-6b03-429e-b72e-e7b95ccbfa3c",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/rtm.connect?token=amet&batch_presence_aware=true&presence_sub=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rtm.connect"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "batch_presence_aware",
									"value": "true"
								},
								{
									"key": "presence_sub",
									"value": "true"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"self\": {\n    \"id\": \"U4X318ZMZ\",\n    \"name\": \"robotoverlord\"\n  },\n  \"team\": {\n    \"domain\": \"slackdemo\",\n    \"id\": \"T2U81E2FP\",\n    \"name\": \"SlackDemo\"\n  },\n  \"url\": \"wss://...\"\n}"
				},
				{
					"id": "e70b3eb3-57b6-4f13-b4e5-fc636c457629",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/rtm.connect?token=amet&batch_presence_aware=true&presence_sub=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rtm.connect"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "batch_presence_aware",
									"value": "true"
								},
								{
									"key": "presence_sub",
									"value": "true"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "search messages",
			"id": "82fe71e7-e9a2-44c4-96a6-e322e8ae59f4",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/search.messages?token=amet&count=-60142516&highlight=true&page=-60142516&query=amet&sort=amet&sort_dir=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"search.messages"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "(Required) Authentication token. Requires scope: `search:read`"
						},
						{
							"key": "count",
							"value": "-60142516",
							"description": "Pass the number of results you want per \"page\". Maximum of `100`."
						},
						{
							"key": "highlight",
							"value": "true",
							"description": "Pass a value of `true` to enable query highlight markers (see below)."
						},
						{
							"key": "page",
							"value": "-60142516"
						},
						{
							"key": "query",
							"value": "amet",
							"description": "(Required) Search query."
						},
						{
							"key": "sort",
							"value": "amet",
							"description": "Return matches sorted by either `score` or `timestamp`."
						},
						{
							"key": "sort_dir",
							"value": "amet",
							"description": "Change sort direction to ascending (`asc`) or descending (`desc`)."
						}
					]
				},
				"description": "Searches for messages matching a query."
			},
			"response": [
				{
					"id": "34ecabe2-0ed4-490a-97bb-65d6c0663ffb",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/search.messages?token=amet&count=-60142516&highlight=true&page=-60142516&query=amet&sort=amet&sort_dir=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"search.messages"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "count",
									"value": "-60142516"
								},
								{
									"key": "highlight",
									"value": "true"
								},
								{
									"key": "page",
									"value": "-60142516"
								},
								{
									"key": "query",
									"value": "amet"
								},
								{
									"key": "sort",
									"value": "amet"
								},
								{
									"key": "sort_dir",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"messages\": {\n    \"matches\": [\n      {\n        \"channel\": {\n          \"id\": \"C12345678\",\n          \"is_ext_shared\": false,\n          \"is_mpim\": false,\n          \"is_org_shared\": false,\n          \"is_pending_ext_shared\": false,\n          \"is_private\": false,\n          \"is_shared\": false,\n          \"name\": \"general\",\n          \"pending_shared\": []\n        },\n        \"iid\": \"cb64bdaa-c1e8-4631-8a91-0f78080113e9\",\n        \"permalink\": \"https://hitchhikers.slack.com/archives/C12345678/p1508284197000015\",\n        \"team\": \"T12345678\",\n        \"text\": \"The meaning of life the universe and everything is 42.\",\n        \"ts\": \"1508284197.000015\",\n        \"type\": \"message\",\n        \"user\": \"U2U85N1RV\",\n        \"username\": \"roach\"\n      },\n      {\n        \"channel\": {\n          \"id\": \"C12345678\",\n          \"is_ext_shared\": false,\n          \"is_mpim\": false,\n          \"is_org_shared\": false,\n          \"is_pending_ext_shared\": false,\n          \"is_private\": false,\n          \"is_shared\": false,\n          \"name\": \"random\",\n          \"pending_shared\": []\n        },\n        \"iid\": \"9a00d3c9-bd2d-45b0-988b-6cff99ae2a90\",\n        \"permalink\": \"https://hitchhikers.slack.com/archives/C12345678/p1508795665000236\",\n        \"team\": \"T12345678\",\n        \"text\": \"The meaning of life the universe and everything is 101010\",\n        \"ts\": \"1508795665.000236\",\n        \"type\": \"message\",\n        \"user\": \"\",\n        \"username\": \"robot overlord\"\n      }\n    ],\n    \"pagination\": {\n      \"first\": 1,\n      \"last\": 2,\n      \"page\": 1,\n      \"page_count\": 1,\n      \"per_page\": 20,\n      \"total_count\": 2\n    },\n    \"paging\": {\n      \"count\": 20,\n      \"page\": 1,\n      \"pages\": 1,\n      \"total\": 2\n    },\n    \"total\": 2\n  },\n  \"ok\": true,\n  \"query\": \"The meaning of life the universe and everything\"\n}"
				},
				{
					"id": "e8a28a54-4305-4c1e-b4b5-30df9f3c1957",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/search.messages?token=amet&count=-60142516&highlight=true&page=-60142516&query=amet&sort=amet&sort_dir=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"search.messages"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "count",
									"value": "-60142516"
								},
								{
									"key": "highlight",
									"value": "true"
								},
								{
									"key": "page",
									"value": "-60142516"
								},
								{
									"key": "query",
									"value": "amet"
								},
								{
									"key": "sort",
									"value": "amet"
								},
								{
									"key": "sort_dir",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"No query passed\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "stars add",
			"id": "529ee4b6-71df-4853-b9c0-33ee5624c91e",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `stars:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "reprehenderit labore",
							"description": "Channel to add star to, or channel where the message to add star to was posted (used with `timestamp`)."
						},
						{
							"key": "file",
							"value": "dolore adipisicing",
							"description": "File to add star to."
						},
						{
							"key": "file_comment",
							"value": "laboris",
							"description": "File comment to add star to."
						},
						{
							"key": "timestamp",
							"value": "irure minim voluptate esse ipsum",
							"description": "Timestamp of the message to add star to."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/stars.add",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stars.add"
					]
				},
				"description": "Adds a star to an item."
			},
			"response": [
				{
					"id": "06af3bb8-d13a-4b0a-9f67-61616cb15640",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `stars:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Channel to add star to, or channel where the message to add star to was posted (used with `timestamp`).",
									"key": "channel",
									"value": "reprehenderit labore"
								},
								{
									"description": "File to add star to.",
									"key": "file",
									"value": "dolore adipisicing"
								},
								{
									"description": "File comment to add star to.",
									"key": "file_comment",
									"value": "laboris"
								},
								{
									"description": "Timestamp of the message to add star to.",
									"key": "timestamp",
									"value": "irure minim voluptate esse ipsum"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/stars.add",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stars.add"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "1d89f183-bf94-41ba-9f87-3ddec6f5a0bd",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `stars:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Channel to add star to, or channel where the message to add star to was posted (used with `timestamp`).",
									"key": "channel",
									"value": "reprehenderit labore"
								},
								{
									"description": "File to add star to.",
									"key": "file",
									"value": "dolore adipisicing"
								},
								{
									"description": "File comment to add star to.",
									"key": "file_comment",
									"value": "laboris"
								},
								{
									"description": "Timestamp of the message to add star to.",
									"key": "timestamp",
									"value": "irure minim voluptate esse ipsum"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/stars.add",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stars.add"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "stars list",
			"id": "cb14bb84-c643-4db7-9647-52682036876e",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/stars.list?token=amet&count=amet&page=amet&cursor=amet&limit=-60142516",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stars.list"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "Authentication token. Requires scope: `stars:read`"
						},
						{
							"key": "count",
							"value": "amet"
						},
						{
							"key": "page",
							"value": "amet"
						},
						{
							"key": "cursor",
							"value": "amet",
							"description": "Parameter for pagination. Set `cursor` equal to the `next_cursor` attribute returned by the previous request's `response_metadata`. This parameter is optional, but pagination is mandatory: the default value simply fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more details."
						},
						{
							"key": "limit",
							"value": "-60142516",
							"description": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the list hasn't been reached."
						}
					]
				},
				"description": "Lists stars for a user."
			},
			"response": [
				{
					"id": "f7b7316f-4c51-4a60-a1c9-c95133a2c745",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/stars.list?token=amet&count=amet&page=amet&cursor=amet&limit=-60142516",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stars.list"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "count",
									"value": "amet"
								},
								{
									"key": "page",
									"value": "amet"
								},
								{
									"key": "cursor",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "2253f6c3-4c21-4a7e-945e-344ae2b94848",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/stars.list?token=amet&count=amet&page=amet&cursor=amet&limit=-60142516",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stars.list"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "count",
									"value": "amet"
								},
								{
									"key": "page",
									"value": "amet"
								},
								{
									"key": "cursor",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "stars remove",
			"id": "8e56be66-9c9d-4f5b-a1da-0b519e95b397",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `stars:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "channel",
							"value": "eiusmod est dolor reprehenderit",
							"description": "Channel to remove star from, or channel where the message to remove star from was posted (used with `timestamp`)."
						},
						{
							"key": "file",
							"value": "ipsum adipisicing i",
							"description": "File to remove star from."
						},
						{
							"key": "file_comment",
							"value": "sit dolor ut esse consectet",
							"description": "File comment to remove star from."
						},
						{
							"key": "timestamp",
							"value": "velit consectetur dolore do",
							"description": "Timestamp of the message to remove star from."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/stars.remove",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"stars.remove"
					]
				},
				"description": "Removes a star from an item."
			},
			"response": [
				{
					"id": "0c47e420-c07e-414d-af51-e08f30439886",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `stars:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Channel to remove star from, or channel where the message to remove star from was posted (used with `timestamp`).",
									"key": "channel",
									"value": "eiusmod est dolor reprehenderit"
								},
								{
									"description": "File to remove star from.",
									"key": "file",
									"value": "ipsum adipisicing i"
								},
								{
									"description": "File comment to remove star from.",
									"key": "file_comment",
									"value": "sit dolor ut esse consectet"
								},
								{
									"description": "Timestamp of the message to remove star from.",
									"key": "timestamp",
									"value": "velit consectetur dolore do"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/stars.remove",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stars.remove"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "d24207b8-cc9b-4091-8e96-898a87a9a107",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `stars:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Channel to remove star from, or channel where the message to remove star from was posted (used with `timestamp`).",
									"key": "channel",
									"value": "eiusmod est dolor reprehenderit"
								},
								{
									"description": "File to remove star from.",
									"key": "file",
									"value": "ipsum adipisicing i"
								},
								{
									"description": "File comment to remove star from.",
									"key": "file_comment",
									"value": "sit dolor ut esse consectet"
								},
								{
									"description": "Timestamp of the message to remove star from.",
									"key": "timestamp",
									"value": "velit consectetur dolore do"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/stars.remove",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stars.remove"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "team access Logs",
			"id": "b3a37a08-4d96-4330-b2a3-6da5f1a58a52",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/team.accessLogs?token=amet&before=amet&count=amet&page=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"team.accessLogs"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "(Required) Authentication token. Requires scope: `admin`"
						},
						{
							"key": "before",
							"value": "amet",
							"description": "End of time range of logs to include in results (inclusive)."
						},
						{
							"key": "count",
							"value": "amet"
						},
						{
							"key": "page",
							"value": "amet"
						}
					]
				},
				"description": "Gets the access logs for the current team."
			},
			"response": [
				{
					"id": "eed7002e-4538-479d-bc43-4d7352c318da",
					"name": "This response demonstrates pagination and two access log entries.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/team.accessLogs?token=amet&before=amet&count=amet&page=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"team.accessLogs"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "before",
									"value": "amet"
								},
								{
									"key": "count",
									"value": "amet"
								},
								{
									"key": "page",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"logins\": [\n    {\n      \"count\": 1,\n      \"country\": \"US\",\n      \"date_first\": 1422922864,\n      \"date_last\": 1422922864,\n      \"ip\": \"127.0.0.1\",\n      \"isp\": \"BigCo ISP\",\n      \"region\": \"CA\",\n      \"user_agent\": \"SlackWeb Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2272.35 Safari/537.36\",\n      \"user_id\": \"U45678\",\n      \"username\": \"alice\"\n    },\n    {\n      \"count\": 1,\n      \"country\": \"US\",\n      \"date_first\": 1422922493,\n      \"date_last\": 1422922493,\n      \"ip\": \"127.0.0.1\",\n      \"isp\": \"BigCo ISP\",\n      \"region\": \"CA\",\n      \"user_agent\": \"SlackWeb Mozilla/5.0 (iPhone; CPU iPhone OS 8_1_3 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12B466 Safari/600.1.4\",\n      \"user_id\": \"U12345\",\n      \"username\": \"white_rabbit\"\n    }\n  ],\n  \"ok\": true,\n  \"paging\": {\n    \"count\": 100,\n    \"page\": 1,\n    \"pages\": 1,\n    \"total\": 2\n  }\n}"
				},
				{
					"id": "2ae3af53-fbd4-4425-a208-602c7602ca96",
					"name": "A workspace must be on a paid plan to use this method, otherwise the `paid_only` error is thrown:",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/team.accessLogs?token=amet&before=amet&count=amet&page=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"team.accessLogs"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "before",
									"value": "amet"
								},
								{
									"key": "count",
									"value": "amet"
								},
								{
									"key": "page",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"paid_only\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "team billable Info",
			"id": "e066456f-0263-407f-bf80-6fd467189246",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/team.billableInfo?token=amet&user=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"team.billableInfo"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "(Required) Authentication token. Requires scope: `admin`"
						},
						{
							"key": "user",
							"value": "amet",
							"description": "A user to retrieve the billable information for. Defaults to all users."
						}
					]
				},
				"description": "Gets billable users information for the current team."
			},
			"response": [
				{
					"id": "b23b2b81-cb0d-4cc0-928b-90255d3adfd3",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/team.billableInfo?token=amet&user=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"team.billableInfo"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "user",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"billable_info\": {\n    \"U02UCPE1R\": {\n      \"billing_active\": true\n    },\n    \"U02UEBSD2\": {\n      \"billing_active\": true\n    },\n    \"U0632EWRW\": {\n      \"billing_active\": false\n    }\n  },\n  \"ok\": true\n}"
				},
				{
					"id": "24af9ede-796d-4bee-8fb5-e65d1eeb5d75",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/team.billableInfo?token=amet&user=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"team.billableInfo"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "user",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "team info",
			"id": "a22001a2-aa18-43e2-a116-6c9caddc1b11",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/team.info?token=amet&team=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"team.info"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "(Required) Authentication token. Requires scope: `team:read`"
						},
						{
							"key": "team",
							"value": "amet",
							"description": "Team to get info on, if omitted, will return information about the current team. Will only return team that the authenticated token is allowed to see through external shared channels"
						}
					]
				},
				"description": "Gets information about the current team."
			},
			"response": [
				{
					"id": "cbc9797d-182a-4544-82e2-d20245bf0944",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/team.info?token=amet&team=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"team.info"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "team",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"team\": {\n    \"domain\": \"example\",\n    \"email_domain\": \"example.com\",\n    \"enterprise_id\": \"E1234A12AB\",\n    \"enterprise_name\": \"Umbrella Corporation\",\n    \"icon\": {\n      \"image_102\": \"https://...\",\n      \"image_132\": \"https://...\",\n      \"image_34\": \"https://...\",\n      \"image_44\": \"https://...\",\n      \"image_68\": \"https://...\",\n      \"image_88\": \"https://...\",\n      \"image_default\": true\n    },\n    \"id\": \"T12345\",\n    \"name\": \"My Team\"\n  }\n}"
				},
				{
					"id": "067264d1-0c8a-40bc-851f-2905c5f4ce89",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/team.info?token=amet&team=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"team.info"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "team",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "team integration Logs",
			"id": "bcce11b2-ad47-4432-bf5d-80cc4752a134",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/team.integrationLogs?token=amet&app_id=amet&change_type=amet&count=amet&page=amet&service_id=amet&user=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"team.integrationLogs"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "(Required) Authentication token. Requires scope: `admin`"
						},
						{
							"key": "app_id",
							"value": "amet",
							"description": "Filter logs to this Slack app. Defaults to all logs."
						},
						{
							"key": "change_type",
							"value": "amet",
							"description": "Filter logs with this change type. Defaults to all logs."
						},
						{
							"key": "count",
							"value": "amet"
						},
						{
							"key": "page",
							"value": "amet"
						},
						{
							"key": "service_id",
							"value": "amet",
							"description": "Filter logs to this service. Defaults to all logs."
						},
						{
							"key": "user",
							"value": "amet",
							"description": "Filter logs generated by this user’s actions. Defaults to all logs."
						}
					]
				},
				"description": "Gets the integration logs for the current team."
			},
			"response": [
				{
					"id": "879a3a36-bbd0-4c60-b3d3-a23781253716",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/team.integrationLogs?token=amet&app_id=amet&change_type=amet&count=amet&page=amet&service_id=amet&user=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"team.integrationLogs"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "app_id",
									"value": "amet"
								},
								{
									"key": "change_type",
									"value": "amet"
								},
								{
									"key": "count",
									"value": "amet"
								},
								{
									"key": "page",
									"value": "amet"
								},
								{
									"key": "service_id",
									"value": "amet"
								},
								{
									"key": "user",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "4fbb60a0-bd41-4f78-ae71-8720b229ee9a",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/team.integrationLogs?token=amet&app_id=amet&change_type=amet&count=amet&page=amet&service_id=amet&user=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"team.integrationLogs"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "app_id",
									"value": "amet"
								},
								{
									"key": "change_type",
									"value": "amet"
								},
								{
									"key": "count",
									"value": "amet"
								},
								{
									"key": "page",
									"value": "amet"
								},
								{
									"key": "service_id",
									"value": "amet"
								},
								{
									"key": "user",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "team profile get",
			"id": "cd643500-5be2-415c-b02a-904523647058",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/team.profile.get?token=amet&visibility=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"team.profile.get"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "(Required) Authentication token. Requires scope: `users.profile:read`"
						},
						{
							"key": "visibility",
							"value": "amet",
							"description": "Filter by visibility."
						}
					]
				},
				"description": "Retrieve a team's profile."
			},
			"response": [
				{
					"id": "9cdd8d06-b2c0-463e-9b12-4c198614799f",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/team.profile.get?token=amet&visibility=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"team.profile.get"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "visibility",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"profile\": {\n    \"fields\": [\n      {\n        \"hint\": \"Enter the extension to reach your desk\",\n        \"id\": \"Xf06054AAA\",\n        \"is_hidden\": 1,\n        \"label\": \"Phone extension\",\n        \"options\": null,\n        \"ordering\": 0,\n        \"possible_values\": null,\n        \"type\": \"text\"\n      },\n      {\n        \"hint\": \"When you were born\",\n        \"id\": \"Xf06054BBB\",\n        \"label\": \"Date of birth\",\n        \"options\": null,\n        \"ordering\": 1,\n        \"possible_values\": null,\n        \"type\": \"date\"\n      },\n      {\n        \"hint\": \"Enter a link to your Facebook profile\",\n        \"id\": \"Xf06054CCC\",\n        \"label\": \"Facebook\",\n        \"options\": null,\n        \"ordering\": 2,\n        \"possible_values\": null,\n        \"type\": \"link\"\n      },\n      {\n        \"hint\": \"Hogwarts, obviously\",\n        \"id\": \"Xf06054DDD\",\n        \"label\": \"House\",\n        \"options\": null,\n        \"ordering\": 3,\n        \"possible_values\": [\n          \"Gryffindor\",\n          \"Hufflepuff\",\n          \"Ravenclaw\",\n          \"Slytherin\"\n        ],\n        \"type\": \"options_list\"\n      },\n      {\n        \"hint\": \"Office location (LDAP)\",\n        \"id\": \"Xf06054EEE\",\n        \"label\": \"Location\",\n        \"options\": {\n          \"is_protected\": 1\n        },\n        \"ordering\": 4,\n        \"possible_values\": null,\n        \"type\": \"text\"\n      },\n      {\n        \"hint\": \"The boss\",\n        \"id\": \"Xf06054FFF\",\n        \"label\": \"Manager\",\n        \"options\": null,\n        \"ordering\": 5,\n        \"possible_values\": null,\n        \"type\": \"user\"\n      }\n    ]\n  }\n}"
				},
				{
					"id": "0d6da66f-5769-4f82-acf9-8edcb1c6f6b5",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/team.profile.get?token=amet&visibility=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"team.profile.get"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "visibility",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "usergroups create",
			"id": "22e5084d-187b-40db-a033-e74dec15dc7d",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `usergroups:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "name",
							"value": "nisi ",
							"description": "(Required) A name for the User Group. Must be unique among User Groups."
						},
						{
							"key": "channels",
							"value": "labore voluptate dolor comm",
							"description": "A comma separated string of encoded channel IDs for which the User Group uses as a default."
						},
						{
							"key": "description",
							"value": "dolor",
							"description": "A short description of the User Group."
						},
						{
							"key": "handle",
							"value": "proident cupidatat minim",
							"description": "A mention handle. Must be unique among channels, users and User Groups."
						},
						{
							"key": "include_count",
							"value": "false",
							"description": "Include the number of users in each User Group."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/usergroups.create",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usergroups.create"
					]
				},
				"description": "Create a User Group"
			},
			"response": [
				{
					"id": "36136bd6-cbbf-429c-a2e2-9cafb3a52b51",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `usergroups:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) A name for the User Group. Must be unique among User Groups.",
									"key": "name",
									"value": "nisi "
								},
								{
									"description": "A comma separated string of encoded channel IDs for which the User Group uses as a default.",
									"key": "channels",
									"value": "labore voluptate dolor comm"
								},
								{
									"description": "A short description of the User Group.",
									"key": "description",
									"value": "dolor"
								},
								{
									"description": "A mention handle. Must be unique among channels, users and User Groups.",
									"key": "handle",
									"value": "proident cupidatat minim"
								},
								{
									"description": "Include the number of users in each User Group.",
									"key": "include_count",
									"value": "false"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/usergroups.create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usergroups.create"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "ece5f823-ca38-4a52-9cb4-72327996f29b",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `usergroups:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) A name for the User Group. Must be unique among User Groups.",
									"key": "name",
									"value": "nisi "
								},
								{
									"description": "A comma separated string of encoded channel IDs for which the User Group uses as a default.",
									"key": "channels",
									"value": "labore voluptate dolor comm"
								},
								{
									"description": "A short description of the User Group.",
									"key": "description",
									"value": "dolor"
								},
								{
									"description": "A mention handle. Must be unique among channels, users and User Groups.",
									"key": "handle",
									"value": "proident cupidatat minim"
								},
								{
									"description": "Include the number of users in each User Group.",
									"key": "include_count",
									"value": "false"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/usergroups.create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usergroups.create"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "usergroups disable",
			"id": "cd8ab9e1-0de6-4479-99ea-4cb32897974e",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `usergroups:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "usergroup",
							"value": "pariatur in occaecat Excepteur",
							"description": "(Required) The encoded ID of the User Group to disable."
						},
						{
							"key": "include_count",
							"value": "true",
							"description": "Include the number of users in the User Group."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/usergroups.disable",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usergroups.disable"
					]
				},
				"description": "Disable an existing User Group"
			},
			"response": [
				{
					"id": "31c7d61a-cefa-4ef5-9225-f50baa808dc1",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `usergroups:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The encoded ID of the User Group to disable.",
									"key": "usergroup",
									"value": "pariatur in occaecat Excepteur"
								},
								{
									"description": "Include the number of users in the User Group.",
									"key": "include_count",
									"value": "true"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/usergroups.disable",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usergroups.disable"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "4f8726d6-229c-49fc-baa1-2744fff9790e",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `usergroups:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The encoded ID of the User Group to disable.",
									"key": "usergroup",
									"value": "pariatur in occaecat Excepteur"
								},
								{
									"description": "Include the number of users in the User Group.",
									"key": "include_count",
									"value": "true"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/usergroups.disable",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usergroups.disable"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "usergroups enable",
			"id": "2ad0a543-82f6-4798-aadf-5be668df9070",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `usergroups:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "usergroup",
							"value": "qui aute dolore",
							"description": "(Required) The encoded ID of the User Group to enable."
						},
						{
							"key": "include_count",
							"value": "false",
							"description": "Include the number of users in the User Group."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/usergroups.enable",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usergroups.enable"
					]
				},
				"description": "Enable a User Group"
			},
			"response": [
				{
					"id": "6ea456c1-27f5-44ec-95cb-da99804afb6f",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `usergroups:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The encoded ID of the User Group to enable.",
									"key": "usergroup",
									"value": "qui aute dolore"
								},
								{
									"description": "Include the number of users in the User Group.",
									"key": "include_count",
									"value": "false"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/usergroups.enable",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usergroups.enable"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "5d224119-f432-4300-a075-7926a254138c",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `usergroups:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The encoded ID of the User Group to enable.",
									"key": "usergroup",
									"value": "qui aute dolore"
								},
								{
									"description": "Include the number of users in the User Group.",
									"key": "include_count",
									"value": "false"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/usergroups.enable",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usergroups.enable"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "usergroups list",
			"id": "7a503dfb-1fe2-41f3-a242-5070433c6667",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/usergroups.list?include_users=true&token=amet&include_count=true&include_disabled=true",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usergroups.list"
					],
					"query": [
						{
							"key": "include_users",
							"value": "true",
							"description": "Include the list of users for each User Group."
						},
						{
							"key": "token",
							"value": "amet",
							"description": "(Required) Authentication token. Requires scope: `usergroups:read`"
						},
						{
							"key": "include_count",
							"value": "true",
							"description": "Include the number of users in each User Group."
						},
						{
							"key": "include_disabled",
							"value": "true",
							"description": "Include disabled User Groups."
						}
					]
				},
				"description": "List all User Groups for a team"
			},
			"response": [
				{
					"id": "dc315992-5713-4e45-8e4e-7477c061b671",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/usergroups.list?include_users=true&token=amet&include_count=true&include_disabled=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usergroups.list"
							],
							"query": [
								{
									"key": "include_users",
									"value": "true"
								},
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "include_count",
									"value": "true"
								},
								{
									"key": "include_disabled",
									"value": "true"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"usergroups\": [\n    {\n      \"auto_type\": \"admin\",\n      \"created_by\": \"USLACKBOT\",\n      \"date_create\": 1446598059,\n      \"date_delete\": 0,\n      \"date_update\": 1446670362,\n      \"deleted_by\": null,\n      \"description\": \"A group of all Administrators on your team.\",\n      \"handle\": \"admins\",\n      \"id\": \"S0614TZR7\",\n      \"is_external\": false,\n      \"is_usergroup\": true,\n      \"name\": \"Team Admins\",\n      \"prefs\": {\n        \"channels\": [],\n        \"groups\": []\n      },\n      \"team_id\": \"T060RNRCH\",\n      \"updated_by\": \"U060RNRCZ\",\n      \"user_count\": \"2\"\n    },\n    {\n      \"auto_type\": \"owner\",\n      \"created_by\": \"USLACKBOT\",\n      \"date_create\": 1446678371,\n      \"date_delete\": 0,\n      \"date_update\": 1446678371,\n      \"deleted_by\": null,\n      \"description\": \"A group of all Owners on your team.\",\n      \"handle\": \"owners\",\n      \"id\": \"S06158AV7\",\n      \"is_external\": false,\n      \"is_usergroup\": true,\n      \"name\": \"Team Owners\",\n      \"prefs\": {\n        \"channels\": [],\n        \"groups\": []\n      },\n      \"team_id\": \"T060RNRCH\",\n      \"updated_by\": \"USLACKBOT\",\n      \"user_count\": \"1\"\n    },\n    {\n      \"auto_type\": null,\n      \"created_by\": \"U060RNRCZ\",\n      \"date_create\": 1446746793,\n      \"date_delete\": 1446748865,\n      \"date_update\": 1446747767,\n      \"deleted_by\": null,\n      \"description\": \"Marketing gurus, PR experts and product advocates.\",\n      \"handle\": \"marketing-team\",\n      \"id\": \"S0615G0KT\",\n      \"is_external\": false,\n      \"is_usergroup\": true,\n      \"name\": \"Marketing Team\",\n      \"prefs\": {\n        \"channels\": [],\n        \"groups\": []\n      },\n      \"team_id\": \"T060RNRCH\",\n      \"updated_by\": \"U060RNRCZ\",\n      \"user_count\": \"0\"\n    }\n  ]\n}"
				},
				{
					"id": "6c2c89f4-9d5f-4222-85bd-277649806038",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/usergroups.list?include_users=true&token=amet&include_count=true&include_disabled=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usergroups.list"
							],
							"query": [
								{
									"key": "include_users",
									"value": "true"
								},
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "include_count",
									"value": "true"
								},
								{
									"key": "include_disabled",
									"value": "true"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "usergroups update",
			"id": "1e8a61e2-30d0-44fb-a937-f1dbb9068d72",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `usergroups:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "usergroup",
							"value": "in cillum dolor sunt",
							"description": "(Required) The encoded ID of the User Group to update."
						},
						{
							"key": "handle",
							"value": "dolor in",
							"description": "A mention handle. Must be unique among channels, users and User Groups."
						},
						{
							"key": "description",
							"value": "ex enim Lorem",
							"description": "A short description of the User Group."
						},
						{
							"key": "channels",
							"value": "qu",
							"description": "A comma separated string of encoded channel IDs for which the User Group uses as a default."
						},
						{
							"key": "include_count",
							"value": "false",
							"description": "Include the number of users in the User Group."
						},
						{
							"key": "name",
							"value": "occaecat amet",
							"description": "A name for the User Group. Must be unique among User Groups."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/usergroups.update",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usergroups.update"
					]
				},
				"description": "Update an existing User Group"
			},
			"response": [
				{
					"id": "d8fb0607-b7a9-47e1-8bbb-865ec12b8089",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `usergroups:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The encoded ID of the User Group to update.",
									"key": "usergroup",
									"value": "in cillum dolor sunt"
								},
								{
									"description": "A mention handle. Must be unique among channels, users and User Groups.",
									"key": "handle",
									"value": "dolor in"
								},
								{
									"description": "A short description of the User Group.",
									"key": "description",
									"value": "ex enim Lorem"
								},
								{
									"description": "A comma separated string of encoded channel IDs for which the User Group uses as a default.",
									"key": "channels",
									"value": "qu"
								},
								{
									"description": "Include the number of users in the User Group.",
									"key": "include_count",
									"value": "false"
								},
								{
									"description": "A name for the User Group. Must be unique among User Groups.",
									"key": "name",
									"value": "occaecat amet"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/usergroups.update",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usergroups.update"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"usergroup\": {\n    \"auto_type\": null,\n    \"created_by\": \"U060R4BJ4\",\n    \"date_create\": 1447096577,\n    \"date_delete\": 0,\n    \"date_update\": 1447102109,\n    \"deleted_by\": null,\n    \"description\": \"Marketing gurus, PR experts and product advocates.\",\n    \"handle\": \"marketing-team\",\n    \"id\": \"S0616NG6M\",\n    \"is_external\": false,\n    \"is_usergroup\": true,\n    \"name\": \"Marketing Team\",\n    \"prefs\": {\n      \"channels\": [],\n      \"groups\": []\n    },\n    \"team_id\": \"T060R4BHN\",\n    \"updated_by\": \"U060R4BJ4\",\n    \"user_count\": 1,\n    \"users\": [\n      \"U060R4BJ4\",\n      \"U060RNRCZ\"\n    ]\n  }\n}"
				},
				{
					"id": "d5f09782-8a3f-4137-a0ac-443b8cd34a39",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `usergroups:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The encoded ID of the User Group to update.",
									"key": "usergroup",
									"value": "in cillum dolor sunt"
								},
								{
									"description": "A mention handle. Must be unique among channels, users and User Groups.",
									"key": "handle",
									"value": "dolor in"
								},
								{
									"description": "A short description of the User Group.",
									"key": "description",
									"value": "ex enim Lorem"
								},
								{
									"description": "A comma separated string of encoded channel IDs for which the User Group uses as a default.",
									"key": "channels",
									"value": "qu"
								},
								{
									"description": "Include the number of users in the User Group.",
									"key": "include_count",
									"value": "false"
								},
								{
									"description": "A name for the User Group. Must be unique among User Groups.",
									"key": "name",
									"value": "occaecat amet"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/usergroups.update",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usergroups.update"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "usergroups users list",
			"id": "a8084d42-25ee-4c60-96a1-cf5758513c7d",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/usergroups.users.list?token=amet&include_disabled=true&usergroup=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usergroups.users.list"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "(Required) Authentication token. Requires scope: `usergroups:read`"
						},
						{
							"key": "include_disabled",
							"value": "true",
							"description": "Allow results that involve disabled User Groups."
						},
						{
							"key": "usergroup",
							"value": "amet",
							"description": "(Required) The encoded ID of the User Group to update."
						}
					]
				},
				"description": "List all users in a User Group"
			},
			"response": [
				{
					"id": "0aacf094-e970-4c4e-9670-e4010263ca9e",
					"name": "Standard success response when used with a user token",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/usergroups.users.list?token=amet&include_disabled=true&usergroup=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usergroups.users.list"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "include_disabled",
									"value": "true"
								},
								{
									"key": "usergroup",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"users\": [\n    \"U060R4BJ4\",\n    \"W123A4BC5\"\n  ]\n}"
				},
				{
					"id": "99d8ae94-317e-4ad3-b0c3-7c243025898e",
					"name": "Standard failure response when used with an invalid token",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/usergroups.users.list?token=amet&include_disabled=true&usergroup=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usergroups.users.list"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "include_disabled",
									"value": "true"
								},
								{
									"key": "usergroup",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "usergroups users update",
			"id": "71f8db9d-5f35-4f8c-afd6-41445bfb4c74",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `usergroups:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "usergroup",
							"value": "sunt Excepteur est dolor",
							"description": "(Required) The encoded ID of the User Group to update."
						},
						{
							"key": "users",
							"value": "labore consequat mollit",
							"description": "(Required) A comma separated string of encoded user IDs that represent the entire list of users for the User Group."
						},
						{
							"key": "include_count",
							"value": "false",
							"description": "Include the number of users in the User Group."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/usergroups.users.update",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"usergroups.users.update"
					]
				},
				"description": "Update the list of users for a User Group"
			},
			"response": [
				{
					"id": "18f8862b-b613-4a65-93e9-07719eb95f16",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `usergroups:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The encoded ID of the User Group to update.",
									"key": "usergroup",
									"value": "sunt Excepteur est dolor"
								},
								{
									"description": "(Required) A comma separated string of encoded user IDs that represent the entire list of users for the User Group.",
									"key": "users",
									"value": "labore consequat mollit"
								},
								{
									"description": "Include the number of users in the User Group.",
									"key": "include_count",
									"value": "false"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/usergroups.users.update",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usergroups.users.update"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"usergroup\": {\n    \"auto_type\": null,\n    \"created_by\": \"U060R4BJ4\",\n    \"date_create\": 1447096577,\n    \"date_delete\": 0,\n    \"date_update\": 1447102109,\n    \"deleted_by\": null,\n    \"description\": \"Marketing gurus, PR experts and product advocates.\",\n    \"handle\": \"marketing-team\",\n    \"id\": \"S0616NG6M\",\n    \"is_external\": false,\n    \"is_usergroup\": true,\n    \"name\": \"Marketing Team\",\n    \"prefs\": {\n      \"channels\": [],\n      \"groups\": []\n    },\n    \"team_id\": \"T060R4BHN\",\n    \"updated_by\": \"U060R4BJ4\",\n    \"user_count\": 1,\n    \"users\": [\n      \"U060R4BJ4\",\n      \"U060RNRCZ\"\n    ]\n  }\n}"
				},
				{
					"id": "5f57ac4c-4b01-46f5-a6f3-706bca77b8ab",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `usergroups:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) The encoded ID of the User Group to update.",
									"key": "usergroup",
									"value": "sunt Excepteur est dolor"
								},
								{
									"description": "(Required) A comma separated string of encoded user IDs that represent the entire list of users for the User Group.",
									"key": "users",
									"value": "labore consequat mollit"
								},
								{
									"description": "Include the number of users in the User Group.",
									"key": "include_count",
									"value": "false"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/usergroups.users.update",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usergroups.users.update"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "users conversations",
			"id": "f4f758d7-44af-4c86-a9e6-4d8136b4dff0",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/users.conversations?token=amet&user=amet&types=amet&exclude_archived=true&limit=-60142516&cursor=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users.conversations"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "Authentication token. Requires scope: `conversations:read`"
						},
						{
							"key": "user",
							"value": "amet",
							"description": "Browse conversations by a specific user ID's membership. Non-public channels are restricted to those where the calling user shares membership."
						},
						{
							"key": "types",
							"value": "amet",
							"description": "Mix and match channel types by providing a comma-separated list of any combination of `public_channel`, `private_channel`, `mpim`, `im`"
						},
						{
							"key": "exclude_archived",
							"value": "true",
							"description": "Set to `true` to exclude archived channels from the list"
						},
						{
							"key": "limit",
							"value": "-60142516",
							"description": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the list hasn't been reached. Must be an integer no larger than 1000."
						},
						{
							"key": "cursor",
							"value": "amet",
							"description": "Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more detail."
						}
					]
				},
				"description": "List conversations the calling user may access."
			},
			"response": [
				{
					"id": "bde06a79-a31a-4302-bb02-d75d2148f7e2",
					"name": "Typical success response with only public channels. Note how `num_members` and `is_member` are not returned like typical `conversations` objects.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users.conversations?token=amet&user=amet&types=amet&exclude_archived=true&limit=-60142516&cursor=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.conversations"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "user",
									"value": "amet"
								},
								{
									"key": "types",
									"value": "amet"
								},
								{
									"key": "exclude_archived",
									"value": "true"
								},
								{
									"key": "limit",
									"value": "-60142516"
								},
								{
									"key": "cursor",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"channels\": [\n    {\n      \"created\": 1449252889,\n      \"creator\": \"U012A3CDE\",\n      \"id\": \"C012AB3CD\",\n      \"is_archived\": false,\n      \"is_channel\": true,\n      \"is_ext_shared\": false,\n      \"is_general\": true,\n      \"is_group\": false,\n      \"is_im\": false,\n      \"is_mpim\": false,\n      \"is_org_shared\": false,\n      \"is_pending_ext_shared\": false,\n      \"is_private\": false,\n      \"is_shared\": false,\n      \"name\": \"general\",\n      \"name_normalized\": \"general\",\n      \"pending_shared\": [],\n      \"previous_names\": [],\n      \"purpose\": {\n        \"creator\": \"\",\n        \"last_set\": 0,\n        \"value\": \"This channel is for team-wide communication and announcements. All team members are in this channel.\"\n      },\n      \"topic\": {\n        \"creator\": \"\",\n        \"last_set\": 0,\n        \"value\": \"Company-wide announcements and work-based matters\"\n      },\n      \"unlinked\": 0\n    },\n    {\n      \"created\": 1449252889,\n      \"creator\": \"U061F7AUR\",\n      \"id\": \"C061EG9T2\",\n      \"is_archived\": false,\n      \"is_channel\": true,\n      \"is_ext_shared\": false,\n      \"is_general\": false,\n      \"is_group\": false,\n      \"is_im\": false,\n      \"is_mpim\": false,\n      \"is_org_shared\": false,\n      \"is_pending_ext_shared\": false,\n      \"is_private\": false,\n      \"is_shared\": false,\n      \"name\": \"random\",\n      \"name_normalized\": \"random\",\n      \"pending_shared\": [],\n      \"previous_names\": [],\n      \"purpose\": {\n        \"creator\": \"\",\n        \"last_set\": 0,\n        \"value\": \"A place for non-work-related flimflam, faffing, hodge-podge or jibber-jabber you'd prefer to keep out of more focused work-related channels.\"\n      },\n      \"topic\": {\n        \"creator\": \"\",\n        \"last_set\": 0,\n        \"value\": \"Non-work banter and water cooler conversation\"\n      },\n      \"unlinked\": 0\n    }\n  ],\n  \"ok\": true,\n  \"response_metadata\": {\n    \"next_cursor\": \"dGVhbTpDMDYxRkE1UEI=\"\n  }\n}"
				},
				{
					"id": "997d579b-d9eb-4503-b4fc-2cf7a9a9f469",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users.conversations?token=amet&user=amet&types=amet&exclude_archived=true&limit=-60142516&cursor=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.conversations"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "user",
									"value": "amet"
								},
								{
									"key": "types",
									"value": "amet"
								},
								{
									"key": "exclude_archived",
									"value": "true"
								},
								{
									"key": "limit",
									"value": "-60142516"
								},
								{
									"key": "cursor",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "users delete Photo",
			"id": "fc53e0cd-dda1-467f-9b6e-cb0e3a46541d",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "token",
							"value": "qui",
							"description": "(Required) Authentication token. Requires scope: `users.profile:write`"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/users.deletePhoto",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users.deletePhoto"
					]
				},
				"description": "Delete the user profile photo"
			},
			"response": [
				{
					"id": "c090fe4f-63dc-4b78-b3fa-67046b5274cf",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `users.profile:write`",
									"key": "token",
									"value": "qui"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/users.deletePhoto",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.deletePhoto"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "1fd88cb9-283b-4c60-9daf-3764b2854dd5",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `users.profile:write`",
									"key": "token",
									"value": "qui"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/users.deletePhoto",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.deletePhoto"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "users get Presence",
			"id": "a59e1d9a-9142-4cef-8374-7f1e801d8f3c",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/users.getPresence?token=amet&user=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users.getPresence"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "(Required) Authentication token. Requires scope: `users:read`"
						},
						{
							"key": "user",
							"value": "amet",
							"description": "User to get presence info on. Defaults to the authed user."
						}
					]
				},
				"description": "Gets user presence information."
			},
			"response": [
				{
					"id": "9eb13541-0cc6-48cf-9a0e-8b577f47865e",
					"name": "When requesting information for a different user, this method just returns the current presence (either `active` or `away`).",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users.getPresence?token=amet&user=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.getPresence"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "user",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"presence\": \"active\"\n}"
				},
				{
					"id": "a54c9364-85fe-4bc1-bd02-581826a25f55",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users.getPresence?token=amet&user=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.getPresence"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "user",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "users identity",
			"id": "b1e7dc6a-b3bf-4008-817e-257adbf8f286",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/users.identity?token=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users.identity"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "Authentication token. Requires scope: `identity.basic`"
						}
					]
				},
				"description": "Get a user's identity."
			},
			"response": [
				{
					"id": "875d0898-3125-44da-ae8e-059e4d069195",
					"name": "You will receive at a minimum the following information:",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users.identity?token=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.identity"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"team\": {\n    \"id\": \"T0G9PQBBK\"\n  },\n  \"user\": {\n    \"id\": \"U0G9QF9C6\",\n    \"name\": \"Sonny Whether\"\n  }\n}"
				},
				{
					"id": "6fbe95e0-4929-405c-acde-54de1be86219",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users.identity?token=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.identity"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"account_inactive\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "users info",
			"id": "db1440f6-2d18-4b1b-b101-18cd2797378b",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/users.info?token=amet&include_locale=true&user=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users.info"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "(Required) Authentication token. Requires scope: `users:read`"
						},
						{
							"key": "include_locale",
							"value": "true",
							"description": "Set this to `true` to receive the locale for this user. Defaults to `false`"
						},
						{
							"key": "user",
							"value": "amet",
							"description": "User to get info on"
						}
					]
				},
				"description": "Gets information about a user."
			},
			"response": [
				{
					"id": "b859ea55-6da4-4750-84dd-e337beb3a6c5",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users.info?token=amet&include_locale=true&user=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.info"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "include_locale",
									"value": "true"
								},
								{
									"key": "user",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"user\": {\n    \"color\": \"9f69e7\",\n    \"deleted\": false,\n    \"has_2fa\": false,\n    \"id\": \"W012A3CDE\",\n    \"is_admin\": true,\n    \"is_app_user\": false,\n    \"is_bot\": false,\n    \"is_owner\": false,\n    \"is_primary_owner\": false,\n    \"is_restricted\": false,\n    \"is_ultra_restricted\": false,\n    \"name\": \"spengler\",\n    \"profile\": {\n      \"avatar_hash\": \"ge3b51ca72de\",\n      \"display_name\": \"spengler\",\n      \"display_name_normalized\": \"spengler\",\n      \"email\": \"spengler@ghostbusters.example.com\",\n      \"image_192\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n      \"image_24\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n      \"image_32\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n      \"image_48\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n      \"image_512\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n      \"image_72\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n      \"image_original\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n      \"real_name\": \"Egon Spengler\",\n      \"real_name_normalized\": \"Egon Spengler\",\n      \"status_emoji\": \":books:\",\n      \"status_text\": \"Print is dead\",\n      \"team\": \"T012AB3C4\"\n    },\n    \"real_name\": \"Egon Spengler\",\n    \"team_id\": \"T012AB3C4\",\n    \"tz\": \"America/Los_Angeles\",\n    \"tz_label\": \"Pacific Daylight Time\",\n    \"tz_offset\": -25200,\n    \"updated\": 1502138686\n  }\n}"
				},
				{
					"id": "453ebfb3-9fb9-43da-b59d-99b65cb9aa1a",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users.info?token=amet&include_locale=true&user=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.info"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "include_locale",
									"value": "true"
								},
								{
									"key": "user",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"user_not_found\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "users list",
			"id": "96d466e4-53ce-4e2b-bd33-c24489d98348",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/users.list?token=amet&limit=-60142516&cursor=amet&include_locale=true",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users.list"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "Authentication token. Requires scope: `users:read`"
						},
						{
							"key": "limit",
							"value": "-60142516",
							"description": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the users list hasn't been reached. Providing no `limit` value will result in Slack attempting to deliver you the entire result set. If the collection is too large you may experience `limit_required` or HTTP 500 errors."
						},
						{
							"key": "cursor",
							"value": "amet",
							"description": "Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \"page\" of the collection. See [pagination](/docs/pagination) for more detail."
						},
						{
							"key": "include_locale",
							"value": "true",
							"description": "Set this to `true` to receive the locale for users. Defaults to `false`"
						}
					]
				},
				"description": "Lists all users in a Slack team."
			},
			"response": [
				{
					"id": "672e0176-e6f2-49c9-baa7-c1052406ee58",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users.list?token=amet&limit=-60142516&cursor=amet&include_locale=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.list"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								},
								{
									"key": "cursor",
									"value": "amet"
								},
								{
									"key": "include_locale",
									"value": "true"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"cache_ts\": 1498777272,\n  \"members\": [\n    {\n      \"color\": \"9f69e7\",\n      \"deleted\": false,\n      \"has_2fa\": false,\n      \"id\": \"W012A3CDE\",\n      \"is_admin\": true,\n      \"is_app_user\": false,\n      \"is_bot\": false,\n      \"is_owner\": false,\n      \"is_primary_owner\": false,\n      \"is_restricted\": false,\n      \"is_ultra_restricted\": false,\n      \"name\": \"spengler\",\n      \"profile\": {\n        \"avatar_hash\": \"ge3b51ca72de\",\n        \"display_name\": \"spengler\",\n        \"display_name_normalized\": \"spengler\",\n        \"email\": \"spengler@ghostbusters.example.com\",\n        \"image_192\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n        \"image_24\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n        \"image_32\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n        \"image_48\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n        \"image_512\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n        \"image_72\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n        \"real_name\": \"Egon Spengler\",\n        \"real_name_normalized\": \"Egon Spengler\",\n        \"status_emoji\": \":books:\",\n        \"status_text\": \"Print is dead\",\n        \"team\": \"T012AB3C4\"\n      },\n      \"real_name\": \"spengler\",\n      \"team_id\": \"T012AB3C4\",\n      \"tz\": \"America/Los_Angeles\",\n      \"tz_label\": \"Pacific Daylight Time\",\n      \"tz_offset\": -25200,\n      \"updated\": 1502138686\n    },\n    {\n      \"color\": \"9f69e7\",\n      \"deleted\": false,\n      \"has_2fa\": false,\n      \"id\": \"W07QCRPA4\",\n      \"is_admin\": true,\n      \"is_bot\": false,\n      \"is_owner\": false,\n      \"is_primary_owner\": false,\n      \"is_restricted\": false,\n      \"is_ultra_restricted\": false,\n      \"name\": \"glinda\",\n      \"profile\": {\n        \"avatar_hash\": \"8fbdd10b41c6\",\n        \"display_name\": \"Glinda the Fairly Good\",\n        \"display_name_normalized\": \"Glinda the Fairly Good\",\n        \"email\": \"glenda@south.oz.coven\",\n        \"first_name\": \"Glinda\",\n        \"image_1024\": \"https://a.slack-edge.com...png\",\n        \"image_192\": \"https://a.slack-edge.com...png\",\n        \"image_24\": \"https://a.slack-edge.com...png\",\n        \"image_32\": \"https://a.slack-edge.com...png\",\n        \"image_48\": \"https://a.slack-edge.com...png\",\n        \"image_512\": \"https://a.slack-edge.com...png\",\n        \"image_72\": \"https://a.slack-edge.com...png\",\n        \"image_original\": \"https://a.slack-edge.com...png\",\n        \"last_name\": \"Southgood\",\n        \"phone\": \"\",\n        \"real_name\": \"Glinda Southgood\",\n        \"real_name_normalized\": \"Glinda Southgood\",\n        \"skype\": \"\",\n        \"title\": \"Glinda the Good\"\n      },\n      \"real_name\": \"Glinda Southgood\",\n      \"team_id\": \"T0G9PQBBK\",\n      \"tz\": \"America/Los_Angeles\",\n      \"tz_label\": \"Pacific Daylight Time\",\n      \"tz_offset\": -25200,\n      \"updated\": 1480527098\n    }\n  ],\n  \"ok\": true,\n  \"response_metadata\": {\n    \"next_cursor\": \"dXNlcjpVMEc5V0ZYTlo=\"\n  }\n}"
				},
				{
					"id": "004bc097-e6cb-4548-8975-c3e41879f8a3",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users.list?token=amet&limit=-60142516&cursor=amet&include_locale=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.list"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "limit",
									"value": "-60142516"
								},
								{
									"key": "cursor",
									"value": "amet"
								},
								{
									"key": "include_locale",
									"value": "true"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_cursor\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "users lookup By Email",
			"id": "3c88feb0-89f2-4e3e-89be-07895961be26",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/users.lookupByEmail?token=amet&email=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users.lookupByEmail"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "(Required) Authentication token. Requires scope: `users:read.email`"
						},
						{
							"key": "email",
							"value": "amet",
							"description": "(Required) An email address belonging to a user in the workspace"
						}
					]
				},
				"description": "Find a user with an email address."
			},
			"response": [
				{
					"id": "b5e23bf1-72ea-4694-9f5d-fa58d94e1a0a",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users.lookupByEmail?token=amet&email=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.lookupByEmail"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "email",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"user\": {\n    \"color\": \"9f69e7\",\n    \"deleted\": false,\n    \"has_2fa\": false,\n    \"id\": \"W012A3CDE\",\n    \"is_admin\": true,\n    \"is_app_user\": false,\n    \"is_bot\": false,\n    \"is_owner\": false,\n    \"is_primary_owner\": false,\n    \"is_restricted\": false,\n    \"is_ultra_restricted\": false,\n    \"name\": \"spengler\",\n    \"profile\": {\n      \"avatar_hash\": \"ge3b51ca72de\",\n      \"display_name\": \"spengler\",\n      \"display_name_normalized\": \"spengler\",\n      \"email\": \"spengler@ghostbusters.example.com\",\n      \"image_192\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n      \"image_24\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n      \"image_32\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n      \"image_48\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n      \"image_512\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n      \"image_72\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n      \"real_name\": \"Egon Spengler\",\n      \"real_name_normalized\": \"Egon Spengler\",\n      \"status_emoji\": \":books:\",\n      \"status_text\": \"Print is dead\",\n      \"team\": \"T012AB3C4\"\n    },\n    \"real_name\": \"Egon Spengler\",\n    \"team_id\": \"T012AB3C4\",\n    \"tz\": \"America/Los_Angeles\",\n    \"tz_label\": \"Pacific Daylight Time\",\n    \"tz_offset\": -25200,\n    \"updated\": 1502138686\n  }\n}"
				},
				{
					"id": "4d750722-caab-4046-b9a9-d7f9531987a7",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users.lookupByEmail?token=amet&email=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.lookupByEmail"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "email",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"users_not_found\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "users profile get",
			"id": "7ed4fd0f-1d78-4700-bb6a-0d3ed64ec713",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/users.profile.get?token=amet&include_labels=true&user=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users.profile.get"
					],
					"query": [
						{
							"key": "token",
							"value": "amet",
							"description": "(Required) Authentication token. Requires scope: `users.profile:read`"
						},
						{
							"key": "include_labels",
							"value": "true",
							"description": "Include labels for each ID in custom profile fields"
						},
						{
							"key": "user",
							"value": "amet",
							"description": "User to retrieve profile info for"
						}
					]
				},
				"description": "Retrieves a user's profile information."
			},
			"response": [
				{
					"id": "d0a21ae5-ed22-4144-8e20-eea8443ccd8d",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users.profile.get?token=amet&include_labels=true&user=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.profile.get"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "include_labels",
									"value": "true"
								},
								{
									"key": "user",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"profile\": {\n    \"avatar_hash\": \"ge3b51ca72de\",\n    \"display_name\": \"spengler\",\n    \"display_name_normalized\": \"spengler\",\n    \"email\": \"spengler@ghostbusters.example.com\",\n    \"image_192\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n    \"image_24\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n    \"image_32\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n    \"image_48\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n    \"image_512\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n    \"image_72\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n    \"image_original\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n    \"real_name\": \"Egon Spengler\",\n    \"real_name_normalized\": \"Egon Spengler\",\n    \"status_emoji\": \":books:\",\n    \"status_expiration\": 0,\n    \"status_text\": \"Print is dead\",\n    \"team\": \"T012AB3C4\"\n  }\n}"
				},
				{
					"id": "91011d22-2664-4bb9-966c-9f2e9896da27",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users.profile.get?token=amet&include_labels=true&user=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.profile.get"
							],
							"query": [
								{
									"key": "token",
									"value": "amet"
								},
								{
									"key": "include_labels",
									"value": "true"
								},
								{
									"key": "user",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"user_not_found\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "users profile set",
			"id": "8910a817-f751-4976-b81b-6dc456f31a72",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `users.profile:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "name",
							"value": "aliqua veniam",
							"description": "Name of a single key to set. Usable only if `profile` is not passed."
						},
						{
							"key": "profile",
							"value": "sit et do proident",
							"description": "Collection of key:value pairs presented as a URL-encoded JSON hash. At most 50 fields may be set. Each field name is limited to 255 characters."
						},
						{
							"key": "user",
							"value": "amet qui ea",
							"description": "ID of user to change. This argument may only be specified by team admins on paid teams."
						},
						{
							"key": "value",
							"value": "ullamco fugiat eu",
							"description": "Value to set a single key to. Usable only if `profile` is not passed."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/users.profile.set",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users.profile.set"
					]
				},
				"description": "Set the profile information for a user."
			},
			"response": [
				{
					"id": "9100bde0-9c62-4995-bf58-c00b0e1a813b",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `users.profile:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Name of a single key to set. Usable only if `profile` is not passed.",
									"key": "name",
									"value": "aliqua veniam"
								},
								{
									"description": "Collection of key:value pairs presented as a URL-encoded JSON hash. At most 50 fields may be set. Each field name is limited to 255 characters.",
									"key": "profile",
									"value": "sit et do proident"
								},
								{
									"description": "ID of user to change. This argument may only be specified by team admins on paid teams.",
									"key": "user",
									"value": "amet qui ea"
								},
								{
									"description": "Value to set a single key to. Usable only if `profile` is not passed.",
									"key": "value",
									"value": "ullamco fugiat eu"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/users.profile.set",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.profile.set"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"profile\": {\n    \"avatar_hash\": \"ge3b51ca72de\",\n    \"display_name\": \"spengler\",\n    \"display_name_normalized\": \"spengler\",\n    \"email\": \"spengler@ghostbusters.example.com\",\n    \"image_192\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n    \"image_24\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n    \"image_32\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n    \"image_48\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n    \"image_512\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n    \"image_72\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n    \"real_name\": \"Egon Spengler\",\n    \"real_name_normalized\": \"Egon Spengler\",\n    \"status_emoji\": \":books:\",\n    \"status_expiration\": 0,\n    \"status_text\": \"Print is dead\",\n    \"team\": \"T012AB3C4\"\n  }\n}"
				},
				{
					"id": "ace16c5a-3eb6-4b9e-b75b-b78fde407f43",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `users.profile:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "Name of a single key to set. Usable only if `profile` is not passed.",
									"key": "name",
									"value": "aliqua veniam"
								},
								{
									"description": "Collection of key:value pairs presented as a URL-encoded JSON hash. At most 50 fields may be set. Each field name is limited to 255 characters.",
									"key": "profile",
									"value": "sit et do proident"
								},
								{
									"description": "ID of user to change. This argument may only be specified by team admins on paid teams.",
									"key": "user",
									"value": "amet qui ea"
								},
								{
									"description": "Value to set a single key to. Usable only if `profile` is not passed.",
									"key": "value",
									"value": "ullamco fugiat eu"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/users.profile.set",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.profile.set"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_profile\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "users set Active",
			"id": "ace55e70-3537-42da-9b2b-c57332ea3aaf",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `users:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/users.setActive",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users.setActive"
					]
				},
				"description": "Marked a user as active. Deprecated and non-functional."
			},
			"response": [
				{
					"id": "7b18b230-639b-4095-8dc6-67dc39635ca0",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `users:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users.setActive",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.setActive"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "afc85486-2133-4b0d-84a7-312f644cf6bb",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `users:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users.setActive",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.setActive"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "users set Photo",
			"id": "908ebe22-986b-4d56-a619-eafa2504999d",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "token",
							"value": "amet Ut eu",
							"description": "(Required) Authentication token. Requires scope: `users.profile:write`"
						},
						{
							"key": "crop_w",
							"value": "commodo",
							"description": "Width/height of crop box (always square)"
						},
						{
							"key": "crop_x",
							"value": "non veniam",
							"description": "X coordinate of top-left corner of crop box"
						},
						{
							"key": "crop_y",
							"value": "eiusmod ex tempor",
							"description": "Y coordinate of top-left corner of crop box"
						},
						{
							"key": "image",
							"value": "ad labore",
							"description": "File contents via `multipart/form-data`."
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/users.setPhoto",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users.setPhoto"
					]
				},
				"description": "Set the user profile photo"
			},
			"response": [
				{
					"id": "c98901bf-c102-4447-8465-ff345fc6295e",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `users.profile:write`",
									"key": "token",
									"value": "amet Ut eu"
								},
								{
									"description": "Width/height of crop box (always square)",
									"key": "crop_w",
									"value": "commodo"
								},
								{
									"description": "X coordinate of top-left corner of crop box",
									"key": "crop_x",
									"value": "non veniam"
								},
								{
									"description": "Y coordinate of top-left corner of crop box",
									"key": "crop_y",
									"value": "eiusmod ex tempor"
								},
								{
									"description": "File contents via `multipart/form-data`.",
									"key": "image",
									"value": "ad labore"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/users.setPhoto",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.setPhoto"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "32f877cc-b4b2-4dd7-8c91-50d7746293f5",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Authentication token. Requires scope: `users.profile:write`",
									"key": "token",
									"value": "amet Ut eu"
								},
								{
									"description": "Width/height of crop box (always square)",
									"key": "crop_w",
									"value": "commodo"
								},
								{
									"description": "X coordinate of top-left corner of crop box",
									"key": "crop_x",
									"value": "non veniam"
								},
								{
									"description": "Y coordinate of top-left corner of crop box",
									"key": "crop_y",
									"value": "eiusmod ex tempor"
								},
								{
									"description": "File contents via `multipart/form-data`.",
									"key": "image",
									"value": "ad labore"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/users.setPhoto",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.setPhoto"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "users set Presence",
			"id": "bad18db5-8c1b-4178-9624-265403c7cacd",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "POST",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `users:write`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "presence",
							"value": "incididunt adipisicing nostrud ",
							"description": "(Required) Either `auto` or `away`"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/users.setPresence",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users.setPresence"
					]
				},
				"description": "Manually sets user presence."
			},
			"response": [
				{
					"id": "76c53aac-4176-4e85-ab4f-25ae034dd1d9",
					"name": "Typical success response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `users:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Either `auto` or `away`",
									"key": "presence",
									"value": "incididunt adipisicing nostrud "
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/users.setPresence",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.setPresence"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "35664530-005d-463d-b8bb-3daf37714760",
					"name": "Typical error response",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `users:write`",
								"key": "token",
								"value": "amet"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"description": "(Required) Either `auto` or `away`",
									"key": "presence",
									"value": "incididunt adipisicing nostrud "
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/users.setPresence",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users.setPresence"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "views open",
			"id": "9b194289-45a1-4def-b501-f23d81c10cd8",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `none`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/views.open?trigger_id=amet&view=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"views.open"
					],
					"query": [
						{
							"key": "trigger_id",
							"value": "amet",
							"description": "(Required) Exchange a trigger to post to the user."
						},
						{
							"key": "view",
							"value": "amet",
							"description": "(Required) A [view payload](/reference/surfaces/views). This must be a JSON-encoded string."
						}
					]
				},
				"description": "Open a view for a user."
			},
			"response": [
				{
					"id": "37cf97e1-9d49-400e-b2d8-6a3849ebb216",
					"name": "Typical success response includes the opened view payload.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `none`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/views.open?trigger_id=amet&view=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"views.open"
							],
							"query": [
								{
									"key": "trigger_id",
									"value": "amet"
								},
								{
									"key": "view",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"view\": {\n    \"app_id\": \"AA4928AQ\",\n    \"blocks\": [\n      {\n        \"block_id\": \"a_block_id\",\n        \"element\": {\n          \"action_id\": \"an_action_id\",\n          \"type\": \"plain_text_input\"\n        },\n        \"label\": {\n          \"emoji\": true,\n          \"text\": \"A simple label\",\n          \"type\": \"plain_text\"\n        },\n        \"optional\": false,\n        \"type\": \"input\"\n      }\n    ],\n    \"bot_id\": \"BA13894H\",\n    \"callback_id\": \"identify_your_modals\",\n    \"clear_on_close\": false,\n    \"external_id\": \"\",\n    \"hash\": \"156772938.1827394\",\n    \"id\": \"VMHU10V25\",\n    \"notify_on_close\": false,\n    \"private_metadata\": \"Shh it is a secret\",\n    \"root_view_id\": \"VMHU10V25\",\n    \"state\": {\n      \"values\": {}\n    },\n    \"submit\": {\n      \"text\": \"Create\",\n      \"type\": \"plain_text\"\n    },\n    \"team_id\": \"T8N4K1JN\",\n    \"title\": {\n      \"text\": \"Quite a plain modal\",\n      \"type\": \"plain_text\"\n    },\n    \"type\": \"modal\"\n  }\n}"
				},
				{
					"id": "8308aa56-592a-4ddd-9ed4-7debba7cb2eb",
					"name": "Typical error response, before getting to any possible validation errors.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `none`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/views.open?trigger_id=amet&view=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"views.open"
							],
							"query": [
								{
									"key": "trigger_id",
									"value": "amet"
								},
								{
									"key": "view",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_arguments\",\n  \"ok\": false,\n  \"response_metadata\": {\n    \"messages\": [\n      \"invalid `trigger_id`\"\n    ]\n  }\n}"
				}
			]
		},
		{
			"name": "views publish",
			"id": "5e09d391-fe11-4f52-bc8d-e7cd7c58195a",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `none`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/views.publish?user_id=amet&view=amet&hash=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"views.publish"
					],
					"query": [
						{
							"key": "user_id",
							"value": "amet",
							"description": "(Required) `id` of the user you want publish a view to."
						},
						{
							"key": "view",
							"value": "amet",
							"description": "(Required) A [view payload](/reference/surfaces/views). This must be a JSON-encoded string."
						},
						{
							"key": "hash",
							"value": "amet",
							"description": "A string that represents view state to protect against possible race conditions."
						}
					]
				},
				"description": "Publish a static view for a User."
			},
			"response": [
				{
					"id": "62e3f1cc-2a17-4702-86b8-cc55c0b62ed6",
					"name": "Typical success response includes the published view payload.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `none`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/views.publish?user_id=amet&view=amet&hash=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"views.publish"
							],
							"query": [
								{
									"key": "user_id",
									"value": "amet"
								},
								{
									"key": "view",
									"value": "amet"
								},
								{
									"key": "hash",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"view\": {\n    \"app_id\": \"AA4928AQ\",\n    \"blocks\": [\n      {\n        \"block_id\": \"2WGp9\",\n        \"text\": {\n          \"text\": \"A simple section with some sample sentence.\",\n          \"type\": \"mrkdwn\",\n          \"verbatim\": false\n        },\n        \"type\": \"section\"\n      }\n    ],\n    \"bot_id\": \"BA13894H\",\n    \"callback_id\": \"identify_your_home_tab\",\n    \"clear_on_close\": false,\n    \"close\": null,\n    \"external_id\": \"\",\n    \"hash\": \"156772938.1827394\",\n    \"id\": \"VMHU10V25\",\n    \"notify_on_close\": false,\n    \"previous_view_id\": null,\n    \"private_metadata\": \"Shh it is a secret\",\n    \"root_view_id\": \"VMHU10V25\",\n    \"state\": {\n      \"values\": {}\n    },\n    \"submit\": null,\n    \"team_id\": \"T8N4K1JN\",\n    \"type\": \"home\"\n  }\n}"
				},
				{
					"id": "5c7ebcab-8f39-46a0-b563-a07dd0bd1001",
					"name": "Typical error response, before getting to any possible validation errors.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `none`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/views.publish?user_id=amet&view=amet&hash=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"views.publish"
							],
							"query": [
								{
									"key": "user_id",
									"value": "amet"
								},
								{
									"key": "view",
									"value": "amet"
								},
								{
									"key": "hash",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_arguments\",\n  \"ok\": false,\n  \"response_metadata\": {\n    \"messages\": [\n      \"invalid `user_id`\"\n    ]\n  }\n}"
				}
			]
		},
		{
			"name": "views push",
			"id": "8b623d65-6511-494f-bda6-449b7ffbf96f",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `none`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/views.push?trigger_id=amet&view=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"views.push"
					],
					"query": [
						{
							"key": "trigger_id",
							"value": "amet",
							"description": "(Required) Exchange a trigger to post to the user."
						},
						{
							"key": "view",
							"value": "amet",
							"description": "(Required) A [view payload](/reference/surfaces/views). This must be a JSON-encoded string."
						}
					]
				},
				"description": "Push a view onto the stack of a root view."
			},
			"response": [
				{
					"id": "4714988d-7c7c-4598-bd22-9f93d69d7146",
					"name": "Typical success response includes the pushed view payload.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `none`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/views.push?trigger_id=amet&view=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"views.push"
							],
							"query": [
								{
									"key": "trigger_id",
									"value": "amet"
								},
								{
									"key": "view",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"view\": {\n    \"app_id\": \"AAD3351BQ\",\n    \"blocks\": [\n      {\n        \"block_id\": \"edit_details\",\n        \"element\": {\n          \"action_id\": \"detail_input\",\n          \"type\": \"plain_text_input\"\n        },\n        \"label\": {\n          \"text\": \"Edit details\",\n          \"type\": \"plain_text\"\n        },\n        \"type\": \"input\"\n      }\n    ],\n    \"bot_id\": \"BADF7A34H\",\n    \"callback_id\": \"view_4\",\n    \"clear_on_close\": true,\n    \"close\": {\n      \"emoji\": true,\n      \"text\": \"Back\",\n      \"type\": \"plain_text\"\n    },\n    \"external_id\": \"\",\n    \"hash\": \"1569362015.55b5e41b\",\n    \"id\": \"VNM522E2U\",\n    \"notify_on_close\": false,\n    \"previous_view_id\": null,\n    \"private_metadata\": \"\",\n    \"root_view_id\": \"VNN729E3U\",\n    \"state\": {\n      \"values\": {}\n    },\n    \"submit\": {\n      \"emoji\": true,\n      \"text\": \"Save\",\n      \"type\": \"plain_text\"\n    },\n    \"team_id\": \"T9M4RL1JM\",\n    \"title\": {\n      \"emoji\": true,\n      \"text\": \"Pushed Modal\",\n      \"type\": \"plain_text\"\n    },\n    \"type\": \"modal\"\n  }\n}"
				},
				{
					"id": "cb0e5c4c-6a44-40c6-8f88-23fa994cf025",
					"name": "Typical error response.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `none`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/views.push?trigger_id=amet&view=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"views.push"
							],
							"query": [
								{
									"key": "trigger_id",
									"value": "amet"
								},
								{
									"key": "view",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_arguments\",\n  \"ok\": false,\n  \"response_metadata\": {\n    \"messages\": [\n      \"missing required field: title\"\n    ]\n  }\n}"
				}
			]
		},
		{
			"name": "views update",
			"id": "a0dad248-f14d-49f9-8542-9d3304298ba7",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `none`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/views.update?view_id=amet&external_id=amet&view=amet&hash=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"views.update"
					],
					"query": [
						{
							"key": "view_id",
							"value": "amet",
							"description": "A unique identifier of the view to be updated. Either `view_id` or `external_id` is required."
						},
						{
							"key": "external_id",
							"value": "amet",
							"description": "A unique identifier of the view set by the developer. Must be unique for all views on a team. Max length of 255 characters. Either `view_id` or `external_id` is required."
						},
						{
							"key": "view",
							"value": "amet",
							"description": "A [view object](/reference/surfaces/views). This must be a JSON-encoded string."
						},
						{
							"key": "hash",
							"value": "amet",
							"description": "A string that represents view state to protect against possible race conditions."
						}
					]
				},
				"description": "Update an existing view."
			},
			"response": [
				{
					"id": "d8f7e211-8b2f-4730-89e6-7edb900bd2fd",
					"name": "Typical success response includes the updated view payload.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `none`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/views.update?view_id=amet&external_id=amet&view=amet&hash=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"views.update"
							],
							"query": [
								{
									"key": "view_id",
									"value": "amet"
								},
								{
									"key": "external_id",
									"value": "amet"
								},
								{
									"key": "view",
									"value": "amet"
								},
								{
									"key": "hash",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true,\n  \"view\": {\n    \"app_id\": \"AAD3351BQ\",\n    \"blocks\": [\n      {\n        \"accessory\": {\n          \"action_id\": \"button_4\",\n          \"text\": {\n            \"text\": \"Click me\",\n            \"type\": \"plain_text\"\n          },\n          \"type\": \"button\"\n        },\n        \"block_id\": \"s_block\",\n        \"text\": {\n          \"emoji\": true,\n          \"text\": \"I am but an updated modal\",\n          \"type\": \"plain_text\"\n        },\n        \"type\": \"section\"\n      }\n    ],\n    \"bot_id\": \"BADF7A34H\",\n    \"callback_id\": \"view_2\",\n    \"clear_on_close\": true,\n    \"close\": {\n      \"emoji\": true,\n      \"text\": \"Close\",\n      \"type\": \"plain_text\"\n    },\n    \"external_id\": \"\",\n    \"hash\": \"1569262015.55b5e41b\",\n    \"id\": \"VNM522E2U\",\n    \"notify_on_close\": false,\n    \"previous_view_id\": null,\n    \"private_metadata\": \"\",\n    \"root_view_id\": \"VNN729E3U\",\n    \"state\": {\n      \"values\": {}\n    },\n    \"submit\": null,\n    \"team_id\": \"T9M4RL1JM\",\n    \"title\": {\n      \"emoji\": true,\n      \"text\": \"Updated Modal\",\n      \"type\": \"plain_text\"\n    },\n    \"type\": \"modal\"\n  }\n}"
				},
				{
					"id": "e01c0339-7e09-4709-a8f9-b0f00716041d",
					"name": "Typical error response.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `none`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/views.update?view_id=amet&external_id=amet&view=amet&hash=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"views.update"
							],
							"query": [
								{
									"key": "view_id",
									"value": "amet"
								},
								{
									"key": "external_id",
									"value": "amet"
								},
								{
									"key": "view",
									"value": "amet"
								},
								{
									"key": "hash",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"not_found\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "workflows step Completed",
			"id": "4172ac98-9107-4c5b-8904-e5dcdae32b8e",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `workflow.steps:execute`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/workflows.stepCompleted?workflow_step_execute_id=amet&outputs=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"workflows.stepCompleted"
					],
					"query": [
						{
							"key": "workflow_step_execute_id",
							"value": "amet",
							"description": "(Required) Context identifier that maps to the correct workflow step execution."
						},
						{
							"key": "outputs",
							"value": "amet",
							"description": "Key-value object of outputs from your step. Keys of this object reflect the configured `key` properties of your [`outputs`](/reference/workflows/workflow_step#output) array from your `workflow_step` object."
						}
					]
				},
				"description": "Indicate that an app's step in a workflow completed execution."
			},
			"response": [
				{
					"id": "d0a950a4-50bb-4189-abf0-bd2286e44b91",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `workflow.steps:execute`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/workflows.stepCompleted?workflow_step_execute_id=amet&outputs=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workflows.stepCompleted"
							],
							"query": [
								{
									"key": "workflow_step_execute_id",
									"value": "amet"
								},
								{
									"key": "outputs",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "a0d5dbff-2dd0-409d-8722-49cf415fc16a",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `workflow.steps:execute`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/workflows.stepCompleted?workflow_step_execute_id=amet&outputs=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workflows.stepCompleted"
							],
							"query": [
								{
									"key": "workflow_step_execute_id",
									"value": "amet"
								},
								{
									"key": "outputs",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "workflows step Failed",
			"id": "2676df87-42c5-4c65-8071-3fbf76fbd206",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `workflow.steps:execute`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/workflows.stepFailed?workflow_step_execute_id=amet&error=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"workflows.stepFailed"
					],
					"query": [
						{
							"key": "workflow_step_execute_id",
							"value": "amet",
							"description": "(Required) Context identifier that maps to the correct workflow step execution."
						},
						{
							"key": "error",
							"value": "amet",
							"description": "(Required) A JSON-based object with a `message` property that should contain a human readable error message."
						}
					]
				},
				"description": "Indicate that an app's step in a workflow failed to execute."
			},
			"response": [
				{
					"id": "456f3fad-6e2c-4837-9721-1a06a359f1e7",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `workflow.steps:execute`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/workflows.stepFailed?workflow_step_execute_id=amet&error=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workflows.stepFailed"
							],
							"query": [
								{
									"key": "workflow_step_execute_id",
									"value": "amet"
								},
								{
									"key": "error",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "3818d344-94ce-4da0-936d-0f910b552a63",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `workflow.steps:execute`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/workflows.stepFailed?workflow_step_execute_id=amet&error=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workflows.stepFailed"
							],
							"query": [
								{
									"key": "workflow_step_execute_id",
									"value": "amet"
								},
								{
									"key": "error",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		},
		{
			"name": "workflows update Step",
			"id": "ca8ab6e5-916e-4c0a-86f8-8c630c6b3704",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2"
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) Authentication token. Requires scope: `workflow.steps:execute`",
						"key": "token",
						"value": "amet"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/workflows.updateStep?workflow_step_edit_id=amet&inputs=amet&outputs=amet&step_name=amet&step_image_url=amet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"workflows.updateStep"
					],
					"query": [
						{
							"key": "workflow_step_edit_id",
							"value": "amet",
							"description": "(Required) A context identifier provided with `view_submission` payloads used to call back to `workflows.updateStep`."
						},
						{
							"key": "inputs",
							"value": "amet",
							"description": "A JSON key-value map of inputs required from a user during configuration. This is the data your app expects to receive when the workflow step starts. **Please note**: the embedded variable format is set and replaced by the workflow system. You cannot create custom variables that will be replaced at runtime. [Read more about variables in workflow steps here](/workflows/steps#variables)."
						},
						{
							"key": "outputs",
							"value": "amet",
							"description": "An JSON array of output objects used during step execution. This is the data your app agrees to provide when your workflow step was executed."
						},
						{
							"key": "step_name",
							"value": "amet",
							"description": "An optional field that can be used to override the step name that is shown in the Workflow Builder."
						},
						{
							"key": "step_image_url",
							"value": "amet",
							"description": "An optional field that can be used to override app image that is shown in the Workflow Builder."
						}
					]
				},
				"description": "Update the configuration for a workflow extension step."
			},
			"response": [
				{
					"id": "d4f74a69-d700-4c21-b27b-6986694ff69e",
					"name": "Typical success response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `workflow.steps:execute`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/workflows.updateStep?workflow_step_edit_id=amet&inputs=amet&outputs=amet&step_name=amet&step_image_url=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workflows.updateStep"
							],
							"query": [
								{
									"key": "workflow_step_edit_id",
									"value": "amet"
								},
								{
									"key": "inputs",
									"value": "amet"
								},
								{
									"key": "outputs",
									"value": "amet"
								},
								{
									"key": "step_name",
									"value": "amet"
								},
								{
									"key": "step_image_url",
									"value": "amet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"ok\": true\n}"
				},
				{
					"id": "d9207505-554e-4479-85a2-c85b56bb90dd",
					"name": "Typical error response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: oauth2",
								"key": "Authorization",
								"value": "<token>"
							},
							{
								"description": "(Required) Authentication token. Requires scope: `workflow.steps:execute`",
								"key": "token",
								"value": "amet"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/workflows.updateStep?workflow_step_edit_id=amet&inputs=amet&outputs=amet&step_name=amet&step_image_url=amet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"workflows.updateStep"
							],
							"query": [
								{
									"key": "workflow_step_edit_id",
									"value": "amet"
								},
								{
									"key": "inputs",
									"value": "amet"
								},
								{
									"key": "outputs",
									"value": "amet"
								},
								{
									"key": "step_name",
									"value": "amet"
								},
								{
									"key": "step_image_url",
									"value": "amet"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"error\": \"invalid_auth\",\n  \"ok\": false\n}"
				}
			]
		}
	],
	"variable": [
		{
			"id": "eddfe4c5-e94b-48aa-aabe-e70ccd4709f6",
			"key": "baseUrl",
			"value": "https://slack.com/api",
			"type": "string"
		}
	]
}